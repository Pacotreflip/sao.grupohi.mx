{"version":3,"names":[],"mappings":"","sources":["app-vue.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n!function(e,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=n():\"function\"==typeof define&&define.amd?define(n):(e.__locale__es=e.__locale__es||{},e.__locale__es.js=n())}(this,function(){\"use strict\";var e={after:function(e,n){return\"El campo \"+e+\" debe ser posterior a \"+n[0]+\".\"},alpha_dash:function(e){return\"El campo \"+e+\" solo debe contener letras, números y guiones.\"},alpha_num:function(e){return\"El campo \"+e+\" solo debe contener letras y números.\"},alpha_spaces:function(e){return\"El campo \"+e+\" solo debe contener letras y espacios.\"},alpha:function(e){return\"El campo \"+e+\" solo debe contener letras.\"},before:function(e,n){return\"El campo \"+e+\" debe ser anterior a \"+n[0]+\".\"},between:function(e,n){return\"El campo \"+e+\" debe estar entre \"+n[0]+\" y \"+n[1]+\".\"},confirmed:function(e,n){return\"El campo \"+e+\" no coincide con \"+n[0]+\".\"},credit_card:function(e,n){n[0];return\"El campo \"+e+\" es inválido.\"},date_between:function(e,n){return\"El campo \"+e+\" debe estar entre \"+n[0]+\" y \"+n[1]+\".\"},date_format:function(e,n){return\"El campo \"+e+\" debe tener formato formato \"+n[0]+\".\"},decimal:function(e,n){void 0===n&&(n=[\"*\"]);var o=n[0];return\"El campo \"+e+\" debe ser númerico y contener \"+(\"*\"===o?\"\":o)+\" puntos decimales.\"},digits:function(e,n){return\"El campo \"+e+\" debe ser númerico y contener exactamente \"+n[0]+\" dígitos.\"},dimensions:function(e,n){return\"El campo \"+e+\" debe ser de \"+n[0]+\" pixeles por \"+n[1]+\" pixeles.\"},email:function(e){return\"El campo \"+e+\" debe ser un correo electrónico válido.\"},ext:function(e){return\"El campo \"+e+\" debe ser un archivo válido.\"},image:function(e){return\"El campo \"+e+\" debe ser una imagen.\"},in:function(e){return\"El campo \"+e+\" debe ser un valor válido.\"},ip:function(e){return\"El campo \"+e+\" debe ser una dirección ip válida.\"},max:function(e,n){return\"El campo \"+e+\" no debe ser mayor a \"+n[0]+\" caracteres.\"},max_value:function(e,n){return\"El campo \"+e+\" debe de ser \"+n[0]+\" o menor.\"},mimes:function(e){return\"El campo \"+e+\" debe ser un tipo de archivo válido.\"},min:function(e,n){return\"El campo \"+e+\" debe tener al menos \"+n[0]+\" caracteres.\"},min_value:function(e,n){return\"El campo \"+e+\" debe ser \"+n[0]+\" o superior.\"},not_in:function(e){return\"El campo \"+e+\" debe ser un valor válido.\"},numeric:function(e){return\"El campo \"+e+\" debe contener solo caracteres númericos.\"},regex:function(e){return\"El formato del campo \"+e+\" no es válido.\"},required:function(e){return\"El campo \"+e+\" es obligatorio.\"},size:function(e,n){return\"El campo \"+e+\" debe ser menor a \"+n[0]+\" KB.\"},url:function(e){return\"El campo \"+e+\" no es una URL válida.\"}},n={name:\"es\",messages:e,attributes:{}};return\"undefined\"!=typeof VeeValidate&&VeeValidate&&(VeeValidate.Validator,!0)&&VeeValidate.Validator.addLocale(n),n});\n},{}],2:[function(require,module,exports){\n/**\n * vee-validate v2.0.0-rc.5\n * (c) 2017 Abdelrahman Awad\n * @license MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.VeeValidate = factory());\n}(this, (function () { 'use strict';\n\n/**\n * Some Alpha Regex helpers.\n * https://github.com/chriso/validator.js/blob/master/src/lib/alpha.js\n */\n\nvar alpha$1 = {\n  en: /^[A-Z]*$/i,\n  cs: /^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]*$/i,\n  da: /^[A-ZÆØÅ]*$/i,\n  de: /^[A-ZÄÖÜß]*$/i,\n  es: /^[A-ZÁÉÍÑÓÚÜ]*$/i,\n  fr: /^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]*$/i,\n  nl: /^[A-ZÉËÏÓÖÜ]*$/i,\n  hu: /^[A-ZÁÉÍÓÖŐÚÜŰ]*$/i,\n  pl: /^[A-ZĄĆĘŚŁŃÓŻŹ]*$/i,\n  pt: /^[A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]*$/i,\n  ru: /^[А-ЯЁ]*$/i,\n  sr: /^[A-ZČĆŽŠĐ]*$/i,\n  tr: /^[A-ZÇĞİıÖŞÜ]*$/i,\n  uk: /^[А-ЩЬЮЯЄIЇҐ]*$/i,\n  ar: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]*$/\n};\n\nvar alphaSpaces = {\n  en: /^[A-Z\\s]*$/i,\n  cs: /^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ\\s]*$/i,\n  da: /^[A-ZÆØÅ\\s]*$/i,\n  de: /^[A-ZÄÖÜß\\s]*$/i,\n  es: /^[A-ZÁÉÍÑÓÚÜ\\s]*$/i,\n  fr: /^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ\\s]*$/i,\n  nl: /^[A-ZÉËÏÓÖÜ\\s]*$/i,\n  hu: /^[A-ZÁÉÍÓÖŐÚÜŰ\\s]*$/i,\n  pl: /^[A-ZĄĆĘŚŁŃÓŻŹ\\s]*$/i,\n  pt: /^[A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ\\s]*$/i,\n  ru: /^[А-ЯЁ\\s]*$/i,\n  sr: /^[A-ZČĆŽŠĐ\\s]*$/i,\n  tr: /^[A-ZÇĞİıÖŞÜ\\s]*$/i,\n  uk: /^[А-ЩЬЮЯЄIЇҐ\\s]*$/i,\n  ar: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ\\s]*$/\n};\n\nvar alphanumeric = {\n  en: /^[0-9A-Z]*$/i,\n  cs: /^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]*$/i,\n  da: /^[0-9A-ZÆØÅ]$/i,\n  de: /^[0-9A-ZÄÖÜß]*$/i,\n  es: /^[0-9A-ZÁÉÍÑÓÚÜ]*$/i,\n  fr: /^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]*$/i,\n  hu: /^[0-9A-ZÁÉÍÓÖŐÚÜŰ]*$/i,\n  nl: /^[0-9A-ZÉËÏÓÖÜ]*$/i,\n  pl: /^[0-9A-ZĄĆĘŚŁŃÓŻŹ]*$/i,\n  pt: /^[0-9A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]*$/i,\n  ru: /^[0-9А-ЯЁ]*$/i,\n  sr: /^[0-9A-ZČĆŽŠĐ]*$/i,\n  tr: /^[0-9A-ZÇĞİıÖŞÜ]*$/i,\n  uk: /^[0-9А-ЩЬЮЯЄIЇҐ]*$/i,\n  ar: /^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]*$/\n};\n\nvar alphaDash = {\n  en: /^[0-9A-Z_-]*$/i,\n  cs: /^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ_-]*$/i,\n  da: /^[0-9A-ZÆØÅ_-]*$/i,\n  de: /^[0-9A-ZÄÖÜß_-]*$/i,\n  es: /^[0-9A-ZÁÉÍÑÓÚÜ_-]*$/i,\n  fr: /^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ_-]*$/i,\n  nl: /^[0-9A-ZÉËÏÓÖÜ_-]*$/i,\n  hu: /^[0-9A-ZÁÉÍÓÖŐÚÜŰ_-]*$/i,\n  pl: /^[0-9A-ZĄĆĘŚŁŃÓŻŹ_-]*$/i,\n  pt: /^[0-9A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ_-]*$/i,\n  ru: /^[0-9А-ЯЁ_-]*$/i,\n  sr: /^[0-9A-ZČĆŽŠĐ_-]*$/i,\n  tr: /^[0-9A-ZÇĞİıÖŞÜ_-]*$/i,\n  uk: /^[0-9А-ЩЬЮЯЄIЇҐ_-]*$/i,\n  ar: /^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ_-]*$/\n};\n\nvar alpha$$1 = function (value, ref) {\n  if ( ref === void 0 ) ref = [null];\n  var locale = ref[0];\n\n  // Match at least one locale.\n  if (! locale) {\n    return Object.keys(alpha$1).some(function (loc) { return alpha$1[loc].test(value); });\n  }\n\n  return (alpha$1[locale] || alpha$1.en).test(value);\n};\n\nvar alpha_dash = function (value, ref) {\n  if ( ref === void 0 ) ref = [null];\n  var locale = ref[0];\n\n  // Match at least one locale.\n  if (! locale) {\n    return Object.keys(alphaDash).some(function (loc) { return alphaDash[loc].test(value); });\n  }\n\n  return (alphaDash[locale] || alphaDash.en).test(value);\n};\n\nvar alpha_num = function (value, ref) {\n  if ( ref === void 0 ) ref = [null];\n  var locale = ref[0];\n\n  // Match at least one locale.\n  if (! locale) {\n    return Object.keys(alphanumeric).some(function (loc) { return alphanumeric[loc].test(value); });\n  }\n\n  return (alphanumeric[locale] || alphanumeric.en).test(value);\n};\n\nvar alpha_spaces = function (value, ref) {\n  if ( ref === void 0 ) ref = [null];\n  var locale = ref[0];\n\n  // Match at least one locale.\n  if (! locale) {\n    return Object.keys(alphaSpaces).some(function (loc) { return alphaSpaces[loc].test(value); });\n  }\n\n  return (alphaSpaces[locale] || alphaSpaces.en).test(value);\n};\n\nvar between = function (value, ref) {\n\tvar min = ref[0];\n\tvar max = ref[1];\n\n\treturn Number(min) <= value && Number(max) >= value;\n};\n\nvar confirmed = function (value, ref, validatingField) {\n  var confirmedField = ref[0];\n\n  var field = confirmedField\n    ? document.querySelector((\"input[name='\" + confirmedField + \"']\"))\n    : document.querySelector((\"input[name='\" + validatingField + \"_confirmation']\"));\n\n  return !! (field && String(value) === field.value);\n};\n\nfunction unwrapExports (x) {\n\treturn x && x.__esModule ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar assertString_1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assertString;\nfunction assertString(input) {\n  if (typeof input !== 'string') {\n    throw new TypeError('This library (validator.js) validates strings only');\n  }\n}\nmodule.exports = exports['default'];\n});\n\nvar isCreditCard_1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isCreditCard;\n\n\n\nvar _assertString2 = _interopRequireDefault(assertString_1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable max-len */\nvar creditCard = /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})|62[0-9]{14}$/;\n/* eslint-enable max-len */\n\nfunction isCreditCard(str) {\n  (0, _assertString2.default)(str);\n  var sanitized = str.replace(/[^0-9]+/g, '');\n  if (!creditCard.test(sanitized)) {\n    return false;\n  }\n  var sum = 0;\n  var digit = void 0;\n  var tmpNum = void 0;\n  var shouldDouble = void 0;\n  for (var i = sanitized.length - 1; i >= 0; i--) {\n    digit = sanitized.substring(i, i + 1);\n    tmpNum = parseInt(digit, 10);\n    if (shouldDouble) {\n      tmpNum *= 2;\n      if (tmpNum >= 10) {\n        sum += tmpNum % 10 + 1;\n      } else {\n        sum += tmpNum;\n      }\n    } else {\n      sum += tmpNum;\n    }\n    shouldDouble = !shouldDouble;\n  }\n  return !!(sum % 10 === 0 ? sanitized : false);\n}\nmodule.exports = exports['default'];\n});\n\nvar isCreditCard = unwrapExports(isCreditCard_1);\n\nvar credit_card = function (value) { return isCreditCard(String(value)); };\n\nvar decimal = function (value, params) {\n  var decimals = Array.isArray(params) ? (params[0] || '*') : '*';\n  if (Array.isArray(value)) {\n    return false;\n  }\n\n  if (value === null || value === undefined || value === '') {\n    return true;\n  }\n\n    // if is 0.\n  if (Number(decimals) === 0) {\n    return /^-?\\d*$/.test(value);\n  }\n\n  var regexPart = decimals === '*' ? '+' : (\"{1,\" + decimals + \"}\");\n  var regex = new RegExp((\"^-?\\\\d*(\\\\.\\\\d\" + regexPart + \")?$\"));\n\n  if (! regex.test(value)) {\n    return false;\n  }\n\n  var parsedValue = parseFloat(value);\n\n    // eslint-disable-next-line\n    return parsedValue === parsedValue;\n};\n\nvar digits = function (value, ref) {\n  var length = ref[0];\n\n  var strVal = String(value);\n\n  return /^[0-9]*$/.test(strVal) && strVal.length === Number(length);\n};\n\nvar validateImage = function (file, width, height) {\n  var URL = window.URL || window.webkitURL;\n  return new Promise(function (resolve) {\n    var image = new Image();\n    image.onerror = function () { return resolve({ valid: false }); };\n    image.onload = function () { return resolve({\n      valid: image.width === Number(width) && image.height === Number(height)\n    }); };\n\n    image.src = URL.createObjectURL(file);\n  });\n};\n\nvar dimensions = function (files, ref) {\n  var width = ref[0];\n  var height = ref[1];\n\n  var list = [];\n  for (var i = 0; i < files.length; i++) {\n        // if file is not an image, reject.\n    if (! /\\.(jpg|svg|jpeg|png|bmp|gif)$/i.test(files[i].name)) {\n      return false;\n    }\n\n    list.push(files[i]);\n  }\n\n  return Promise.all(list.map(function (file) { return validateImage(file, width, height); }));\n};\n\nvar merge_1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = merge;\nfunction merge() {\n  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var defaults = arguments[1];\n\n  for (var key in defaults) {\n    if (typeof obj[key] === 'undefined') {\n      obj[key] = defaults[key];\n    }\n  }\n  return obj;\n}\nmodule.exports = exports['default'];\n});\n\nvar isByteLength_1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = isByteLength;\n\n\n\nvar _assertString2 = _interopRequireDefault(assertString_1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable prefer-rest-params */\nfunction isByteLength(str, options) {\n  (0, _assertString2.default)(str);\n  var min = void 0;\n  var max = void 0;\n  if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n    min = options.min || 0;\n    max = options.max;\n  } else {\n    // backwards compatibility: isByteLength(str, min [, max])\n    min = arguments[1];\n    max = arguments[2];\n  }\n  var len = encodeURI(str).split(/%..|./).length - 1;\n  return len >= min && (typeof max === 'undefined' || len <= max);\n}\nmodule.exports = exports['default'];\n});\n\nvar isFQDN = createCommonjsModule(function (module, exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isFDQN;\n\n\n\nvar _assertString2 = _interopRequireDefault(assertString_1);\n\n\n\nvar _merge2 = _interopRequireDefault(merge_1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_fqdn_options = {\n  require_tld: true,\n  allow_underscores: false,\n  allow_trailing_dot: false\n};\n\nfunction isFDQN(str, options) {\n  (0, _assertString2.default)(str);\n  options = (0, _merge2.default)(options, default_fqdn_options);\n\n  /* Remove the optional trailing dot before checking validity */\n  if (options.allow_trailing_dot && str[str.length - 1] === '.') {\n    str = str.substring(0, str.length - 1);\n  }\n  var parts = str.split('.');\n  if (options.require_tld) {\n    var tld = parts.pop();\n    if (!parts.length || !/^([a-z\\u00a1-\\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {\n      return false;\n    }\n  }\n  for (var part, i = 0; i < parts.length; i++) {\n    part = parts[i];\n    if (options.allow_underscores) {\n      part = part.replace(/_/g, '');\n    }\n    if (!/^[a-z\\u00a1-\\uffff0-9-]+$/i.test(part)) {\n      return false;\n    }\n    if (/[\\uff01-\\uff5e]/.test(part)) {\n      // disallow full-width chars\n      return false;\n    }\n    if (part[0] === '-' || part[part.length - 1] === '-') {\n      return false;\n    }\n  }\n  return true;\n}\nmodule.exports = exports['default'];\n});\n\nvar isEmail_1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEmail;\n\n\n\nvar _assertString2 = _interopRequireDefault(assertString_1);\n\n\n\nvar _merge2 = _interopRequireDefault(merge_1);\n\n\n\nvar _isByteLength2 = _interopRequireDefault(isByteLength_1);\n\n\n\nvar _isFQDN2 = _interopRequireDefault(isFQDN);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_email_options = {\n  allow_display_name: false,\n  require_display_name: false,\n  allow_utf8_local_part: true,\n  require_tld: true\n};\n\n/* eslint-disable max-len */\n/* eslint-disable no-control-regex */\nvar displayName = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\.\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\.\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF\\s]*<(.+)>$/i;\nvar emailUserPart = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]+$/i;\nvar quotedEmailUser = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]))*$/i;\nvar emailUserUtf8Part = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+$/i;\nvar quotedEmailUserUtf8 = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*$/i;\n/* eslint-enable max-len */\n/* eslint-enable no-control-regex */\n\nfunction isEmail(str, options) {\n  (0, _assertString2.default)(str);\n  options = (0, _merge2.default)(options, default_email_options);\n\n  if (options.require_display_name || options.allow_display_name) {\n    var display_email = str.match(displayName);\n    if (display_email) {\n      str = display_email[1];\n    } else if (options.require_display_name) {\n      return false;\n    }\n  }\n\n  var parts = str.split('@');\n  var domain = parts.pop();\n  var user = parts.join('@');\n\n  var lower_domain = domain.toLowerCase();\n  if (lower_domain === 'gmail.com' || lower_domain === 'googlemail.com') {\n    user = user.replace(/\\./g, '').toLowerCase();\n  }\n\n  if (!(0, _isByteLength2.default)(user, { max: 64 }) || !(0, _isByteLength2.default)(domain, { max: 256 })) {\n    return false;\n  }\n\n  if (!(0, _isFQDN2.default)(domain, { require_tld: options.require_tld })) {\n    return false;\n  }\n\n  if (user[0] === '\"') {\n    user = user.slice(1, user.length - 1);\n    return options.allow_utf8_local_part ? quotedEmailUserUtf8.test(user) : quotedEmailUser.test(user);\n  }\n\n  var pattern = options.allow_utf8_local_part ? emailUserUtf8Part : emailUserPart;\n\n  var user_parts = user.split('.');\n  for (var i = 0; i < user_parts.length; i++) {\n    if (!pattern.test(user_parts[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\nmodule.exports = exports['default'];\n});\n\nvar isEmail = unwrapExports(isEmail_1);\n\nvar email = function (value) { return isEmail(String(value)); };\n\nvar ext = function (files, extensions) {\n  var regex = new RegExp((\".(\" + (extensions.join('|')) + \")$\"), 'i');\n\n  return files.every(function (file) { return regex.test(file.name); });\n};\n\nvar image = function (files) { return files.every(function (file) { return /\\.(jpg|svg|jpeg|png|bmp|gif)$/i.test(file.name); }\n); };\n\nvar In = function (value, options) { return !! options.filter(function (option) { return option == value; }).length; }; // eslint-disable-line\n\nvar isIP_1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIP;\n\n\n\nvar _assertString2 = _interopRequireDefault(assertString_1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ipv4Maybe = /^(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})$/;\nvar ipv6Block = /^[0-9A-F]{1,4}$/i;\n\nfunction isIP(str) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  (0, _assertString2.default)(str);\n  version = String(version);\n  if (!version) {\n    return isIP(str, 4) || isIP(str, 6);\n  } else if (version === '4') {\n    if (!ipv4Maybe.test(str)) {\n      return false;\n    }\n    var parts = str.split('.').sort(function (a, b) {\n      return a - b;\n    });\n    return parts[3] <= 255;\n  } else if (version === '6') {\n    var blocks = str.split(':');\n    var foundOmissionBlock = false; // marker to indicate ::\n\n    // At least some OS accept the last 32 bits of an IPv6 address\n    // (i.e. 2 of the blocks) in IPv4 notation, and RFC 3493 says\n    // that '::ffff:a.b.c.d' is valid for IPv4-mapped IPv6 addresses,\n    // and '::a.b.c.d' is deprecated, but also valid.\n    var foundIPv4TransitionBlock = isIP(blocks[blocks.length - 1], 4);\n    var expectedNumberOfBlocks = foundIPv4TransitionBlock ? 7 : 8;\n\n    if (blocks.length > expectedNumberOfBlocks) {\n      return false;\n    }\n    // initial or final ::\n    if (str === '::') {\n      return true;\n    } else if (str.substr(0, 2) === '::') {\n      blocks.shift();\n      blocks.shift();\n      foundOmissionBlock = true;\n    } else if (str.substr(str.length - 2) === '::') {\n      blocks.pop();\n      blocks.pop();\n      foundOmissionBlock = true;\n    }\n\n    for (var i = 0; i < blocks.length; ++i) {\n      // test for a :: which can not be at the string start/end\n      // since those cases have been handled above\n      if (blocks[i] === '' && i > 0 && i < blocks.length - 1) {\n        if (foundOmissionBlock) {\n          return false; // multiple :: in address\n        }\n        foundOmissionBlock = true;\n      } else if (foundIPv4TransitionBlock && i === blocks.length - 1) {\n        // it has been checked before that the last\n        // block is a valid IPv4 address\n      } else if (!ipv6Block.test(blocks[i])) {\n        return false;\n      }\n    }\n    if (foundOmissionBlock) {\n      return blocks.length >= 1;\n    }\n    return blocks.length === expectedNumberOfBlocks;\n  }\n  return false;\n}\nmodule.exports = exports['default'];\n});\n\nvar isIP = unwrapExports(isIP_1);\n\nvar ip = function (value, ref) {\n\tif ( ref === void 0 ) ref = [4];\n\tvar version = ref[0];\n\n\treturn isIP(value, version);\n};\n\nvar max = function (value, ref) {\n  var length = ref[0];\n\n  if (value === undefined || value === null) {\n    return length >= 0;\n  }\n\n  return String(value).length <= length;\n};\n\nvar max_value = function (value, ref) {\n  var max = ref[0];\n\n  if (Array.isArray(value) || value === null || value === undefined || value === '') {\n    return false;\n  }\n\n  return Number(value) <= max;\n};\n\nvar mimes = function (files, mimes) {\n  var regex = new RegExp(((mimes.join('|').replace('*', '.+')) + \"$\"), 'i');\n\n  return files.every(function (file) { return regex.test(file.type); });\n};\n\nvar min = function (value, ref) {\n  var length = ref[0];\n\n  if (value === undefined || value === null) {\n    return false;\n  }\n  return String(value).length >= length;\n};\n\nvar min_value = function (value, ref) {\n  var min = ref[0];\n\n  if (Array.isArray(value) || value === null || value === undefined || value === '') {\n    return false;\n  }\n\n  return Number(value) >= min;\n};\n\nvar not_in = function (value, options) { return ! options.filter(function (option) { return option == value; }).length; }; // eslint-disable-line\n\nvar numeric = function (value) { return /^[0-9]+$/.test(String(value)); };\n\nvar regex = function (value, ref) {\n  var regex = ref[0];\n  var flags = ref.slice(1);\n\n  if (regex instanceof RegExp) {\n    return regex.test(value);\n  }\n\n  return new RegExp(regex, flags).test(String(value));\n};\n\nvar required = function (value) {\n  if (Array.isArray(value)) {\n    return !! value.length;\n  }\n\n  if (value === undefined || value === null || value === false) {\n    return false;\n  }\n\n  return !! String(value).trim().length;\n};\n\nvar size = function (files, ref) {\n  var size = ref[0];\n\n  if (isNaN(size)) {\n    return false;\n  }\n\n  var nSize = Number(size) * 1024;\n  for (var i = 0; i < files.length; i++) {\n    if (files[i].size > nSize) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar isURL_1 = createCommonjsModule(function (module, exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isURL;\n\n\n\nvar _assertString2 = _interopRequireDefault(assertString_1);\n\n\n\nvar _isFQDN2 = _interopRequireDefault(isFQDN);\n\n\n\nvar _isIP2 = _interopRequireDefault(isIP_1);\n\n\n\nvar _merge2 = _interopRequireDefault(merge_1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_url_options = {\n  protocols: ['http', 'https', 'ftp'],\n  require_tld: true,\n  require_protocol: false,\n  require_host: true,\n  require_valid_protocol: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_protocol_relative_urls: false\n};\n\nvar wrapped_ipv6 = /^\\[([^\\]]+)\\](?::([0-9]+))?$/;\n\nfunction isRegExp(obj) {\n  return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\n\nfunction checkHost(host, matches) {\n  for (var i = 0; i < matches.length; i++) {\n    var match = matches[i];\n    if (host === match || isRegExp(match) && match.test(host)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isURL(url, options) {\n  (0, _assertString2.default)(url);\n  if (!url || url.length >= 2083 || /[\\s<>]/.test(url)) {\n    return false;\n  }\n  if (url.indexOf('mailto:') === 0) {\n    return false;\n  }\n  options = (0, _merge2.default)(options, default_url_options);\n  var protocol = void 0,\n      auth = void 0,\n      host = void 0,\n      hostname = void 0,\n      port = void 0,\n      port_str = void 0,\n      split = void 0,\n      ipv6 = void 0;\n\n  split = url.split('#');\n  url = split.shift();\n\n  split = url.split('?');\n  url = split.shift();\n\n  split = url.split('://');\n  if (split.length > 1) {\n    protocol = split.shift();\n    if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {\n      return false;\n    }\n  } else if (options.require_protocol) {\n    return false;\n  } else if (options.allow_protocol_relative_urls && url.substr(0, 2) === '//') {\n    split[0] = url.substr(2);\n  }\n  url = split.join('://');\n\n  split = url.split('/');\n  url = split.shift();\n\n  if (url === '' && !options.require_host) {\n    return true;\n  }\n\n  split = url.split('@');\n  if (split.length > 1) {\n    auth = split.shift();\n    if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {\n      return false;\n    }\n  }\n  hostname = split.join('@');\n\n  port_str = ipv6 = null;\n  var ipv6_match = hostname.match(wrapped_ipv6);\n  if (ipv6_match) {\n    host = '';\n    ipv6 = ipv6_match[1];\n    port_str = ipv6_match[2] || null;\n  } else {\n    split = hostname.split(':');\n    host = split.shift();\n    if (split.length) {\n      port_str = split.join(':');\n    }\n  }\n\n  if (port_str !== null) {\n    port = parseInt(port_str, 10);\n    if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {\n      return false;\n    }\n  }\n\n  if (!(0, _isIP2.default)(host) && !(0, _isFQDN2.default)(host, options) && (!ipv6 || !(0, _isIP2.default)(ipv6, 6)) && host !== 'localhost') {\n    return false;\n  }\n\n  host = host || ipv6;\n\n  if (options.host_whitelist && !checkHost(host, options.host_whitelist)) {\n    return false;\n  }\n  if (options.host_blacklist && checkHost(host, options.host_blacklist)) {\n    return false;\n  }\n\n  return true;\n}\nmodule.exports = exports['default'];\n});\n\nvar isURL = unwrapExports(isURL_1);\n\nvar url = function (value, ref) {\n        if ( ref === void 0 ) ref = [true];\n        var requireProtocol = ref[0];\n\n        return isURL(value, { require_protocol: !! requireProtocol });\n};\n\n/* eslint-disable camelcase */\nvar Rules = {\n  alpha_dash: alpha_dash,\n  alpha_num: alpha_num,\n  alpha_spaces: alpha_spaces,\n  alpha: alpha$$1,\n  between: between,\n  confirmed: confirmed,\n  credit_card: credit_card,\n  decimal: decimal,\n  digits: digits,\n  dimensions: dimensions,\n  email: email,\n  ext: ext,\n  image: image,\n  in: In,\n  ip: ip,\n  max: max,\n  max_value: max_value,\n  mimes: mimes,\n  min: min,\n  min_value: min_value,\n  not_in: not_in,\n  numeric: numeric,\n  regex: regex,\n  required: required,\n  size: size,\n  url: url\n};\n\nvar ErrorBag = function ErrorBag() {\n  this.errors = [];\n};\n\n  /**\n   * Adds an error to the internal array.\n   *\n   * @param {string} field The field name.\n   * @param {string} msg The error message.\n   * @param {String} rule The rule that is responsible for the error.\n   * @param {String} scope The Scope name, optional.\n   */\nErrorBag.prototype.add = function add (field, msg, rule, scope) {\n    if ( scope === void 0 ) scope = '__global__';\n\n  this.errors.push({ field: field, msg: msg, rule: rule, scope: scope });\n};\n\n  /**\n   * Gets all error messages from the internal array.\n   *\n   * @param {String} scope The Scope name, optional.\n   * @return {Array} errors Array of all error messages.\n   */\nErrorBag.prototype.all = function all (scope) {\n  if (! scope) {\n    return this.errors.map(function (e) { return e.msg; });\n  }\n\n  return this.errors.filter(function (e) { return e.scope === scope; }).map(function (e) { return e.msg; });\n};\n\n  /**\n   * Checks if there are any errors in the internal array.\n   * @param {String} scope The Scope name, optional.\n   * @return {boolean} result True if there was at least one error, false otherwise.\n   */\nErrorBag.prototype.any = function any (scope) {\n  if (! scope) {\n    return !! this.errors.length;\n  }\n\n  return !! this.errors.filter(function (e) { return e.scope === scope; }).length;\n};\n\n  /**\n   * Removes all items from the internal array.\n   *\n   * @param {String} scope The Scope name, optional.\n   */\nErrorBag.prototype.clear = function clear (scope) {\n  if (! scope) {\n    scope = '__global__';\n  }\n\n  this.errors = this.errors.filter(function (e) { return e.scope !== scope; });\n};\n\n  /**\n   * Collects errors into groups or for a specific field.\n   *\n   * @param{string} field The field name.\n   * @param{string} scope The scope name.\n   * @param {Boolean} map If it should map the errors to strings instead of objects.\n   * @return {Array} errors The errors for the specified field.\n   */\nErrorBag.prototype.collect = function collect (field, scope, map) {\n    if ( map === void 0 ) map = true;\n\n  if (! field) {\n    var collection = {};\n    this.errors.forEach(function (e) {\n      if (! collection[e.field]) {\n        collection[e.field] = [];\n      }\n\n      collection[e.field].push(map ? e.msg : e);\n    });\n\n    return collection;\n  }\n\n  if (! scope) {\n    return this.errors.filter(function (e) { return e.field === field; }).map(function (e) { return (map ? e.msg : e); });\n  }\n\n  return this.errors.filter(function (e) { return e.field === field && e.scope === scope; })\n                    .map(function (e) { return (map ? e.msg : e); });\n};\n  /**\n   * Gets the internal array length.\n   *\n   * @return {Number} length The internal array length.\n   */\nErrorBag.prototype.count = function count () {\n  return this.errors.length;\n};\n\n  /**\n   * Gets the first error message for a specific field.\n   *\n   * @param{string} field The field name.\n   * @return {string|null} message The error message.\n   */\nErrorBag.prototype.first = function first (field, scope) {\n    var this$1 = this;\n    if ( scope === void 0 ) scope = '__global__';\n\n  var selector = this._selector(field);\n  var scoped = this._scope(field);\n\n  if (scoped) {\n    var result = this.first(scoped.name, scoped.scope);\n    // if such result exist, return it. otherwise it could be a field.\n    // with dot in its name.\n    if (result) {\n      return result;\n    }\n  }\n\n  if (selector) {\n    return this.firstByRule(selector.name, selector.rule, scope);\n  }\n\n  for (var i = 0; i < this.errors.length; i++) {\n    if (this$1.errors[i].field === field && (this$1.errors[i].scope === scope)) {\n      return this$1.errors[i].msg;\n    }\n  }\n\n  return null;\n};\n\n  /**\n   * Returns the first error rule for the specified field\n   *\n   * @param {string} field The specified field.\n   * @return {string|null} First error rule on the specified field if one is found, otherwise null\n   */\nErrorBag.prototype.firstRule = function firstRule (field, scope) {\n  var errors = this.collect(field, scope, false);\n\n  return (errors.length && errors[0].rule) || null;\n};\n\n  /**\n   * Checks if the internal array has at least one error for the specified field.\n   *\n   * @param{string} field The specified field.\n   * @return {Boolean} result True if at least one error is found, false otherwise.\n   */\nErrorBag.prototype.has = function has (field, scope) {\n    if ( scope === void 0 ) scope = '__global__';\n\n  return !! this.first(field, scope);\n};\n\n  /**\n   * Gets the first error message for a specific field and a rule.\n   * @param {String} name The name of the field.\n   * @param {String} rule The name of the rule.\n   * @param {String} scope The name of the scope (optional).\n   */\nErrorBag.prototype.firstByRule = function firstByRule (name, rule, scope) {\n  var error = this.collect(name, scope, false).filter(function (e) { return e.rule === rule; })[0];\n\n  return (error && error.msg) || null;\n};\n\n  /**\n   * Removes all error messages associated with a specific field.\n   *\n   * @param{string} field The field which messages are to be removed.\n   * @param {String} scope The Scope name, optional.\n   */\nErrorBag.prototype.remove = function remove (field, scope) {\n  var filter = scope ? (function (e) { return e.field !== field || e.scope !== scope; }) :\n                         (function (e) { return e.field !== field || e.scope !== '__global__'; });\n\n  this.errors = this.errors.filter(filter);\n};\n\n\n  /**\n   * Get the field attributes if there's a rule selector.\n   *\n   * @param{string} field The specified field.\n   * @return {Object|null}\n   */\nErrorBag.prototype._selector = function _selector (field) {\n  if (field.indexOf(':') > -1) {\n    var ref = field.split(':');\n      var name = ref[0];\n      var rule = ref[1];\n\n    return { name: name, rule: rule };\n  }\n\n  return null;\n};\n\n  /**\n   * Get the field scope if specified using dot notation.\n   *\n   * @param {string} field the specifie field.\n   * @return {Object|null}\n   */\nErrorBag.prototype._scope = function _scope (field) {\n  if (field.indexOf('.') > -1) {\n    var ref = field.split('.');\n      var scope = ref[0];\n      var name = ref[1];\n\n    return { name: name, scope: scope };\n  }\n\n  return null;\n};\n\nvar ValidatorException = (function () {\n  function anonymous(msg) {\n    this.msg = \"[vee-validate]: \" + msg;\n  }\n\n  anonymous.prototype.toString = function toString () {\n    return this.msg;\n  };\n\n  return anonymous;\n}());\n\n/**\n * Gets the data attribute. the name must be kebab-case.\n */\nvar getDataAttribute = function (el, name) { return el.getAttribute((\"data-vv-\" + name)); };\n\n/**\n * Determines the input field scope.\n */\nvar getScope = function (el) {\n  var scope = getDataAttribute(el, 'scope');\n  if (! scope && el.form) {\n    scope = getDataAttribute(el.form, 'scope');\n  }\n\n  return scope;\n};\n\n/**\n * Gets the value in an object safely.\n * @param {String} propPath\n * @param {Object} target\n * @param {*} def\n */\nvar getPath = function (propPath, target, def) {\n  if ( def === void 0 ) def = undefined;\n\n  if (!propPath || !target) { return def; }\n\n  var value = target;\n  propPath.split('.').every(function (prop) {\n    if (! Object.prototype.hasOwnProperty.call(value, prop)) {\n      value = def;\n\n      return false;\n    }\n\n    value = value[prop];\n\n    return true;\n  });\n\n  return value;\n};\n\n/**\n * Debounces a function.\n */\nvar debounce = function (callback, wait, immediate) {\n  if ( wait === void 0 ) wait = 0;\n  if ( immediate === void 0 ) immediate = true;\n\n  var timeout;\n\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var later = function () {\n      timeout = null;\n      if (!immediate) { callback.apply(void 0, args); }\n    };\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) { callback.apply(void 0, args); }\n  };\n};\n\n/**\n * Emits a warning to the console.\n */\nvar warn = function (message) {\n  if (! console) {\n    return;\n  }\n\n    console.warn((\"[vee-validate]: \" + message)); // eslint-disable-line\n};\n\n/**\n * Checks if the value is an object.\n */\nvar isObject = function (object) { return object !== null && object && typeof object === 'object' && ! Array.isArray(object); };\n\n/**\n * Checks if a function is callable.\n */\nvar isCallable = function (func) { return typeof func === 'function'; };\n\n/**\n * Check if element has the css class on it.\n */\nvar hasClass = function (el, className) {\n  if (el.classList) {\n    return el.classList.contains(className);\n  }\n\n  return !!el.className.match(new RegExp((\"(\\\\s|^)\" + className + \"(\\\\s|$)\")));\n};\n\n/**\n * Adds the provided css className to the element.\n */\nvar addClass = function (el, className) {\n  if (el.classList) {\n    el.classList.add(className);\n    return;\n  }\n\n  if (!hasClass(el, className)) {\n    el.className += \" \" + className;\n  }\n};\n\n/**\n * Remove the provided css className from the element.\n */\nvar removeClass = function (el, className) {\n  if (el.classList) {\n    el.classList.remove(className);\n    return;\n  }\n\n  if (hasClass(el, className)) {\n    var reg = new RegExp((\"(\\\\s|^)\" + className + \"(\\\\s|$)\"));\n    el.className = el.className.replace(reg, ' ');\n  }\n};\n\n/**\n * Converts an array-like object to array.\n * Simple polyfill for Array.from\n */\nvar toArray = function (arrayLike) {\n  if (Array.from) {\n    return Array.from(arrayLike);\n  }\n\n  var array = [];\n  var length = arrayLike.length;\n  for (var i = 0; i < length; i++) {\n    array.push(arrayLike[i]);\n  }\n\n  return array;\n};\n\n/**\n * Assign polyfill from the mdn.\n */\nvar assign = function (target) {\n  var others = [], len = arguments.length - 1;\n  while ( len-- > 0 ) others[ len ] = arguments[ len + 1 ];\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [ target ].concat( others ));\n  }\n\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var to = Object(target);\n  others.forEach(function (arg) {\n    // Skip over if undefined or null\n    if (arg != null) {\n      Object.keys(arg).forEach(function (key) {\n        to[key] = arg[key];\n      });\n    }\n  });\n\n  return to;\n};\n\n/**\n * polyfills array.find\n * @param {Array} array\n * @param {Function} predicate\n */\nvar find = function (array, predicate) {\n  if (array.find) {\n    return array.find(predicate);\n  }\n\n  var result;\n  array.some(function (item) {\n    if (predicate(item)) {\n      result = item;\n      return true;\n    }\n\n    return false;\n  });\n\n  return result;\n};\n\n/**\n * Gets the rules from a binding value or the element dataset.\n *\n * @param {String} expression The binding expression.\n * @param {Object|String} value The binding value.\n * @param {element} el The element.\n * @returns {String|Object}\n */\nvar getRules = function (expression, value, el) {\n  if (! expression) {\n    return getDataAttribute(el, 'rules');\n  }\n\n  if (typeof value === 'string') {\n    return value;\n  }\n\n  if (~['string', 'object'].indexOf(typeof value.rules)) {\n    return value.rules;\n  }\n\n  return value;\n};\n\nvar Dictionary = function Dictionary(dictionary) {\n  if ( dictionary === void 0 ) dictionary = {};\n\n  this.dictionary = {};\n  this.merge(dictionary);\n};\n\nDictionary.prototype.hasLocale = function hasLocale (locale) {\n  return !! this.dictionary[locale];\n};\n\nDictionary.prototype.getMessage = function getMessage (locale, key, fallback) {\n  if (! this.hasMessage(locale, key)) {\n    return fallback || this._getDefaultMessage(locale);\n  }\n\n  return this.dictionary[locale].messages[key];\n};\n\n/**\n * Gets a specific message for field. fallsback to the rule message.\n *\n * @param {String} locale\n * @param {String} field\n * @param {String} key\n */\nDictionary.prototype.getFieldMessage = function getFieldMessage (locale, field, key) {\n  if (! this.hasLocale(locale)) {\n    return this.getMessage(locale, key);\n  }\n\n  var dict = this.dictionary[locale].custom && this.dictionary[locale].custom[field];\n  if (! dict || ! dict[key]) {\n    return this.getMessage(locale, key);\n  }\n\n  return dict[key];\n};\n\nDictionary.prototype._getDefaultMessage = function _getDefaultMessage (locale) {\n  if (this.hasMessage(locale, '_default')) {\n    return this.dictionary[locale].messages._default;\n  }\n\n  return this.dictionary.en.messages._default;\n};\n\nDictionary.prototype.getAttribute = function getAttribute (locale, key, fallback) {\n    if ( fallback === void 0 ) fallback = '';\n\n  if (! this.hasAttribute(locale, key)) {\n    return fallback;\n  }\n\n  return this.dictionary[locale].attributes[key];\n};\n\nDictionary.prototype.hasMessage = function hasMessage (locale, key) {\n  return !! (\n          this.hasLocale(locale) &&\n          this.dictionary[locale].messages &&\n          this.dictionary[locale].messages[key]\n      );\n};\n\nDictionary.prototype.hasAttribute = function hasAttribute (locale, key) {\n  return !! (\n          this.hasLocale(locale) &&\n          this.dictionary[locale].attributes &&\n          this.dictionary[locale].attributes[key]\n      );\n};\n\nDictionary.prototype.merge = function merge (dictionary) {\n  this._merge(this.dictionary, dictionary);\n};\n\nDictionary.prototype.setMessage = function setMessage (locale, key, message) {\n  if (! this.hasLocale(locale)) {\n    this.dictionary[locale] = {\n      messages: {},\n      attributes: {}\n    };\n  }\n\n  this.dictionary[locale].messages[key] = message;\n};\n\nDictionary.prototype.setAttribute = function setAttribute (locale, key, attribute) {\n  if (! this.hasLocale(locale)) {\n    this.dictionary[locale] = {\n      messages: {},\n      attributes: {}\n    };\n  }\n\n  this.dictionary[locale].attributes[key] = attribute;\n};\n\nDictionary.prototype._merge = function _merge (target, source) {\n    var this$1 = this;\n\n  if (! (isObject(target) && isObject(source))) {\n    return target;\n  }\n\n  Object.keys(source).forEach(function (key) {\n    if (isObject(source[key])) {\n      if (! target[key]) {\n        assign(target, ( obj = {}, obj[key] = {}, obj ));\n          var obj;\n      }\n\n      this$1._merge(target[key], source[key]);\n      return;\n    }\n\n    assign(target, ( obj$1 = {}, obj$1[key] = source[key], obj$1 ));\n      var obj$1;\n  });\n\n  return target;\n};\n\n/* istanbul ignore next */\nvar messages = {\n  _default: function (field) { return (\"The \" + field + \" value is not valid.\"); },\n  alpha_dash: function (field) { return (\"The \" + field + \" field may contain alpha-numeric characters as well as dashes and underscores.\"); },\n  alpha_num: function (field) { return (\"The \" + field + \" field may only contain alpha-numeric characters.\"); },\n  alpha_spaces: function (field) { return (\"The \" + field + \" field may only contain alphabetic characters as well as spaces.\"); },\n  alpha: function (field) { return (\"The \" + field + \" field may only contain alphabetic characters.\"); },\n  between: function (field, ref) {\n    var min = ref[0];\n    var max = ref[1];\n\n    return (\"The \" + field + \" field must be between \" + min + \" and \" + max + \".\");\n},\n  confirmed: function (field) { return (\"The \" + field + \" confirmation does not match.\"); },\n  credit_card: function (field) { return (\"The \" + field + \" field is invalid.\"); },\n  decimal: function (field, ref) {\n    if ( ref === void 0 ) ref = ['*'];\n    var decimals = ref[0];\n\n    return (\"The \" + field + \" field must be numeric and may contain \" + (decimals === '*' ? '' : decimals) + \" decimal points.\");\n},\n  digits: function (field, ref) {\n    var length = ref[0];\n\n    return (\"The \" + field + \" field must be numeric and exactly contain \" + length + \" digits.\");\n},\n  dimensions: function (field, ref) {\n    var width = ref[0];\n    var height = ref[1];\n\n    return (\"The \" + field + \" field must be \" + width + \" pixels by \" + height + \" pixels.\");\n},\n  email: function (field) { return (\"The \" + field + \" field must be a valid email.\"); },\n  ext: function (field) { return (\"The \" + field + \" field must be a valid file.\"); },\n  image: function (field) { return (\"The \" + field + \" field must be an image.\"); },\n  in: function (field) { return (\"The \" + field + \" field must be a valid value.\"); },\n  ip: function (field) { return (\"The \" + field + \" field must be a valid ip address.\"); },\n  max: function (field, ref) {\n    var length = ref[0];\n\n    return (\"The \" + field + \" field may not be greater than \" + length + \" characters.\");\n},\n  max_value: function (field, ref) {\n    var max = ref[0];\n\n    return (\"The \" + field + \" field must be \" + max + \" or less.\");\n},\n  mimes: function (field) { return (\"The \" + field + \" field must have a valid file type.\"); },\n  min: function (field, ref) {\n    var length = ref[0];\n\n    return (\"The \" + field + \" field must be at least \" + length + \" characters.\");\n},\n  min_value: function (field, ref) {\n    var min = ref[0];\n\n    return (\"The \" + field + \" field must be \" + min + \" or more.\");\n},\n  not_in: function (field) { return (\"The \" + field + \" field must be a valid value.\"); },\n  numeric: function (field) { return (\"The \" + field + \" field may only contain numeric characters.\"); },\n  regex: function (field) { return (\"The \" + field + \" field format is invalid.\"); },\n  required: function (field) { return (\"The \" + field + \" field is required.\"); },\n  size: function (field, ref) {\n    var size = ref[0];\n\n    return (\"The \" + field + \" field must be less than \" + size + \" KB.\");\n},\n  url: function (field) { return (\"The \" + field + \" field is not a valid URL.\"); }\n};\n\nvar after = function (moment) { return function (value, ref) {\n  var targetField = ref[0];\n  var inclusion = ref[1];\n  var format = ref[2];\n\n  var field = document.querySelector((\"input[name='\" + targetField + \"']\"));\n  if (typeof format === 'undefined') {\n    format = inclusion;\n    inclusion = false;\n  }\n  var dateValue = moment(value, format, true);\n  var otherValue = moment(field ? field.value : targetField, format, true);\n\n  // if either is not valid.\n  if (! dateValue.isValid() || ! otherValue.isValid()) {\n    return false;\n  }\n\n  return dateValue.isAfter(otherValue) || (inclusion && dateValue.isSame(otherValue));\n}; };\n\nvar before = function (moment) { return function (value, ref) {\n  var targetField = ref[0];\n  var inclusion = ref[1];\n  var format = ref[2];\n\n  var field = document.querySelector((\"input[name='\" + targetField + \"']\"));\n  if (typeof format === 'undefined') {\n    format = inclusion;\n    inclusion = false;\n  }\n  var dateValue = moment(value, format, true);\n  var otherValue = moment(field ? field.value : targetField, format, true);\n\n  // if either is not valid.\n  if (! dateValue.isValid() || ! otherValue.isValid()) {\n    return false;\n  }\n\n  return dateValue.isBefore(otherValue) || (inclusion && dateValue.isSame(otherValue));\n}; };\n\nvar date_format = function (moment) { return function (value, ref) {\n\tvar format = ref[0];\n\n\treturn moment(value, format, true).isValid();\n }\t};\n\nvar date_between = function (moment) { return function (value, params) {\n  var min;\n  var max;\n  var format;\n  var inclusivity = '()';\n\n  if (params.length > 3) {\n    var assign;\n    (assign = params, min = assign[0], max = assign[1], inclusivity = assign[2], format = assign[3]);\n  } else {\n    var assign$1;\n    (assign$1 = params, min = assign$1[0], max = assign$1[1], format = assign$1[2]);\n  }\n\n  var minDate = moment(min, format, true);\n  var maxDate = moment(max, format, true);\n  var dateVal = moment(value, format, true);\n\n  if (! (minDate.isValid() && maxDate.isValid() && dateVal.isValid())) {\n    return false;\n  }\n\n  return dateVal.isBetween(minDate, maxDate, 'days', inclusivity);\n}; };\n\n/* istanbul ignore next */\n/* eslint-disable max-len */\nvar messages$1 = {\n  after: function (field, ref) {\n    var target = ref[0];\n\n    return (\"The \" + field + \" must be after \" + target + \".\");\n},\n  before: function (field, ref) {\n    var target = ref[0];\n\n    return (\"The \" + field + \" must be before \" + target + \".\");\n},\n  date_between: function (field, ref) {\n    var min = ref[0];\n    var max = ref[1];\n\n    return (\"The \" + field + \" must be between \" + min + \" and \" + max + \".\");\n},\n  date_format: function (field, ref) {\n    var format = ref[0];\n\n    return (\"The \" + field + \" must be in the format \" + format + \".\");\n}\n};\n\nvar date = {\n  make: function (moment) { return ({\n    date_format: date_format(moment),\n    after: after(moment),\n    before: before(moment),\n    date_between: date_between(moment)\n  }); },\n  messages: messages$1,\n  installed: false\n};\n\nvar LOCALE = 'en';\nvar STRICT_MODE = true;\nvar DICTIONARY = new Dictionary({\n  en: {\n    messages: messages,\n    attributes: {},\n    custom: {}\n  }\n});\n\nvar Validator = function Validator(validations, options) {\n  if ( options === void 0 ) options = { init: true, vm: null };\n\n  this.strictMode = STRICT_MODE;\n  this.$scopes = { __global__: {} };\n  this._createFields(validations);\n  this.errorBag = new ErrorBag();\n  this.fieldBag = {};\n  this.paused = false;\n  this.$vm = options.vm;\n\n  // Some fields will be later evaluated, because the vm isn't mounted yet\n  // so it may register it under an inaccurate scope.\n  this.$deferred = [];\n  this.$ready = false;\n\n  // if momentjs is present, install the validators.\n  if (typeof moment === 'function') {\n    // eslint-disable-next-line\n    this.installDateTimeValidators(moment);\n  }\n\n  if (options.init) {\n    this.init();\n  }\n};\n\nvar prototypeAccessors = { dictionary: {},locale: {},rules: {} };\n\n/**\n * @return {Dictionary}\n */\nprototypeAccessors.dictionary.get = function () {\n  return DICTIONARY;\n};\n\n/**\n * @return {String}\n */\nprototypeAccessors.locale.get = function () {\n  return LOCALE;\n};\n\n/**\n * @return {Object}\n */\nprototypeAccessors.rules.get = function () {\n  return Rules;\n};\n\n/**\n * Merges a validator object into the Rules and Messages.\n *\n * @param{string} name The name of the validator.\n * @param{function|object} validator The validator object.\n */\nValidator._merge = function _merge (name, validator) {\n  if (isCallable(validator)) {\n    Rules[name] = validator;\n    return;\n  }\n\n  Rules[name] = validator.validate;\n  if (isCallable(validator.getMessage)) {\n    DICTIONARY.setMessage(LOCALE, name, validator.getMessage);\n  }\n\n  if (validator.messages) {\n    DICTIONARY.merge(\n      Object.keys(validator.messages).reduce(function (prev, curr) {\n        var dict = prev;\n        dict[curr] = {\n          messages: ( obj = {}, obj[name] = validator.messages[curr], obj )\n        };\n          var obj;\n\n        return dict;\n      }, {})\n    );\n  }\n};\n\n/**\n * Guards from extnsion violations.\n *\n * @param{string} name name of the validation rule.\n * @param{object} validator a validation rule object.\n */\nValidator._guardExtend = function _guardExtend (name, validator) {\n  if (Rules[name]) {\n    throw new ValidatorException(\n      (\"Extension Error: There is an existing validator with the same name '\" + name + \"'.\")\n    );\n  }\n\n  if (isCallable(validator)) {\n    return;\n  }\n\n  if (! isCallable(validator.validate)) {\n    throw new ValidatorException(\n      // eslint-disable-next-line\n      (\"Extension Error: The validator '\" + name + \"' must be a function or have a 'validate' method.\")\n    );\n  }\n\n  if (! isCallable(validator.getMessage) && ! isObject(validator.messages)) {\n    throw new ValidatorException(\n      // eslint-disable-next-line\n      (\"Extension Error: The validator '\" + name + \"' must have a 'getMessage' method or have a 'messages' object.\")\n    );\n  }\n};\n\n/**\n * Static constructor.\n *\n * @param{object} validations The validations object.\n * @return {Validator} validator A validator object.\n */\nValidator.create = function create (validations, options) {\n  return new Validator(validations, options);\n};\n\n/**\n * Adds a custom validator to the list of validation rules.\n *\n * @param{string} name The name of the validator.\n * @param{object|function} validator The validator object/function.\n */\nValidator.extend = function extend (name, validator) {\n  Validator._guardExtend(name, validator);\n  Validator._merge(name, validator);\n};\n\n/**\n * Installs the datetime validators and the messages.\n */\nValidator.installDateTimeValidators = function installDateTimeValidators (moment) {\n  if (typeof moment !== 'function') {\n    warn('To use the date-time validators you must provide moment reference.');\n\n    return false;\n  }\n\n  if (date.installed) {\n    return true;\n  }\n\n  var validators = date.make(moment);\n  Object.keys(validators).forEach(function (name) {\n    Validator.extend(name, validators[name]);\n  });\n\n  Validator.updateDictionary({\n    en: {\n      messages: date.messages\n    }\n  });\n  date.installed = true;\n\n  return true;\n};\n\n/**\n * Removes a rule from the list of validators.\n * @param {String} name The name of the validator/rule.\n */\nValidator.remove = function remove (name) {\n  delete Rules[name];\n};\n\n/**\n * Sets the default locale for all validators.\n *\n * @param {String} language The locale id.\n */\nValidator.setLocale = function setLocale (language) {\n    if ( language === void 0 ) language = 'en';\n\n  /* istanbul ignore if */\n  if (! DICTIONARY.hasLocale(language)) {\n    // eslint-disable-next-line\n    warn('You are setting the validator locale to a locale that is not defined in the dicitionary. English messages may still be generated.');\n  }\n\n  LOCALE = language;\n};\n\n/**\n * Sets the operating mode for all newly created validators.\n * strictMode = true: Values without a rule are invalid and cause failure.\n * strictMode = false: Values without a rule are valid and are skipped.\n * @param {Boolean} strictMode.\n */\nValidator.setStrictMode = function setStrictMode (strictMode) {\n    if ( strictMode === void 0 ) strictMode = true;\n\n  STRICT_MODE = strictMode;\n};\n\n/**\n * Updates the dicitionary, overwriting existing values and adding new ones.\n *\n * @param{object} data The dictionary object.\n */\nValidator.updateDictionary = function updateDictionary (data) {\n  DICTIONARY.merge(data);\n};\n\nValidator.addLocale = function addLocale (locale) {\n  if (! locale.name) {\n    warn('Your locale must have a name property');\n    return;\n  }\n\n  this.updateDictionary(( obj = {}, obj[locale.name] = locale, obj ));\n    var obj;\n};\n\nValidator.prototype.addLocale = function addLocale (locale) {\n  Validator.addLocale(locale);\n};\n\n/**\n * Resolves the scope value. Only strings and functions are allowed.\n * @param {Function|String} scope\n * @returns {String}\n */\nValidator.prototype._resolveScope = function _resolveScope (scope) {\n  if (typeof scope === 'string') {\n    return scope;\n  }\n\n  // The resolved value should be string.\n  if (isCallable(scope)) {\n    var value = scope();\n    return typeof value === 'string' ? value : '__global__';\n  }\n\n  return '__global__';\n};\n\n/**\n * Resolves the field values from the getter functions.\n */\nValidator.prototype._resolveValuesFromGetters = function _resolveValuesFromGetters (scope) {\n    var this$1 = this;\n    if ( scope === void 0 ) scope = '__global__';\n\n  if (! this.$scopes[scope]) {\n    return {};\n  }\n  var values = {};\n  Object.keys(this.$scopes[scope]).forEach(function (name) {\n    var field = this$1.$scopes[scope][name];\n    var getter = field.getter;\n    var context = field.context;\n    var fieldScope = this$1._resolveScope(field.scope);\n    if (getter && context && (scope === '__global__' || fieldScope === scope)) {\n      values[name] = {\n        value: getter(context()),\n        scope: fieldScope\n      };\n    }\n  });\n\n  return values;\n};\n\n/**\n * Creates the fields to be validated.\n *\n * @param{object} validations\n * @return {object} Normalized object.\n */\nValidator.prototype._createFields = function _createFields (validations) {\n    var this$1 = this;\n\n  if (! validations) {\n    return;\n  }\n\n  Object.keys(validations).forEach(function (field) {\n    this$1._createField(field, validations[field]);\n  });\n};\n\n/**\n * Creates a field entry in the fields object.\n * @param {String} name.\n * @param {String|Array} checks.\n */\nValidator.prototype._createField = function _createField (name, checks, scope) {\n    if ( scope === void 0 ) scope = '__global__';\n\n  scope = this._resolveScope(scope);\n  if (! this.$scopes[scope]) {\n    this.$scopes[scope] = {};\n  }\n\n  if (! this.$scopes[scope][name]) {\n    this.$scopes[scope][name] = {};\n  }\n\n  var field = this.$scopes[scope][name];\n  field.validations = this._normalizeRules(name, checks, scope);\n  field.required = this._isRequired(field);\n};\n\n/**\n * Normalizes rules.\n * @return {Object}\n */\nValidator.prototype._normalizeRules = function _normalizeRules (name, checks, scope) {\n  if (! checks) { return {}; }\n\n  if (typeof checks === 'string') {\n    return this._normalizeString(checks);\n  }\n\n  if (! isObject(checks)) {\n    warn((\"Your checks for '\" + scope + \".\" + name + \"' must be either a string or an object.\"));\n    return {};\n  }\n\n  return this._normalizeObject(checks);\n};\n\n/**\n * Checks if a field has a required rule.\n */\nValidator.prototype._isRequired = function _isRequired (field) {\n  return field.validations && field.validations.required;\n};\n\n/**\n * Normalizes an object of rules.\n */\nValidator.prototype._normalizeObject = function _normalizeObject (rules) {\n    var this$1 = this;\n\n  var validations = {};\n  Object.keys(rules).forEach(function (rule) {\n    var params = [];\n    if (rules[rule] === true) {\n      params = [];\n    } else if (Array.isArray(rules[rule])) {\n      params = rules[rule];\n    } else {\n      params = [rules[rule]];\n    }\n\n    if (rules[rule] === false) {\n      delete validations[rule];\n    } else {\n      validations[rule] = params;\n    }\n\n    if (date.installed && this$1._isADateRule(rule)) {\n      var dateFormat = this$1._getDateFormat(validations);\n\n      if (! this$1._containsValidation(validations[rule], dateFormat)) {\n        validations[rule].push(this$1._getDateFormat(validations));\n      }\n    }\n  });\n\n  return validations;\n};\n\n/**\n * Date rules need the existance of a format, so date_format must be supplied.\n * @param {String} name The rule name.\n * @param {Array} validations the field validations.\n */\nValidator.prototype._getDateFormat = function _getDateFormat (validations) {\n  if (validations.date_format && Array.isArray(validations.date_format)) {\n    return validations.date_format[0];\n  }\n\n  return null;\n};\n\n/**\n * Checks if the passed rule is a date rule.\n */\nValidator.prototype._isADateRule = function _isADateRule (rule) {\n  return !! ~['after', 'before', 'date_between'].indexOf(rule);\n};\n\n/**\n * Checks if the passed validation appears inside the array.\n */\nValidator.prototype._containsValidation = function _containsValidation (validations, validation) {\n  return !! ~validations.indexOf(validation);\n};\n\n/**\n * Normalizes string rules.\n * @param {String} rules The rules that will be normalized.\n * @param {Object} field The field object that is being operated on.\n */\nValidator.prototype._normalizeString = function _normalizeString (rules) {\n    var this$1 = this;\n\n  var validations = {};\n  rules.split('|').forEach(function (rule) {\n    var parsedRule = this$1._parseRule(rule);\n    if (! parsedRule.name) {\n      return;\n    }\n\n    if (parsedRule.name === 'required') {\n      validations.required = true;\n    }\n\n    validations[parsedRule.name] = parsedRule.params;\n    if (date.installed && this$1._isADateRule(parsedRule.name)) {\n      var dateFormat = this$1._getDateFormat(validations);\n\n      if (! this$1._containsValidation(validations[parsedRule.name], dateFormat)) {\n        validations[parsedRule.name].push(this$1._getDateFormat(validations));\n      }\n    }\n  });\n\n  return validations;\n};\n\n/**\n * Normalizes a string rule.\n *\n * @param {string} rule The rule to be normalized.\n * @return {object} rule The normalized rule.\n */\nValidator.prototype._parseRule = function _parseRule (rule) {\n  var params = [];\n  var name = rule.split(':')[0];\n\n  if (~rule.indexOf(':')) {\n    params = rule.split(':').slice(1).join(':').split(',');\n  }\n\n  return { name: name, params: params };\n};\n\n/**\n * Formats an error message for field and a rule.\n *\n * @param{string} field The field name.\n * @param{object} rule Normalized rule object.\n * @param {object} data Additional Information about the validation result.\n * @param {string} scope The field scope.\n * @return {string} Formatted error message.\n */\nValidator.prototype._formatErrorMessage = function _formatErrorMessage (field, rule, data, scope) {\n    if ( data === void 0 ) data = {};\n    if ( scope === void 0 ) scope = '__global__';\n\n  var name = this._getFieldDisplayName(field, scope);\n  var params = this._getLocalizedParams(rule, scope);\n  // Defaults to english message.\n  if (! this.dictionary.hasLocale(LOCALE)) {\n    var msg$1 = this.dictionary.getFieldMessage('en', field, rule.name);\n\n    return isCallable(msg$1) ? msg$1(name, params, data) : msg$1;\n  }\n\n  var msg = this.dictionary.getFieldMessage(LOCALE, field, rule.name);\n\n  return isCallable(msg) ? msg(name, params, data) : msg;\n};\n\n/**\n * Translates the parameters passed to the rule (mainly for target fields).\n */\nValidator.prototype._getLocalizedParams = function _getLocalizedParams (rule, scope) {\n    if ( scope === void 0 ) scope = '__global__';\n\n  if (~ ['after', 'before', 'confirmed'].indexOf(rule.name) &&\n      rule.params && rule.params[0]) {\n    var param = this.$scopes[scope][rule.params[0]];\n    if (param && param.name) { return [param.name]; }\n    return [this.dictionary.getAttribute(LOCALE, rule.params[0], rule.params[0])];\n  }\n\n  return rule.params;\n};\n\n/**\n * Resolves an appropiate display name, first checking 'data-as' or the registered 'prettyName'\n * Then the dictionary, then fallsback to field name.\n * @return {String} displayName The name to be used in the errors.\n */\nValidator.prototype._getFieldDisplayName = function _getFieldDisplayName (field, scope) {\n    if ( scope === void 0 ) scope = '__global__';\n\n  return this.$scopes[scope][field].as || this.dictionary.getAttribute(LOCALE, field, field);\n};\n\n/**\n * Tests a single input value against a rule.\n *\n * @param{*} name The name of the field.\n * @param{*} valuethe value of the field.\n * @param{object} rule the rule object.\n * @param {scope} scope The field scope.\n * @return {boolean} Whether it passes the check.\n */\nValidator.prototype._test = function _test (name, value, rule, scope) {\n    var this$1 = this;\n    if ( scope === void 0 ) scope = '__global__';\n\n  var validator = Rules[rule.name];\n  if (! validator || typeof validator !== 'function') {\n    throw new ValidatorException((\"No such validator '\" + (rule.name) + \"' exists.\"));\n  }\n\n  var result = validator(value, rule.params, name);\n\n  // If it is a promise.\n  if (isCallable(result.then)) {\n    return result.then(function (values) {\n      var allValid = true;\n      var data = {};\n      if (Array.isArray(values)) {\n        allValid = values.every(function (t) { return t.valid; });\n      } else { // Is a single object.\n        allValid = values.valid;\n        data = values.data;\n      }\n\n      if (! allValid) {\n        this$1.errorBag.add(\n                      name,\n                      this$1._formatErrorMessage(name, rule, data, scope),\n                      rule.name,\n                      scope\n                  );\n      }\n\n      return allValid;\n    });\n  }\n\n  if (! isObject(result)) {\n    result = { valid: result, data: {} };\n  }\n\n  if (! result.valid) {\n    this.errorBag.add(\n              name,\n              this._formatErrorMessage(name, rule, result.data, scope),\n              rule.name,\n              scope\n          );\n  }\n\n  return result.valid;\n};\n\n/**\n * Adds an event listener for a specific field.\n * @param {String} name\n * @param {String} fieldName\n * @param {Function} callback\n */\nValidator.prototype.on = function on (name, fieldName, scope, callback) {\n  if (! fieldName) {\n    throw new ValidatorException((\"Cannot add a listener for non-existent field \" + fieldName + \".\"));\n  }\n\n  if (! isCallable(callback)) {\n    throw new ValidatorException((\"The \" + name + \" callback for field \" + fieldName + \" is not callable.\"));\n  }\n\n  this.$scopes[scope][fieldName].events[name] = callback;\n};\n\n/**\n * Removes the event listener for a specific field.\n * @param {String} name\n * @param {String} fieldName\n */\nValidator.prototype.off = function off (name, fieldName, scope) {\n  if (! fieldName) {\n    warn((\"Cannot remove a listener for non-existent field \" + fieldName + \".\"));\n  }\n\n  this.$scopes[scope][fieldName].events[name] = undefined;\n};\n\nValidator.prototype._assignFlags = function _assignFlags (field) {\n  field.flags = {\n    untouched: true,\n    touched: false,\n    dirty: false,\n    pristine: true,\n    valid: null,\n    invalid: null,\n    required: field.required,\n    pending: false\n  };\n\n  var flagObj = {};\n    flagObj[field.name] = field.flags;\n  if (field.scope === '__global__') {\n    this.fieldBag = assign({}, this.fieldBag, flagObj);\n    return;\n  }\n\n  var scopeObj = assign({}, this.fieldBag[(\"$\" + (field.scope))], flagObj);\n\n  this.fieldBag = assign({}, this.fieldBag, ( obj = {}, obj[(\"$\" + (field.scope))] = scopeObj, obj ));\n    var obj;\n};\n\n/**\n * Registers a field to be validated.\n *\n * @param{string} name The field name.\n * @param{String|Array|Object} checks validations expression.\n * @param {string} prettyName Custom name to be used as field name in error messages.\n * @param {Function} getter A function used to retrive a fresh value for the field.\n */\nValidator.prototype.attach = function attach (name, checks, options) {\n    var this$1 = this;\n    if ( options === void 0 ) options = {};\n\n  var attach = function () {\n    options.scope = this$1._resolveScope(options.scope);\n    this$1.updateField(name, checks, options);\n    var field = this$1.$scopes[options.scope][name];\n    field.scope = options.scope;\n    field.name = name;\n    field.as = options.prettyName;\n    field.getter = options.getter;\n    field.context = options.context;\n    field.listeners = options.listeners || { detach: function detach() {} };\n    field.el = field.listeners.el;\n    field.events = {};\n    this$1._assignFlags(field);\n    // cache the scope property.\n    if (field.el && isCallable(field.el.setAttribute)) {\n      field.el.setAttribute('data-vv-scope', field.scope);\n    }\n\n    if (field.listeners.classes) {\n      field.listeners.classes.attach(field);\n    }\n    this$1._setAriaRequiredAttribute(field);\n    this$1._setAriaValidAttribute(field, true);\n    // if initial modifier is applied, validate immediatly.\n    if (options.initial) {\n      this$1.validate(name, field.getter(field.context()), field.scope).catch(function () {});\n    }\n  };\n\n  var scope = isCallable(options.scope) ? options.scope() : options.scope;\n  if (! scope && ! this.$ready) {\n    this.$deferred.push(attach);\n    return;\n  }\n\n  attach();\n};\n\n/**\n * Initializes the non-scoped fields and any bootstrap logic.\n */\nValidator.prototype.init = function init () {\n  this.$ready = true;\n  this.$deferred.forEach(function (attach) {\n    attach();\n  });\n  this.$deferred = [];\n\n  return this;\n};\n\n/**\n * Sets the flags on a field.\n *\n * @param {String} name\n * @param {Object} flags\n */\nValidator.prototype.flag = function flag (name, flags) {\n  var ref = name.split('.');\n    var scope = ref[0];\n    var fieldName = ref[1];\n  if (!fieldName) {\n    fieldName = scope;\n    scope = null;\n  }\n  var field = scope ? getPath((scope + \".\" + fieldName), this.$scopes) :\n                        this.$scopes.__global__[fieldName];\n  if (! field) {\n    return;\n  }\n\n  Object.keys(field.flags).forEach(function (flag) {\n    field.flags[flag] = flags[flag] !== undefined ? flags[flag] : field.flags[flag];\n  });\n  field.listeners.classes.sync();\n};\n\n/**\n * Append another validation to an existing field.\n *\n * @param{string} name The field name.\n * @param{string} checks validations expression.\n */\nValidator.prototype.append = function append (name, checks, options) {\n    if ( options === void 0 ) options = {};\n\n  options.scope = this._resolveScope(options.scope);\n  // No such field\n  if (! this.$scopes[options.scope] || ! this.$scopes[options.scope][name]) {\n    this.attach(name, checks, options);\n  }\n\n  var field = this.$scopes[options.scope][name];\n  var newChecks = this._normalizeRules(name, checks, options.scope);\n  Object.keys(newChecks).forEach(function (key) {\n    field.validations[key] = newChecks[key];\n  });\n};\n\n/**\n * Updates the field rules with new ones.\n */\nValidator.prototype.updateField = function updateField (name, checks, options) {\n    if ( options === void 0 ) options = {};\n\n  var field = getPath(((options.scope) + \".\" + name), this.$scopes, null);\n  var oldChecks = field ? JSON.stringify(field.validations) : '';\n  this._createField(name, checks, options.scope);\n  field = getPath(((options.scope) + \".\" + name), this.$scopes, null);\n  var newChecks = field ? JSON.stringify(field.validations) : '';\n\n  // compare both newChecks and oldChecks to make sure we don't trigger uneccessary directive\n  // update by changing the errorBag (prevents infinite loops).\n  if (newChecks !== oldChecks) {\n    this.errorBag.remove(name, options.scope);\n  }\n};\n\n/**\n * Clears the errors from the errorBag using the next tick if possible.\n */\nValidator.prototype.clean = function clean () {\n    var this$1 = this;\n\n  if (! this.$vm || ! isCallable(this.$vm.$nextTick)) {\n    return;\n  }\n\n  this.$vm.$nextTick(function () {\n    this$1.errorBag.clear();\n  });\n};\n\n/**\n * Removes a field from the validator.\n *\n * @param{String} name The name of the field.\n * @param {String} scope The name of the field scope.\n */\nValidator.prototype.detach = function detach (name, scope) {\n    if ( scope === void 0 ) scope = '__global__';\n\n  // No such field.\n  if (! this.$scopes[scope] || ! this.$scopes[scope][name]) {\n    return;\n  }\n\n  if (this.$scopes[scope][name].listeners) {\n    this.$scopes[scope][name].listeners.detach();\n  }\n\n  this.errorBag.remove(name, scope);\n  delete this.$scopes[scope][name];\n};\n\n/**\n * Adds a custom validator to the list of validation rules.\n *\n * @param{string} name The name of the validator.\n * @param{object|function} validator The validator object/function.\n */\nValidator.prototype.extend = function extend (name, validator) {\n  Validator.extend(name, validator);\n};\n\n/**\n * Gets the internal errorBag instance.\n *\n * @return {ErrorBag} errorBag The internal error bag object.\n */\nValidator.prototype.getErrors = function getErrors () {\n  return this.errorBag;\n};\n\n/**\n * Just an alias to the static method for convienece.\n */\nValidator.prototype.installDateTimeValidators = function installDateTimeValidators (moment) {\n  Validator.installDateTimeValidators(moment);\n};\n\n/**\n * Removes a rule from the list of validators.\n * @param {String} name The name of the validator/rule.\n */\nValidator.prototype.remove = function remove (name) {\n  Validator.remove(name);\n};\n\n/**\n * Sets the validator current langauge.\n *\n * @param {string} language locale or language id.\n */\nValidator.prototype.setLocale = function setLocale (language) {\n  /* istanbul ignore if */\n  if (! this.dictionary.hasLocale(language)) {\n    // eslint-disable-next-line\n    warn('You are setting the validator locale to a locale that is not defined in the dicitionary. English messages may still be generated.');\n  }\n\n  LOCALE = language;\n};\n\n/**\n * Sets the operating mode for this validator.\n * strictMode = true: Values without a rule are invalid and cause failure.\n * strictMode = false: Values without a rule are valid and are skipped.\n * @param {Boolean} strictMode.\n */\nValidator.prototype.setStrictMode = function setStrictMode (strictMode) {\n    if ( strictMode === void 0 ) strictMode = true;\n\n  this.strictMode = strictMode;\n};\n\n/**\n * Updates the messages dicitionary, overwriting existing values and adding new ones.\n *\n * @param{object} data The messages object.\n */\nValidator.prototype.updateDictionary = function updateDictionary (data) {\n  Validator.updateDictionary(data);\n};\n\n/**\n * Adds a scope.\n */\nValidator.prototype.addScope = function addScope (scope) {\n  if (scope && ! this.$scopes[scope]) {\n    this.$scopes[scope] = {};\n  }\n};\n\n/**\n * Validates a value against a registered field validations.\n *\n * @param{string} name the field name.\n * @param{*} value The value to be validated.\n * @param {String} scope The scope of the field.\n * @param {Boolean} throws If it should throw.\n * @return {Promise}\n */\nValidator.prototype.validate = function validate (name, value, scope, throws) {\n    var this$1 = this;\n    if ( scope === void 0 ) scope = '__global__';\n    if ( throws === void 0 ) throws = true;\n\n  if (this.paused) { return Promise.resolve(true); }\n\n  if (name && name.indexOf('.') > -1) {\n    // no such field, try the scope form.\n    if (! this.$scopes.__global__[name]) {\n      var assign$$1;\n        (assign$$1 = name.split('.'), scope = assign$$1[0], name = assign$$1[1]);\n    }\n  }\n  if (! scope) { scope = '__global__'; }\n  if (! this.$scopes[scope] || ! this.$scopes[scope][name]) {\n    if (! this.strictMode) { return Promise.resolve(true); }\n\n    var fullName = scope === '__global__' ? name : (scope + \".\" + name);\n    warn((\"Validating a non-existant field: \\\"\" + fullName + \"\\\". Use \\\"attach()\\\" first.\"));\n\n    throw new ValidatorException('Validation Failed');\n  }\n\n  var field = this.$scopes[scope][name];\n  if (field.flags) {\n    field.flags.pending = true;\n  }\n  this.errorBag.remove(name, scope);\n  // if its not required and is empty or null or undefined then it passes.\n  if (! field.required && ~[null, undefined, ''].indexOf(value)) {\n    this._setAriaValidAttribute(field, true);\n    if (field.events && isCallable(field.events.after)) {\n      field.events.after({ valid: true });\n    }\n\n    return Promise.resolve(true);\n  }\n\n  try {\n    var promises = Object.keys(field.validations).map(function (rule) {\n      var result = this$1._test(\n        name,\n        value,\n        { name: rule, params: field.validations[rule] },\n        scope\n      );\n\n      if (isCallable(result.then)) {\n        return result;\n      }\n\n      // Early exit.\n      if (! result) {\n        if (field.events && isCallable(field.events.after)) {\n          field.events.after({ valid: false });\n        }\n        throw new ValidatorException('Validation Aborted.');\n      }\n\n      if (field.events && isCallable(field.events.after)) {\n        field.events.after({ valid: true });\n      }\n      return Promise.resolve(result);\n    });\n\n    return Promise.all(promises).then(function (values) {\n      var valid = values.every(function (t) { return t; });\n      this$1._setAriaValidAttribute(field, valid);\n\n      if (! valid && throws) {\n        if (field.events && isCallable(field.events.after)) {\n          field.events.after({ valid: false });\n        }\n        throw new ValidatorException('Failed Validation');\n      }\n      return valid;\n    });\n  } catch (error) {\n    if (error.msg === '[vee-validate]: Validation Aborted.') {\n      if (field.events && isCallable(field.events.after)) {\n        field.events.after({ valid: false });\n      }\n      return Promise.resolve(false);\n    }\n\n    throw error;\n  }\n};\n\n/**\n * Sets the aria-invalid attribute on the element.\n */\nValidator.prototype._setAriaValidAttribute = function _setAriaValidAttribute (field, valid) {\n  if (! field.el || field.listeners.component) {\n    return;\n  }\n\n  field.el.setAttribute('aria-invalid', !valid);\n};\n\n/**\n * Sets the aria-required attribute on the element.\n */\nValidator.prototype._setAriaRequiredAttribute = function _setAriaRequiredAttribute (field) {\n  if (! field.el || field.listeners.component) {\n    return;\n  }\n\n  field.el.setAttribute('aria-required', !! field.required);\n};\n\n/**\n * Pauses the validator.\n *\n * @return {Validator}\n */\nValidator.prototype.pause = function pause () {\n  this.paused = true;\n\n  return this;\n};\n\n/**\n * Resumes the validator.\n *\n * @return {Validator}\n */\nValidator.prototype.resume = function resume () {\n  this.paused = false;\n\n  return this;\n};\n\n/**\n * Validates each value against the corresponding field validations.\n * @param{object} values The values to be validated.\n * @param{String} scope The scope to be applied on validation.\n * @return {Promise} Returns a promise with the validation result.\n */\nValidator.prototype.validateAll = function validateAll (values, scope) {\n    var this$1 = this;\n    if ( scope === void 0 ) scope = '__global__';\n\n  if (this.paused) { return Promise.resolve(true); }\n\n  var normalizedValues;\n  if (! values || typeof values === 'string') {\n    this.errorBag.clear(values);\n    normalizedValues = this._resolveValuesFromGetters(values);\n  } else {\n    normalizedValues = {};\n    Object.keys(values).forEach(function (key) {\n      normalizedValues[key] = {\n        value: values[key],\n        scope: scope\n      };\n    });\n  }\n  var promises = Object.keys(normalizedValues).map(function (property) { return this$1.validate(\n    property,\n    normalizedValues[property].value,\n    normalizedValues[property].scope,\n    false // do not throw\n  ); });\n\n  return Promise.all(promises).then(function (results) {\n    var valid = results.every(function (t) { return t; });\n    if (! valid) {\n      throw new ValidatorException('Validation Failed');\n    }\n\n    return valid;\n  });\n};\n\n/**\n * Validates all scopes.\n * @returns {Promise} All promises resulted from each scope.\n */\nValidator.prototype.validateScopes = function validateScopes () {\n    var this$1 = this;\n\n  if (this.paused) { return Promise.resolve(true); }\n\n  return Promise.all(\n    Object.keys(this.$scopes).map(function (scope) { return this$1.validateAll(scope); })\n  );\n};\n\nObject.defineProperties( Validator.prototype, prototypeAccessors );\n\nvar validatorRequested = function (injections) {\n  if (! injections) {\n    return false;\n  }\n\n  if (Array.isArray(injections) && ~injections.indexOf('$validator')) {\n    return true;\n  }\n\n  if (isObject(injections) && injections.$validator) {\n    return true;\n  }\n\n  return false;\n};\n\nvar makeMixin = function (Vue, options) {\n  var mixin = {};\n  mixin.provide = function providesValidator() {\n    if (this.$validator) {\n      return {\n        $validator: this.$validator\n      };\n    }\n\n    return {};\n  };\n\n  mixin.beforeCreate = function beforeCreate() {\n    // if its a root instance, inject anyways, or if it requested a new instance.\n    if (this.$options.$validates || !this.$parent) {\n      this.$validator = new Validator(null, { init: false, vm: this });\n    }\n\n    var requested = validatorRequested(this.$options.inject);\n\n    // if automatic injection is enabled and no instance was requested.\n    if (! this.$validator && options.inject && !requested) {\n      this.$validator = new Validator(null, { init: false, vm: this });\n    }\n\n    // don't inject errors or fieldBag as no validator was resolved.\n    if (! requested && ! this.$validator) {\n      return;\n    }\n\n    // There is a validator but it isn't injected, mark as reactive.\n    if (! requested && this.$validator) {\n      Vue.util.defineReactive(this.$validator, 'errorBag', this.$validator.errorBag);\n      Vue.util.defineReactive(this.$validator, 'fieldBag', this.$validator.fieldBag);\n    }\n\n    if (! this.$options.computed) {\n      this.$options.computed = {};\n    }\n\n    this.$options.computed[options.errorBagName] = function errorBagGetter() {\n      return this.$validator.errorBag;\n    };\n    this.$options.computed[options.fieldsBagName] = function fieldBagGetter() {\n      return this.$validator.fieldBag;\n    };\n  };\n\n  mixin.mounted = function mounted() {\n    if (this.$validator) {\n      this.$validator.init();\n    }\n  };\n\n  return mixin;\n};\n\nvar DEFAULT_CLASS_NAMES = {\n  touched: 'touched', // the control has been blurred\n  untouched: 'untouched', // the control hasn't been blurred\n  valid: 'valid', // model is valid\n  invalid: 'invalid', // model is invalid\n  pristine: 'pristine', // control has not been interacted with\n  dirty: 'dirty' // control has been interacted with\n};\n\nvar ClassListener = function ClassListener(el, validator, options) {\n  if ( options === void 0 ) options = {};\n\n  this.el = el;\n  this.validator = validator;\n  this.enabled = options.enableAutoClasses;\n  this.classNames = assign({}, DEFAULT_CLASS_NAMES, options.classNames || {});\n  this.component = options.component;\n  this.listeners = {};\n};\n\n/**\n * Resets the classes state.\n */\nClassListener.prototype.reset = function reset () {\n  // detach all listeners.\n  this.detach();\n\n  // remove classes\n  this.remove(this.classNames.dirty);\n  this.remove(this.classNames.touched);\n  this.remove(this.classNames.valid);\n  this.remove(this.classNames.invalid);\n\n  // listen again.\n  this.attach(this.field);\n};\n\n/**\n * Syncs the automatic classes.\n */\nClassListener.prototype.sync = function sync () {\n  this.addInteractionListeners();\n\n  if (! this.enabled) { return; }\n\n  this.toggle(this.classNames.dirty, this.field.flags.dirty);\n  this.toggle(this.classNames.pristine, this.field.flags.pristine);\n  this.toggle(this.classNames.valid, this.field.flags.valid);\n  this.toggle(this.classNames.invalid, this.field.flags.invalid);\n  this.toggle(this.classNames.touched, this.field.flags.touched);\n  this.toggle(this.classNames.untouched, this.field.flags.untouched);\n};\n\nClassListener.prototype.addFocusListener = function addFocusListener () {\n    var this$1 = this;\n\n  // listen for focus event.\n  this.listeners.focus = function () {\n    this$1.remove(this$1.classNames.untouched);\n    this$1.add(this$1.classNames.touched);\n    this$1.field.flags.touched = true;\n    this$1.field.flags.untouched = false;\n\n    if (this$1.component) { return; }\n\n    // only needed once.\n    this$1.el.removeEventListener('focus', this$1.listeners.focus);\n    this$1.listeners.focus = null;\n  };\n\n  if (this.component) {\n    this.component.$once('focus', this.listeners.focus);\n  } else {\n    this.el.addEventListener('focus', this.listeners.focus);\n  }\n};\n\nClassListener.prototype.addInputListener = function addInputListener () {\n    var this$1 = this;\n\n  // listen for input.\n  this.listeners.input = function () {\n    this$1.remove(this$1.classNames.pristine);\n    this$1.add(this$1.classNames.dirty);\n    this$1.field.flags.dirty = true;\n    this$1.field.flags.pristine = false;\n\n    if (this$1.component) { return; }\n\n    // only needed once.\n    this$1.el.removeEventListener('input', this$1.listeners.input);\n    this$1.listeners.input = null;\n  };\n\n  if (this.component) {\n    this.component.$once('input', this.listeners.input);\n  } else {\n    this.el.addEventListener('input', this.listeners.input);\n  }\n};\n\nClassListener.prototype.addInteractionListeners = function addInteractionListeners () {\n  if (! this.listeners.focus) {\n    this.addFocusListener();\n  }\n\n  if (! this.listeners.input) {\n    this.addInputListener();\n  }\n};\n\n/**\n * Attach field with its listeners.\n * @param {*} field\n */\nClassListener.prototype.attach = function attach (field) {\n    var this$1 = this;\n\n  this.field = field;\n  this.add(this.classNames.pristine);\n  this.add(this.classNames.untouched);\n\n  this.addInteractionListeners();\n\n  this.listeners.after = function (e) {\n    this$1.remove(e.valid ? this$1.classNames.invalid : this$1.classNames.valid);\n    this$1.add(e.valid ? this$1.classNames.valid : this$1.classNames.invalid);\n    this$1.field.flags.valid = e.valid;\n    this$1.field.flags.invalid = ! e.valid;\n    this$1.field.flags.pending = false;\n  };\n\n  this.validator.on('after', this.field.name, this.field.scope, this.listeners.after);\n};\n\n/**\n * Detach all listeners.\n */\nClassListener.prototype.detach = function detach () {\n  // TODO: Why could the field be undefined?\n  if (! this.field) { return; }\n\n  if (this.component) {\n    this.component.$off('input', this.listeners.input);\n    this.component.$off('focus', this.listeners.focus);\n  } else {\n    this.el.removeEventListener('focus', this.listeners.focus);\n    this.el.removeEventListener('input', this.listeners.input);\n  }\n  this.validator.off('after', this.field.name, this.field.scope);\n};\n\n/**\n * Add a class.\n * @param {*} className\n */\nClassListener.prototype.add = function add (className) {\n  if (! this.enabled) { return; }\n\n  addClass(this.el, className);\n};\n\n/**\n * Remove a class.\n * @param {*} className\n */\nClassListener.prototype.remove = function remove (className) {\n  if (! this.enabled) { return; }\n\n  removeClass(this.el, className);\n};\n\n/**\n * Toggles the class name.\n *\n * @param {String} className\n * @param {Boolean} status\n */\nClassListener.prototype.toggle = function toggle (className, status) {\n  if (status) {\n    this.add(className);\n    return;\n  }\n\n  this.remove(className);\n};\n\nvar config = {\n  locale: 'en',\n  delay: 0,\n  errorBagName: 'errors',\n  dictionary: null,\n  strict: true,\n  fieldsBagName: 'fields',\n  enableAutoClasses: false,\n  classNames: {},\n  events: 'input|blur',\n  inject: true\n};\n\nvar ListenerGenerator = function ListenerGenerator(el, binding, vnode, options) {\n  this.unwatch = undefined;\n  this.callbacks = [];\n  this.el = el;\n  this.scope = isObject(binding.value) ? binding.value.scope : getScope(el);\n  this.binding = binding;\n  this.vm = vnode.context;\n  this.component = vnode.child;\n  this.options = assign({}, config, options);\n  this.fieldName = this._resolveFieldName();\n  this.model = this._resolveModel(vnode.data.directives);\n  this.classes = new ClassListener(el, this.vm.$validator, {\n    component: this.component,\n    enableAutoClasses: options.enableAutoClasses,\n    classNames: options.classNames\n  });\n};\n\n/**\n * Checks if the node directives contains a v-model.\n */\nListenerGenerator.prototype._resolveModel = function _resolveModel (directives) {\n  var expRegex = /^[a-z_]+[0-9]*(\\w*\\.[a-z_]\\w*)*$/i;\n  var model = find(directives, function (d) { return d.name === 'model' && expRegex.test(d.expression); });\n\n  return model && this._isExistingPath(model.expression) && model.expression;\n};\n\n/**\n * @param {String} path\n */\nListenerGenerator.prototype._isExistingPath = function _isExistingPath (path) {\n  var obj = this.vm;\n  return path.split('.').every(function (prop) {\n    if (! Object.prototype.hasOwnProperty.call(obj, prop)) {\n      return false;\n    }\n\n    obj = obj[prop];\n\n    return true;\n  });\n};\n\n  /**\n   * Resolves the field name to trigger validations.\n   * @return {String} The field name.\n   */\nListenerGenerator.prototype._resolveFieldName = function _resolveFieldName () {\n  if (this.component) {\n    return getDataAttribute(this.el, 'name') || this.component.name;\n  }\n\n  return getDataAttribute(this.el, 'name') || this.el.name;\n};\n\n  /**\n   * Determines if the validation rule requires additional listeners on target fields.\n   */\nListenerGenerator.prototype._hasFieldDependency = function _hasFieldDependency (rules) {\n    var this$1 = this;\n\n  var fieldName = false;\n  if (! rules) {\n    return false;\n  }\n\n  if (isObject(rules)) {\n    Object.keys(rules).forEach(function (r) { // eslint-disable-line\n      if (/confirmed|after|before/.test(r)) {\n        fieldName = rules[r];\n\n        return false;\n      }\n    });\n\n    return fieldName;\n  }\n\n  rules.split('|').every(function (r) {\n    if (/\\b(confirmed|after|before):/.test(r)) {\n      fieldName = r.split(':')[1];\n      return false;\n    }\n\n    if (/\\b(confirmed)/.test(r)) {\n      fieldName = (this$1.fieldName) + \"_confirmation\";\n      return false;\n    }\n\n    return true;\n  });\n\n  return fieldName;\n};\n\n  /**\n   * Validates input value, triggered by 'input' event.\n   */\nListenerGenerator.prototype._inputListener = function _inputListener () {\n  return this._validate(this.el.value);\n};\n\n  /**\n   * Validates files, triggered by 'change' event.\n   */\nListenerGenerator.prototype._fileListener = function _fileListener () {\n    var this$1 = this;\n\n  return this._validate(toArray(this.el.files)).then(function (isValid) {\n    if (! isValid && this$1.binding.modifiers.reject) {\n      this$1.el.value = '';\n    }\n  });\n};\n\n  /**\n   * Validates radio buttons, triggered by 'change' event.\n   */\nListenerGenerator.prototype._radioListener = function _radioListener () {\n  var checked = document.querySelector((\"input[name=\\\"\" + (this.el.name) + \"\\\"]:checked\"));\n  return this._validate(checked ? checked.value : null);\n};\n\n  /**\n   * Validates checkboxes, triggered by change event.\n   */\nListenerGenerator.prototype._checkboxListener = function _checkboxListener () {\n    var this$1 = this;\n\n  var checkedBoxes = document.querySelectorAll((\"input[name=\\\"\" + (this.el.name) + \"\\\"]:checked\"));\n  if (! checkedBoxes || ! checkedBoxes.length) {\n    this._validate(null);\n    return;\n  }\n\n  toArray(checkedBoxes).forEach(function (box) {\n    this$1._validate(box.value);\n  });\n};\n\n  /**\n   * Trigger the validation for a specific value.\n   */\nListenerGenerator.prototype._validate = function _validate (value) {\n  return this.vm.$validator.validate(\n    this.fieldName, value, this.scope || getScope(this.el)\n    ).catch(function (result) { return result; });\n};\n\n  /**\n   * Returns a scoped callback, only runs if the el scope is the same as the recieved scope\n   * From the event.\n   */\nListenerGenerator.prototype._getScopedListener = function _getScopedListener (callback) {\n    var this$1 = this;\n\n  return function (scope) {\n    if (! scope || scope === this$1.scope || scope instanceof window.Event) {\n      callback();\n    }\n  };\n};\n\n  /**\n   * Attaches validator event-triggered validation.\n   */\nListenerGenerator.prototype._attachValidatorEvent = function _attachValidatorEvent () {\n    var this$1 = this;\n\n  var listener = this._getScopedListener(this._getSuitableListener().listener.bind(this));\n  var fieldName = this._hasFieldDependency(\n      getRules(this.binding.expression, this.binding.value, this.el)\n    );\n  if (fieldName) {\n          // Wait for the validator ready triggered when vm is mounted because maybe\n          // the element isn't mounted yet.\n    this.vm.$nextTick(function () {\n      var target = document.querySelector((\"input[name='\" + fieldName + \"']\"));\n      if (! target) {\n        warn('Cannot find target field, no additional listeners were attached.');\n        return;\n      }\n\n      var events = getDataAttribute(this$1.el, 'validate-on') || this$1.options.events;\n      events.split('|').forEach(function (e) {\n        target.addEventListener(e, listener, false);\n        this$1.callbacks.push({ name: e, listener: listener, el: target });\n      });\n    });\n  }\n};\n\n  /**\n   * Determines a suitable listener for the element.\n   */\nListenerGenerator.prototype._getSuitableListener = function _getSuitableListener () {\n  var listener;\n  var overrides = {\n    input: 'input',\n    blur: 'blur'\n  };\n\n  if (this.el.tagName === 'SELECT') {\n    overrides.input = 'change';\n    listener = {\n      names: ['change', 'blur'],\n      listener: this._inputListener\n    };\n  } else {\n    // determine the suitable listener and events to handle\n    switch (this.el.type) {\n    case 'file':\n      overrides.input = 'change';\n      overrides.blur = null;\n      listener = {\n        names: ['change'],\n        listener: this._fileListener\n      };\n      break;\n\n    case 'radio':\n      overrides.input = 'change';\n      overrides.blur = null;\n      listener = {\n        names: ['change'],\n        listener: this._radioListener\n      };\n      break;\n\n    case 'checkbox':\n      overrides.input = 'change';\n      overrides.blur = null;\n      listener = {\n        names: ['change'],\n        listener: this._checkboxListener\n      };\n      break;\n\n    default:\n      listener = {\n        names: ['input', 'blur'],\n        listener: this._inputListener\n      };\n      break;\n    }\n  }\n  // users are able to specify which events they want to validate on\n  var events = getDataAttribute(this.el, 'validate-on') || this.options.events;\n  listener.names = events.split('|')\n                         .filter(function (e) { return overrides[e] !== null; })\n                         .map(function (e) { return overrides[e] || e; });\n\n  return listener;\n};\n\n/**\n * Attaches neccessary validation events for the component.\n */\nListenerGenerator.prototype._attachComponentListeners = function _attachComponentListeners () {\n    var this$1 = this;\n\n  this.componentListener = debounce(function (value) {\n    this$1._validate(value);\n  }, getDataAttribute(this.el, 'delay') || this.options.delay);\n\n  this.component.$on('input', this.componentListener);\n  this.componentPropUnwatch = this.component.$watch('value', this.componentListener);\n};\n\n/**\n * Attachs a suitable listener for the input.\n */\nListenerGenerator.prototype._attachFieldListeners = function _attachFieldListeners () {\n    var this$1 = this;\n\n  // If it is a component, use vue events instead.\n  if (this.component) {\n    this._attachComponentListeners();\n\n    return;\n  }\n\n  var handler = this._getSuitableListener();\n  var listener = debounce(\n    handler.listener.bind(this),\n    getDataAttribute(this.el, 'delay') || this.options.delay\n  );\n\n  if (~['radio', 'checkbox'].indexOf(this.el.type)) {\n    this.vm.$nextTick(function () {\n      var elms = document.querySelectorAll((\"input[name=\\\"\" + (this$1.el.name) + \"\\\"]\"));\n      toArray(elms).forEach(function (input) {\n        handler.names.forEach(function (handlerName) {\n          input.addEventListener(handlerName, listener, false);\n          this$1.callbacks.push({ name: handlerName, listener: listener, el: input });\n        });\n      });\n    });\n\n    return;\n  }\n\n  handler.names.forEach(function (handlerName) {\n    this$1.el.addEventListener(handlerName, listener, false);\n    this$1.callbacks.push({ name: handlerName, listener: listener, el: this$1.el });\n  });\n};\n\n/**\n * Returns a context, getter factory pairs for each input type.\n */\nListenerGenerator.prototype._resolveValueGetter = function _resolveValueGetter () {\n    var this$1 = this;\n\n  if (this.component) {\n    return {\n      context: function () { return this$1.component; },\n      getter: function getter(context) {\n        return context.value;\n      }\n    };\n  }\n\n  switch (this.el.type) {\n  case 'checkbox': return {\n    context: function () { return document.querySelectorAll((\"input[name=\\\"\" + (this$1.el.name) + \"\\\"]:checked\")); },\n    getter: function getter(context) {\n      if (! context || ! context.length) {\n        return null;\n      }\n\n      return toArray(context).map(function (checkbox) { return checkbox.value; });\n    }\n  };\n  case 'radio': return {\n    context: function () { return document.querySelector((\"input[name=\\\"\" + (this$1.el.name) + \"\\\"]:checked\")); },\n    getter: function getter(context) {\n      return context && context.value;\n    }\n  };\n  case 'file': return {\n    context: function () { return this$1.el; },\n    getter: function getter(context) {\n      return toArray(context.files);\n    }\n  };\n\n  default: return {\n    context: function () { return this$1.el; },\n    getter: function getter(context) {\n      return context.value;\n    }\n  };\n  }\n};\n\n/*\n* Gets the arg string value, either from the directive or the expression value.\n*/\nListenerGenerator.prototype._getArg = function _getArg () {\n  // Get it from the directive arg.\n  if (this.binding.arg) {\n    return this.binding.arg;\n  }\n\n  // Get it from v-model.\n  if (this.model) {\n    return this.model;\n  }\n\n  return isObject(this.binding.value) ? this.binding.value.arg : null;\n};\n\n/**\n * Attaches model watchers and extra listeners.\n */\nListenerGenerator.prototype._attachModelWatcher = function _attachModelWatcher (arg) {\n    var this$1 = this;\n\n  var events = getDataAttribute(this.el, 'validate-on') || this.options.events;\n  var listener = debounce(\n    this._getSuitableListener().listener.bind(this),\n    getDataAttribute(this.el, 'delay') || this.options.delay\n  );\n  events.split('|').forEach(function (name) {\n    if (~['input', 'change'].indexOf(name)) {\n      var debounced = debounce(function (value) {\n        this$1.vm.$validator.validate(\n          this$1.fieldName, value, this$1.scope || getScope(this$1.el)\n        ).catch(function (result) { return result; });\n      }, getDataAttribute(this$1.el, 'delay') || this$1.options.delay);\n      this$1.unwatch = this$1.vm.$watch(arg, debounced, { deep: true });\n      // No need to attach it on element as it will use the vue watcher.\n      return;\n    }\n\n    this$1.el.addEventListener(name, listener, false);\n    this$1.callbacks.push({ name: name, listener: listener, el: this$1.el });\n  });\n};\n\n/**\n * Attaches the Event Listeners.\n */\nListenerGenerator.prototype.attach = function attach () {\n    var this$1 = this;\n\n  var ref = this._resolveValueGetter();\n    var context = ref.context;\n    var getter = ref.getter;\n  this.vm.$validator.attach(\n    this.fieldName,\n    getRules(this.binding.expression, this.binding.value, this.el), {\n      // eslint-disable-next-line\n      scope: function () {\n        return this$1.scope || getScope(this$1.el);\n      },\n      prettyName: getDataAttribute(this.el, 'as') || this.el.title,\n      context: context,\n      getter: getter,\n      listeners: this,\n      initial: this.binding.modifiers.initial\n    }\n  );\n\n  if (this.binding.modifiers.disable) {\n    return;\n  }\n\n  this._attachValidatorEvent();\n  var arg = this._getArg();\n  if (arg) {\n    this._attachModelWatcher(arg);\n    return;\n  }\n\n  this._attachFieldListeners();\n};\n\n  /**\n   * Removes all attached event listeners.\n   */\nListenerGenerator.prototype.detach = function detach () {\n  if (this.component) {\n    this.component.$off('input', this.componentListener);\n\n    if (isCallable(this.componentPropUnwatch)) {\n      this.componentPropUnwatch();\n    }\n  }\n\n  if (this.unwatch) {\n    this.unwatch();\n  }\n\n  this.classes.detach();\n\n  this.callbacks.forEach(function (h) {\n    h.el.removeEventListener(h.name, h.listener);\n  });\n  this.callbacks = [];\n};\n\nvar listenersInstances = [];\n\nvar makeDirective = function (options) { return ({\n  inserted: function inserted(el, binding, vnode) {\n    if (! vnode.context.$validator) {\n      var name = vnode.context.$options._componentTag;\n      // eslint-disable-next-line\n      warn((\"No validator instance is present on \" + (name ?'component \"' +  name + '\"' : 'un-named component') + \", did you forget to inject '$validator'?\"));\n\n      return;\n    }\n    var listener = new ListenerGenerator(el, binding, vnode, options);\n    listener.attach();\n    listenersInstances.push({ vm: vnode.context, el: el, instance: listener });\n  },\n  update: function update(el, ref, ref$1) {\n    var expression = ref.expression;\n    var value = ref.value;\n    var context = ref$1.context;\n\n    var ref$2 = find(listenersInstances, function (l) { return l.vm === context && l.el === el; });\n    var instance = ref$2.instance;\n    // make sure we don't do uneccessary work if no expression was passed\n    // nor if the expression did not change.\n    if (! expression || (instance.cachedExp === JSON.stringify(value))) { return; }\n\n    instance.cachedExp = JSON.stringify(value);\n    var scope = isObject(value) ? (value.scope || getScope(el)) : getScope(el);\n    context.$validator.updateField(\n      instance.fieldName,\n      getRules(expression, value, el),\n      { scope: scope || '__global__' }\n    );\n  },\n  unbind: function unbind(el, ref, ref$1) {\n    var value = ref.value;\n    var context = ref$1.context;\n\n    var holder = find(listenersInstances, function (l) { return l.vm === context && l.el === el; });\n    if (typeof holder === 'undefined') {\n      return;\n    }\n\n    var scope = isObject(value) ? value.scope : (getScope(el) || '__global__');\n    context.$validator.detach(holder.instance.fieldName, scope);\n    listenersInstances.splice(listenersInstances.indexOf(holder), 1);\n  }\n}); };\n\nvar normalize = function (fields) {\n  if (Array.isArray(fields)) {\n    return fields.reduce(function (prev, curr) {\n      if (~curr.indexOf('.')) {\n        prev[curr.split('.')[1]] = curr;\n      } else {\n        prev[curr] = curr;\n      }\n\n      return prev;\n    }, {});\n  }\n\n  return fields;\n};\n\n/**\n * Maps fields to computed functions.\n *\n * @param {Array|Object} fields\n */\nvar mapFields = function (fields) {\n  var normalized = normalize(fields);\n  return Object.keys(normalized).reduce(function (prev, curr) {\n    var field = normalized[curr];\n    prev[curr] = function mappedField() {\n      if (this.$validator.fieldBag[field]) {\n        return this.$validator.fieldBag[field];\n      }\n\n      var index = field.indexOf('.');\n      if (index <= 0) {\n        return {};\n      }\n      var ref = field.split('.');\n      var scope = ref[0];\n      var name = ref[1];\n\n      return getPath((\"$\" + scope + \".\" + name), this.$validator.fieldBag, {});\n    };\n\n    return prev;\n  }, {});\n};\n\n// eslint-disable-next-line\nvar install = function (Vue, options) {\n  var config$$1 = assign({}, config, options);\n  if (config$$1.dictionary) {\n    Validator.updateDictionary(config$$1.dictionary);\n  }\n\n  Validator.setLocale(config$$1.locale);\n  Validator.setStrictMode(config$$1.strict);\n\n  Vue.mixin(makeMixin(Vue, config$$1));\n  Vue.directive('validate', makeDirective(config$$1));\n};\n\nvar index = {\n  install: install,\n  mapFields: mapFields,\n  Validator: Validator,\n  ErrorBag: ErrorBag,\n  Rules: Rules,\n  version: '2.0.0-rc.5'\n};\n\nreturn index;\n\n})));\n\n},{}],3:[function(require,module,exports){\n(function (global){\n/*!\n * Vue.js v2.5.3\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):e.Vue=t()}(this,function(){\"use strict\";function e(e){return void 0===e||null===e}function t(e){return void 0!==e&&null!==e}function n(e){return!0===e}function r(e){return!1===e}function i(e){return\"string\"==typeof e||\"number\"==typeof e||\"boolean\"==typeof e}function o(e){return null!==e&&\"object\"==typeof e}function a(e){return\"[object Object]\"===Oi.call(e)}function s(e){return\"[object RegExp]\"===Oi.call(e)}function c(e){var t=parseFloat(String(e));return t>=0&&Math.floor(t)===t&&isFinite(e)}function u(e){return null==e?\"\":\"object\"==typeof e?JSON.stringify(e,null,2):String(e)}function l(e){var t=parseFloat(e);return isNaN(t)?e:t}function f(e,t){for(var n=Object.create(null),r=e.split(\",\"),i=0;i<r.length;i++)n[r[i]]=!0;return t?function(e){return n[e.toLowerCase()]}:function(e){return n[e]}}function d(e,t){if(e.length){var n=e.indexOf(t);if(n>-1)return e.splice(n,1)}}function p(e,t){return Ei.call(e,t)}function v(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}function h(e,t){function n(n){var r=arguments.length;return r?r>1?e.apply(t,arguments):e.call(t,n):e.call(t)}return n._length=e.length,n}function m(e,t){t=t||0;for(var n=e.length-t,r=new Array(n);n--;)r[n]=e[n+t];return r}function y(e,t){for(var n in t)e[n]=t[n];return e}function g(e){for(var t={},n=0;n<e.length;n++)e[n]&&y(t,e[n]);return t}function _(e,t,n){}function b(e,t){if(e===t)return!0;var n=o(e),r=o(t);if(!n||!r)return!n&&!r&&String(e)===String(t);try{var i=Array.isArray(e),a=Array.isArray(t);if(i&&a)return e.length===t.length&&e.every(function(e,n){return b(e,t[n])});if(i||a)return!1;var s=Object.keys(e),c=Object.keys(t);return s.length===c.length&&s.every(function(n){return b(e[n],t[n])})}catch(e){return!1}}function $(e,t){for(var n=0;n<e.length;n++)if(b(e[n],t))return n;return-1}function C(e){var t=!1;return function(){t||(t=!0,e.apply(this,arguments))}}function w(e){var t=(e+\"\").charCodeAt(0);return 36===t||95===t}function x(e,t,n,r){Object.defineProperty(e,t,{value:n,enumerable:!!r,writable:!0,configurable:!0})}function k(e){if(!Vi.test(e)){var t=e.split(\".\");return function(e){for(var n=0;n<t.length;n++){if(!e)return;e=e[t[n]]}return e}}}function A(e){return\"function\"==typeof e&&/native code/.test(e.toString())}function O(e){co.target&&uo.push(co.target),co.target=e}function S(){co.target=uo.pop()}function T(e){return new lo(void 0,void 0,void 0,String(e))}function E(e,t){var n=e.componentOptions,r=new lo(e.tag,e.data,e.children,e.text,e.elm,e.context,n,e.asyncFactory);return r.ns=e.ns,r.isStatic=e.isStatic,r.key=e.key,r.isComment=e.isComment,r.isCloned=!0,t&&(e.children&&(r.children=j(e.children,!0)),n&&n.children&&(n.children=j(n.children,!0))),r}function j(e,t){for(var n=e.length,r=new Array(n),i=0;i<n;i++)r[i]=E(e[i],t);return r}function N(e,t,n){e.__proto__=t}function L(e,t,n){for(var r=0,i=n.length;r<i;r++){var o=n[r];x(e,o,t[o])}}function I(e,t){if(o(e)&&!(e instanceof lo)){var n;return p(e,\"__ob__\")&&e.__ob__ instanceof go?n=e.__ob__:yo.shouldConvert&&!ro()&&(Array.isArray(e)||a(e))&&Object.isExtensible(e)&&!e._isVue&&(n=new go(e)),t&&n&&n.vmCount++,n}}function M(e,t,n,r,i){var o=new co,a=Object.getOwnPropertyDescriptor(e,t);if(!a||!1!==a.configurable){var s=a&&a.get,c=a&&a.set,u=!i&&I(n);Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var t=s?s.call(e):n;return co.target&&(o.depend(),u&&(u.dep.depend(),Array.isArray(t)&&F(t))),t},set:function(t){var r=s?s.call(e):n;t===r||t!==t&&r!==r||(c?c.call(e,t):n=t,u=!i&&I(t),o.notify())}})}}function D(e,t,n){if(Array.isArray(e)&&c(t))return e.length=Math.max(e.length,t),e.splice(t,1,n),n;if(t in e&&!(t in Object.prototype))return e[t]=n,n;var r=e.__ob__;return e._isVue||r&&r.vmCount?n:r?(M(r.value,t,n),r.dep.notify(),n):(e[t]=n,n)}function P(e,t){if(Array.isArray(e)&&c(t))e.splice(t,1);else{var n=e.__ob__;e._isVue||n&&n.vmCount||p(e,t)&&(delete e[t],n&&n.dep.notify())}}function F(e){for(var t=void 0,n=0,r=e.length;n<r;n++)(t=e[n])&&t.__ob__&&t.__ob__.dep.depend(),Array.isArray(t)&&F(t)}function R(e,t){if(!t)return e;for(var n,r,i,o=Object.keys(t),s=0;s<o.length;s++)r=e[n=o[s]],i=t[n],p(e,n)?a(r)&&a(i)&&R(r,i):D(e,n,i);return e}function H(e,t,n){return n?function(){var r=\"function\"==typeof t?t.call(n):t,i=\"function\"==typeof e?e.call(n):e;return r?R(r,i):i}:t?e?function(){return R(\"function\"==typeof t?t.call(this):t,\"function\"==typeof e?e.call(this):e)}:t:e}function B(e,t){return t?e?e.concat(t):Array.isArray(t)?t:[t]:e}function U(e,t,n,r){var i=Object.create(e||null);return t?y(i,t):i}function V(e,t){var n=e.props;if(n){var r,i,o={};if(Array.isArray(n))for(r=n.length;r--;)\"string\"==typeof(i=n[r])&&(o[Ni(i)]={type:null});else if(a(n))for(var s in n)i=n[s],o[Ni(s)]=a(i)?i:{type:i};e.props=o}}function z(e,t){var n=e.inject,r=e.inject={};if(Array.isArray(n))for(var i=0;i<n.length;i++)r[n[i]]={from:n[i]};else if(a(n))for(var o in n){var s=n[o];r[o]=a(s)?y({from:o},s):{from:s}}}function K(e){var t=e.directives;if(t)for(var n in t){var r=t[n];\"function\"==typeof r&&(t[n]={bind:r,update:r})}}function J(e,t,n){function r(r){var i=_o[r]||Co;c[r]=i(e[r],t[r],n,r)}\"function\"==typeof t&&(t=t.options),V(t,n),z(t,n),K(t);var i=t.extends;if(i&&(e=J(e,i,n)),t.mixins)for(var o=0,a=t.mixins.length;o<a;o++)e=J(e,t.mixins[o],n);var s,c={};for(s in e)r(s);for(s in t)p(e,s)||r(s);return c}function q(e,t,n,r){if(\"string\"==typeof n){var i=e[t];if(p(i,n))return i[n];var o=Ni(n);if(p(i,o))return i[o];var a=Li(o);if(p(i,a))return i[a];var s=i[n]||i[o]||i[a];return s}}function W(e,t,n,r){var i=t[e],o=!p(n,e),a=n[e];if(Y(Boolean,i.type)&&(o&&!p(i,\"default\")?a=!1:Y(String,i.type)||\"\"!==a&&a!==Mi(e)||(a=!0)),void 0===a){a=G(r,i,e);var s=yo.shouldConvert;yo.shouldConvert=!0,I(a),yo.shouldConvert=s}return a}function G(e,t,n){if(p(t,\"default\")){var r=t.default;return e&&e.$options.propsData&&void 0===e.$options.propsData[n]&&void 0!==e._props[n]?e._props[n]:\"function\"==typeof r&&\"Function\"!==Z(t.type)?r.call(e):r}}function Z(e){var t=e&&e.toString().match(/^\\s*function (\\w+)/);return t?t[1]:\"\"}function Y(e,t){if(!Array.isArray(t))return Z(t)===Z(e);for(var n=0,r=t.length;n<r;n++)if(Z(t[n])===Z(e))return!0;return!1}function Q(e,t,n){if(t)for(var r=t;r=r.$parent;){var i=r.$options.errorCaptured;if(i)for(var o=0;o<i.length;o++)try{if(!1===i[o].call(r,e,t,n))return}catch(e){X(e,r,\"errorCaptured hook\")}}X(e,t,n)}function X(e,t,n){if(Bi.errorHandler)try{return Bi.errorHandler.call(null,e,t,n)}catch(e){ee(e,null,\"config.errorHandler\")}ee(e,t,n)}function ee(e,t,n){if(!Ki||\"undefined\"==typeof console)throw e;console.error(e)}function te(){xo=!1;var e=wo.slice(0);wo.length=0;for(var t=0;t<e.length;t++)e[t]()}function ne(e){return e._withTask||(e._withTask=function(){ko=!0;var t=e.apply(null,arguments);return ko=!1,t})}function re(e,t){var n;if(wo.push(function(){if(e)try{e.call(t)}catch(e){Q(e,t,\"nextTick\")}else n&&n(t)}),xo||(xo=!0,ko?$o():bo()),!e&&\"undefined\"!=typeof Promise)return new Promise(function(e){n=e})}function ie(e){function t(){var e=arguments,n=t.fns;if(!Array.isArray(n))return n.apply(null,arguments);for(var r=n.slice(),i=0;i<r.length;i++)r[i].apply(null,e)}return t.fns=e,t}function oe(t,n,r,i,o){var a,s,c,u;for(a in t)s=t[a],c=n[a],u=Eo(a),e(s)||(e(c)?(e(s.fns)&&(s=t[a]=ie(s)),r(u.name,s,u.once,u.capture,u.passive)):s!==c&&(c.fns=s,t[a]=c));for(a in n)e(t[a])&&i((u=Eo(a)).name,n[a],u.capture)}function ae(r,i,o){function a(){o.apply(this,arguments),d(s.fns,a)}r instanceof lo&&(r=r.data.hook||(r.data.hook={}));var s,c=r[i];e(c)?s=ie([a]):t(c.fns)&&n(c.merged)?(s=c).fns.push(a):s=ie([c,a]),s.merged=!0,r[i]=s}function se(n,r,i){var o=r.options.props;if(!e(o)){var a={},s=n.attrs,c=n.props;if(t(s)||t(c))for(var u in o){var l=Mi(u);ce(a,c,u,l,!0)||ce(a,s,u,l,!1)}return a}}function ce(e,n,r,i,o){if(t(n)){if(p(n,r))return e[r]=n[r],o||delete n[r],!0;if(p(n,i))return e[r]=n[i],o||delete n[i],!0}return!1}function ue(e){for(var t=0;t<e.length;t++)if(Array.isArray(e[t]))return Array.prototype.concat.apply([],e);return e}function le(e){return i(e)?[T(e)]:Array.isArray(e)?de(e):void 0}function fe(e){return t(e)&&t(e.text)&&r(e.isComment)}function de(r,o){var a,s,c,u,l=[];for(a=0;a<r.length;a++)e(s=r[a])||\"boolean\"==typeof s||(u=l[c=l.length-1],Array.isArray(s)?s.length>0&&(fe((s=de(s,(o||\"\")+\"_\"+a))[0])&&fe(u)&&(l[c]=T(u.text+s[0].text),s.shift()),l.push.apply(l,s)):i(s)?fe(u)?l[c]=T(u.text+s):\"\"!==s&&l.push(T(s)):fe(s)&&fe(u)?l[c]=T(u.text+s.text):(n(r._isVList)&&t(s.tag)&&e(s.key)&&t(o)&&(s.key=\"__vlist\"+o+\"_\"+a+\"__\"),l.push(s)));return l}function pe(e,t){return(e.__esModule||oo&&\"Module\"===e[Symbol.toStringTag])&&(e=e.default),o(e)?t.extend(e):e}function ve(e,t,n,r,i){var o=po();return o.asyncFactory=e,o.asyncMeta={data:t,context:n,children:r,tag:i},o}function he(r,i,a){if(n(r.error)&&t(r.errorComp))return r.errorComp;if(t(r.resolved))return r.resolved;if(n(r.loading)&&t(r.loadingComp))return r.loadingComp;if(!t(r.contexts)){var s=r.contexts=[a],c=!0,u=function(){for(var e=0,t=s.length;e<t;e++)s[e].$forceUpdate()},l=C(function(e){r.resolved=pe(e,i),c||u()}),f=C(function(e){t(r.errorComp)&&(r.error=!0,u())}),d=r(l,f);return o(d)&&(\"function\"==typeof d.then?e(r.resolved)&&d.then(l,f):t(d.component)&&\"function\"==typeof d.component.then&&(d.component.then(l,f),t(d.error)&&(r.errorComp=pe(d.error,i)),t(d.loading)&&(r.loadingComp=pe(d.loading,i),0===d.delay?r.loading=!0:setTimeout(function(){e(r.resolved)&&e(r.error)&&(r.loading=!0,u())},d.delay||200)),t(d.timeout)&&setTimeout(function(){e(r.resolved)&&f(null)},d.timeout))),c=!1,r.loading?r.loadingComp:r.resolved}r.contexts.push(a)}function me(e){return e.isComment&&e.asyncFactory}function ye(e){if(Array.isArray(e))for(var n=0;n<e.length;n++){var r=e[n];if(t(r)&&(t(r.componentOptions)||me(r)))return r}}function ge(e){e._events=Object.create(null),e._hasHookEvent=!1;var t=e.$options._parentListeners;t&&$e(e,t)}function _e(e,t,n){n?To.$once(e,t):To.$on(e,t)}function be(e,t){To.$off(e,t)}function $e(e,t,n){To=e,oe(t,n||{},_e,be,e),To=void 0}function Ce(e,t){var n={};if(!e)return n;for(var r=0,i=e.length;r<i;r++){var o=e[r],a=o.data;if(a&&a.attrs&&a.attrs.slot&&delete a.attrs.slot,o.context!==t&&o.functionalContext!==t||!a||null==a.slot)(n.default||(n.default=[])).push(o);else{var s=o.data.slot,c=n[s]||(n[s]=[]);\"template\"===o.tag?c.push.apply(c,o.children):c.push(o)}}for(var u in n)n[u].every(we)&&delete n[u];return n}function we(e){return e.isComment||\" \"===e.text}function xe(e,t){t=t||{};for(var n=0;n<e.length;n++)Array.isArray(e[n])?xe(e[n],t):t[e[n].key]=e[n].fn;return t}function ke(e){var t=e.$options,n=t.parent;if(n&&!t.abstract){for(;n.$options.abstract&&n.$parent;)n=n.$parent;n.$children.push(e)}e.$parent=n,e.$root=n?n.$root:e,e.$children=[],e.$refs={},e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}function Ae(e,t,n){e.$el=t,e.$options.render||(e.$options.render=po),je(e,\"beforeMount\");var r;return r=function(){e._update(e._render(),n)},e._watcher=new Ro(e,r,_),n=!1,null==e.$vnode&&(e._isMounted=!0,je(e,\"mounted\")),e}function Oe(e,t,n,r,i){var o=!!(i||e.$options._renderChildren||r.data.scopedSlots||e.$scopedSlots!==Ui);if(e.$options._parentVnode=r,e.$vnode=r,e._vnode&&(e._vnode.parent=r),e.$options._renderChildren=i,e.$attrs=r.data&&r.data.attrs||Ui,e.$listeners=n||Ui,t&&e.$options.props){yo.shouldConvert=!1;for(var a=e._props,s=e.$options._propKeys||[],c=0;c<s.length;c++){var u=s[c];a[u]=W(u,e.$options.props,t,e)}yo.shouldConvert=!0,e.$options.propsData=t}if(n){var l=e.$options._parentListeners;e.$options._parentListeners=n,$e(e,n,l)}o&&(e.$slots=Ce(i,r.context),e.$forceUpdate())}function Se(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function Te(e,t){if(t){if(e._directInactive=!1,Se(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var n=0;n<e.$children.length;n++)Te(e.$children[n]);je(e,\"activated\")}}function Ee(e,t){if(!(t&&(e._directInactive=!0,Se(e))||e._inactive)){e._inactive=!0;for(var n=0;n<e.$children.length;n++)Ee(e.$children[n]);je(e,\"deactivated\")}}function je(e,t){var n=e.$options[t];if(n)for(var r=0,i=n.length;r<i;r++)try{n[r].call(e)}catch(n){Q(n,e,t+\" hook\")}e._hasHookEvent&&e.$emit(\"hook:\"+t)}function Ne(){Po=No.length=Lo.length=0,Io={},Mo=Do=!1}function Le(){Do=!0;var e,t;for(No.sort(function(e,t){return e.id-t.id}),Po=0;Po<No.length;Po++)t=(e=No[Po]).id,Io[t]=null,e.run();var n=Lo.slice(),r=No.slice();Ne(),De(n),Ie(r),io&&Bi.devtools&&io.emit(\"flush\")}function Ie(e){for(var t=e.length;t--;){var n=e[t],r=n.vm;r._watcher===n&&r._isMounted&&je(r,\"updated\")}}function Me(e){e._inactive=!1,Lo.push(e)}function De(e){for(var t=0;t<e.length;t++)e[t]._inactive=!0,Te(e[t],!0)}function Pe(e){var t=e.id;if(null==Io[t]){if(Io[t]=!0,Do){for(var n=No.length-1;n>Po&&No[n].id>e.id;)n--;No.splice(n+1,0,e)}else No.push(e);Mo||(Mo=!0,re(Le))}}function Fe(e){Ho.clear(),Re(e,Ho)}function Re(e,t){var n,r,i=Array.isArray(e);if((i||o(e))&&Object.isExtensible(e)){if(e.__ob__){var a=e.__ob__.dep.id;if(t.has(a))return;t.add(a)}if(i)for(n=e.length;n--;)Re(e[n],t);else for(n=(r=Object.keys(e)).length;n--;)Re(e[r[n]],t)}}function He(e,t,n){Bo.get=function(){return this[t][n]},Bo.set=function(e){this[t][n]=e},Object.defineProperty(e,n,Bo)}function Be(e){e._watchers=[];var t=e.$options;t.props&&Ue(e,t.props),t.methods&&We(e,t.methods),t.data?Ve(e):I(e._data={},!0),t.computed&&Ke(e,t.computed),t.watch&&t.watch!==Qi&&Ge(e,t.watch)}function Ue(e,t){var n=e.$options.propsData||{},r=e._props={},i=e.$options._propKeys=[],o=!e.$parent;yo.shouldConvert=o;for(var a in t)!function(o){i.push(o);var a=W(o,t,n,e);M(r,o,a),o in e||He(e,\"_props\",o)}(a);yo.shouldConvert=!0}function Ve(e){var t=e.$options.data;a(t=e._data=\"function\"==typeof t?ze(t,e):t||{})||(t={});for(var n=Object.keys(t),r=e.$options.props,i=n.length;i--;){var o=n[i];r&&p(r,o)||w(o)||He(e,\"_data\",o)}I(t,!0)}function ze(e,t){try{return e.call(t,t)}catch(e){return Q(e,t,\"data()\"),{}}}function Ke(e,t){var n=e._computedWatchers=Object.create(null),r=ro();for(var i in t){var o=t[i],a=\"function\"==typeof o?o:o.get;r||(n[i]=new Ro(e,a||_,_,Uo)),i in e||Je(e,i,o)}}function Je(e,t,n){var r=!ro();\"function\"==typeof n?(Bo.get=r?qe(t):n,Bo.set=_):(Bo.get=n.get?r&&!1!==n.cache?qe(t):n.get:_,Bo.set=n.set?n.set:_),Object.defineProperty(e,t,Bo)}function qe(e){return function(){var t=this._computedWatchers&&this._computedWatchers[e];if(t)return t.dirty&&t.evaluate(),co.target&&t.depend(),t.value}}function We(e,t){for(var n in t)e[n]=null==t[n]?_:h(t[n],e)}function Ge(e,t){for(var n in t){var r=t[n];if(Array.isArray(r))for(var i=0;i<r.length;i++)Ze(e,n,r[i]);else Ze(e,n,r)}}function Ze(e,t,n,r){return a(n)&&(r=n,n=n.handler),\"string\"==typeof n&&(n=e[n]),e.$watch(t,n,r)}function Ye(e){var t=e.$options.provide;t&&(e._provided=\"function\"==typeof t?t.call(e):t)}function Qe(e){var t=Xe(e.$options.inject,e);t&&(yo.shouldConvert=!1,Object.keys(t).forEach(function(n){M(e,n,t[n])}),yo.shouldConvert=!0)}function Xe(e,t){if(e){for(var n=Object.create(null),r=oo?Reflect.ownKeys(e).filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}):Object.keys(e),i=0;i<r.length;i++){for(var o=r[i],a=e[o].from,s=t;s;){if(s._provided&&a in s._provided){n[o]=s._provided[a];break}s=s.$parent}if(!s&&\"default\"in e[o]){var c=e[o].default;n[o]=\"function\"==typeof c?c.call(t):c}}return n}}function et(e,n){var r,i,a,s,c;if(Array.isArray(e)||\"string\"==typeof e)for(r=new Array(e.length),i=0,a=e.length;i<a;i++)r[i]=n(e[i],i);else if(\"number\"==typeof e)for(r=new Array(e),i=0;i<e;i++)r[i]=n(i+1,i);else if(o(e))for(s=Object.keys(e),r=new Array(s.length),i=0,a=s.length;i<a;i++)c=s[i],r[i]=n(e[c],c,i);return t(r)&&(r._isVList=!0),r}function tt(e,t,n,r){var i,o=this.$scopedSlots[e];if(o)n=n||{},r&&(n=y(y({},r),n)),i=o(n)||t;else{var a=this.$slots[e];a&&(a._rendered=!0),i=a||t}var s=n&&n.slot;return s?this.$createElement(\"template\",{slot:s},i):i}function nt(e){return q(this.$options,\"filters\",e,!0)||Pi}function rt(e,t,n,r){var i=Bi.keyCodes[t]||n;return i?Array.isArray(i)?-1===i.indexOf(e):i!==e:r?Mi(r)!==t:void 0}function it(e,t,n,r,i){if(n)if(o(n)){Array.isArray(n)&&(n=g(n));var a;for(var s in n)!function(o){if(\"class\"===o||\"style\"===o||Ti(o))a=e;else{var s=e.attrs&&e.attrs.type;a=r||Bi.mustUseProp(t,s,o)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}o in a||(a[o]=n[o],i&&((e.on||(e.on={}))[\"update:\"+o]=function(e){n[o]=e}))}(s)}else;return e}function ot(e,t){var n=this.$options,r=n.cached||(n.cached=[]),i=r[e];return i&&!t?Array.isArray(i)?j(i):E(i):(i=r[e]=n.staticRenderFns[e].call(this._renderProxy,null,this),st(i,\"__static__\"+e,!1),i)}function at(e,t,n){return st(e,\"__once__\"+t+(n?\"_\"+n:\"\"),!0),e}function st(e,t,n){if(Array.isArray(e))for(var r=0;r<e.length;r++)e[r]&&\"string\"!=typeof e[r]&&ct(e[r],t+\"_\"+r,n);else ct(e,t,n)}function ct(e,t,n){e.isStatic=!0,e.key=t,e.isOnce=n}function ut(e,t){if(t)if(a(t)){var n=e.on=e.on?y({},e.on):{};for(var r in t){var i=n[r],o=t[r];n[r]=i?[].concat(i,o):o}}else;return e}function lt(e){e._o=at,e._n=l,e._s=u,e._l=et,e._t=tt,e._q=b,e._i=$,e._m=ot,e._f=nt,e._k=rt,e._b=it,e._v=T,e._e=po,e._u=xe,e._g=ut}function ft(e,t,r,i,o){var a=o.options;this.data=e,this.props=t,this.children=r,this.parent=i,this.listeners=e.on||Ui,this.injections=Xe(a.inject,i),this.slots=function(){return Ce(r,i)};var s=Object.create(i),c=n(a._compiled),u=!c;c&&(this.$options=a,this.$slots=this.slots(),this.$scopedSlots=e.scopedSlots||Ui),a._scopeId?this._c=function(e,t,n,r){var o=_t(s,e,t,n,r,u);return o&&(o.functionalScopeId=a._scopeId,o.functionalContext=i),o}:this._c=function(e,t,n,r){return _t(s,e,t,n,r,u)}}function dt(e,n,r,i,o){var a=e.options,s={},c=a.props;if(t(c))for(var u in c)s[u]=W(u,c,n||Ui);else t(r.attrs)&&pt(s,r.attrs),t(r.props)&&pt(s,r.props);var l=new ft(r,s,o,i,e),f=a.render.call(null,l._c,l);return f instanceof lo&&(f.functionalContext=i,f.functionalOptions=a,r.slot&&((f.data||(f.data={})).slot=r.slot)),f}function pt(e,t){for(var n in t)e[Ni(n)]=t[n]}function vt(r,i,a,s,c){if(!e(r)){var u=a.$options._base;if(o(r)&&(r=u.extend(r)),\"function\"==typeof r){var l;if(e(r.cid)&&(l=r,void 0===(r=he(l,u,a))))return ve(l,i,a,s,c);i=i||{},xt(r),t(i.model)&&gt(r.options,i);var f=se(i,r,c);if(n(r.options.functional))return dt(r,f,i,a,s);var d=i.on;if(i.on=i.nativeOn,n(r.options.abstract)){var p=i.slot;i={},p&&(i.slot=p)}mt(i);var v=r.options.name||c;return new lo(\"vue-component-\"+r.cid+(v?\"-\"+v:\"\"),i,void 0,void 0,void 0,a,{Ctor:r,propsData:f,listeners:d,tag:c,children:s},l)}}}function ht(e,n,r,i){var o=e.componentOptions,a={_isComponent:!0,parent:n,propsData:o.propsData,_componentTag:o.tag,_parentVnode:e,_parentListeners:o.listeners,_renderChildren:o.children,_parentElm:r||null,_refElm:i||null},s=e.data.inlineTemplate;return t(s)&&(a.render=s.render,a.staticRenderFns=s.staticRenderFns),new o.Ctor(a)}function mt(e){e.hook||(e.hook={});for(var t=0;t<zo.length;t++){var n=zo[t],r=e.hook[n],i=Vo[n];e.hook[n]=r?yt(i,r):i}}function yt(e,t){return function(n,r,i,o){e(n,r,i,o),t(n,r,i,o)}}function gt(e,n){var r=e.model&&e.model.prop||\"value\",i=e.model&&e.model.event||\"input\";(n.props||(n.props={}))[r]=n.model.value;var o=n.on||(n.on={});t(o[i])?o[i]=[n.model.callback].concat(o[i]):o[i]=n.model.callback}function _t(e,t,r,o,a,s){return(Array.isArray(r)||i(r))&&(a=o,o=r,r=void 0),n(s)&&(a=Jo),bt(e,t,r,o,a)}function bt(e,n,r,i,o){if(t(r)&&t(r.__ob__))return po();if(t(r)&&t(r.is)&&(n=r.is),!n)return po();Array.isArray(i)&&\"function\"==typeof i[0]&&((r=r||{}).scopedSlots={default:i[0]},i.length=0),o===Jo?i=le(i):o===Ko&&(i=ue(i));var a,s;if(\"string\"==typeof n){var c;s=e.$vnode&&e.$vnode.ns||Bi.getTagNamespace(n),a=Bi.isReservedTag(n)?new lo(Bi.parsePlatformTagName(n),r,i,void 0,void 0,e):t(c=q(e.$options,\"components\",n))?vt(c,r,e,i,n):new lo(n,r,i,void 0,void 0,e)}else a=vt(n,r,e,i);return t(a)?(s&&$t(a,s),a):po()}function $t(r,i,o){if(r.ns=i,\"foreignObject\"===r.tag&&(i=void 0,o=!0),t(r.children))for(var a=0,s=r.children.length;a<s;a++){var c=r.children[a];t(c.tag)&&(e(c.ns)||n(o))&&$t(c,i,o)}}function Ct(e){e._vnode=null;var t=e.$options,n=e.$vnode=t._parentVnode,r=n&&n.context;e.$slots=Ce(t._renderChildren,r),e.$scopedSlots=Ui,e._c=function(t,n,r,i){return _t(e,t,n,r,i,!1)},e.$createElement=function(t,n,r,i){return _t(e,t,n,r,i,!0)};var i=n&&n.data;M(e,\"$attrs\",i&&i.attrs||Ui,null,!0),M(e,\"$listeners\",t._parentListeners||Ui,null,!0)}function wt(e,t){var n=e.$options=Object.create(e.constructor.options);n.parent=t.parent,n.propsData=t.propsData,n._parentVnode=t._parentVnode,n._parentListeners=t._parentListeners,n._renderChildren=t._renderChildren,n._componentTag=t._componentTag,n._parentElm=t._parentElm,n._refElm=t._refElm,t.render&&(n.render=t.render,n.staticRenderFns=t.staticRenderFns)}function xt(e){var t=e.options;if(e.super){var n=xt(e.super);if(n!==e.superOptions){e.superOptions=n;var r=kt(e);r&&y(e.extendOptions,r),(t=e.options=J(n,e.extendOptions)).name&&(t.components[t.name]=e)}}return t}function kt(e){var t,n=e.options,r=e.extendOptions,i=e.sealedOptions;for(var o in n)n[o]!==i[o]&&(t||(t={}),t[o]=At(n[o],r[o],i[o]));return t}function At(e,t,n){if(Array.isArray(e)){var r=[];n=Array.isArray(n)?n:[n],t=Array.isArray(t)?t:[t];for(var i=0;i<e.length;i++)(t.indexOf(e[i])>=0||n.indexOf(e[i])<0)&&r.push(e[i]);return r}return e}function Ot(e){this._init(e)}function St(e){e.use=function(e){var t=this._installedPlugins||(this._installedPlugins=[]);if(t.indexOf(e)>-1)return this;var n=m(arguments,1);return n.unshift(this),\"function\"==typeof e.install?e.install.apply(e,n):\"function\"==typeof e&&e.apply(null,n),t.push(e),this}}function Tt(e){e.mixin=function(e){return this.options=J(this.options,e),this}}function Et(e){e.cid=0;var t=1;e.extend=function(e){e=e||{};var n=this,r=n.cid,i=e._Ctor||(e._Ctor={});if(i[r])return i[r];var o=e.name||n.options.name,a=function(e){this._init(e)};return a.prototype=Object.create(n.prototype),a.prototype.constructor=a,a.cid=t++,a.options=J(n.options,e),a.super=n,a.options.props&&jt(a),a.options.computed&&Nt(a),a.extend=n.extend,a.mixin=n.mixin,a.use=n.use,Ri.forEach(function(e){a[e]=n[e]}),o&&(a.options.components[o]=a),a.superOptions=n.options,a.extendOptions=e,a.sealedOptions=y({},a.options),i[r]=a,a}}function jt(e){var t=e.options.props;for(var n in t)He(e.prototype,\"_props\",n)}function Nt(e){var t=e.options.computed;for(var n in t)Je(e.prototype,n,t[n])}function Lt(e){Ri.forEach(function(t){e[t]=function(e,n){return n?(\"component\"===t&&a(n)&&(n.name=n.name||e,n=this.options._base.extend(n)),\"directive\"===t&&\"function\"==typeof n&&(n={bind:n,update:n}),this.options[t+\"s\"][e]=n,n):this.options[t+\"s\"][e]}})}function It(e){return e&&(e.Ctor.options.name||e.tag)}function Mt(e,t){return Array.isArray(e)?e.indexOf(t)>-1:\"string\"==typeof e?e.split(\",\").indexOf(t)>-1:!!s(e)&&e.test(t)}function Dt(e,t){var n=e.cache,r=e.keys,i=e._vnode;for(var o in n){var a=n[o];if(a){var s=It(a.componentOptions);s&&!t(s)&&Pt(n,o,r,i)}}}function Pt(e,t,n,r){var i=e[t];i&&i!==r&&i.componentInstance.$destroy(),e[t]=null,d(n,t)}function Ft(e){for(var n=e.data,r=e,i=e;t(i.componentInstance);)(i=i.componentInstance._vnode).data&&(n=Rt(i.data,n));for(;t(r=r.parent);)r.data&&(n=Rt(n,r.data));return Ht(n.staticClass,n.class)}function Rt(e,n){return{staticClass:Bt(e.staticClass,n.staticClass),class:t(e.class)?[e.class,n.class]:n.class}}function Ht(e,n){return t(e)||t(n)?Bt(e,Ut(n)):\"\"}function Bt(e,t){return e?t?e+\" \"+t:e:t||\"\"}function Ut(e){return Array.isArray(e)?Vt(e):o(e)?zt(e):\"string\"==typeof e?e:\"\"}function Vt(e){for(var n,r=\"\",i=0,o=e.length;i<o;i++)t(n=Ut(e[i]))&&\"\"!==n&&(r&&(r+=\" \"),r+=n);return r}function zt(e){var t=\"\";for(var n in e)e[n]&&(t&&(t+=\" \"),t+=n);return t}function Kt(e){return ha(e)?\"svg\":\"math\"===e?\"math\":void 0}function Jt(e){if(\"string\"==typeof e){var t=document.querySelector(e);return t||document.createElement(\"div\")}return e}function qt(e,t){var n=e.data.ref;if(n){var r=e.context,i=e.componentInstance||e.elm,o=r.$refs;t?Array.isArray(o[n])?d(o[n],i):o[n]===i&&(o[n]=void 0):e.data.refInFor?Array.isArray(o[n])?o[n].indexOf(i)<0&&o[n].push(i):o[n]=[i]:o[n]=i}}function Wt(r,i){return r.key===i.key&&(r.tag===i.tag&&r.isComment===i.isComment&&t(r.data)===t(i.data)&&Gt(r,i)||n(r.isAsyncPlaceholder)&&r.asyncFactory===i.asyncFactory&&e(i.asyncFactory.error))}function Gt(e,n){if(\"input\"!==e.tag)return!0;var r,i=t(r=e.data)&&t(r=r.attrs)&&r.type,o=t(r=n.data)&&t(r=r.attrs)&&r.type;return i===o||ga(i)&&ga(o)}function Zt(e,n,r){var i,o,a={};for(i=n;i<=r;++i)t(o=e[i].key)&&(a[o]=i);return a}function Yt(e,t){(e.data.directives||t.data.directives)&&Qt(e,t)}function Qt(e,t){var n,r,i,o=e===$a,a=t===$a,s=Xt(e.data.directives,e.context),c=Xt(t.data.directives,t.context),u=[],l=[];for(n in c)r=s[n],i=c[n],r?(i.oldValue=r.value,tn(i,\"update\",t,e),i.def&&i.def.componentUpdated&&l.push(i)):(tn(i,\"bind\",t,e),i.def&&i.def.inserted&&u.push(i));if(u.length){var f=function(){for(var n=0;n<u.length;n++)tn(u[n],\"inserted\",t,e)};o?ae(t,\"insert\",f):f()}if(l.length&&ae(t,\"postpatch\",function(){for(var n=0;n<l.length;n++)tn(l[n],\"componentUpdated\",t,e)}),!o)for(n in s)c[n]||tn(s[n],\"unbind\",e,e,a)}function Xt(e,t){var n=Object.create(null);if(!e)return n;var r,i;for(r=0;r<e.length;r++)(i=e[r]).modifiers||(i.modifiers=xa),n[en(i)]=i,i.def=q(t.$options,\"directives\",i.name,!0);return n}function en(e){return e.rawName||e.name+\".\"+Object.keys(e.modifiers||{}).join(\".\")}function tn(e,t,n,r,i){var o=e.def&&e.def[t];if(o)try{o(n.elm,e,n,r,i)}catch(r){Q(r,n.context,\"directive \"+e.name+\" \"+t+\" hook\")}}function nn(n,r){var i=r.componentOptions;if(!(t(i)&&!1===i.Ctor.options.inheritAttrs||e(n.data.attrs)&&e(r.data.attrs))){var o,a,s=r.elm,c=n.data.attrs||{},u=r.data.attrs||{};t(u.__ob__)&&(u=r.data.attrs=y({},u));for(o in u)a=u[o],c[o]!==a&&rn(s,o,a);(Wi||Gi)&&u.value!==c.value&&rn(s,\"value\",u.value);for(o in c)e(u[o])&&(la(o)?s.removeAttributeNS(ua,fa(o)):sa(o)||s.removeAttribute(o))}}function rn(e,t,n){ca(t)?da(n)?e.removeAttribute(t):(n=\"allowfullscreen\"===t&&\"EMBED\"===e.tagName?\"true\":t,e.setAttribute(t,n)):sa(t)?e.setAttribute(t,da(n)||\"false\"===n?\"false\":\"true\"):la(t)?da(n)?e.removeAttributeNS(ua,fa(t)):e.setAttributeNS(ua,t,n):da(n)?e.removeAttribute(t):e.setAttribute(t,n)}function on(n,r){var i=r.elm,o=r.data,a=n.data;if(!(e(o.staticClass)&&e(o.class)&&(e(a)||e(a.staticClass)&&e(a.class)))){var s=Ft(r),c=i._transitionClasses;t(c)&&(s=Bt(s,Ut(c))),s!==i._prevClass&&(i.setAttribute(\"class\",s),i._prevClass=s)}}function an(e){function t(){(a||(a=[])).push(e.slice(v,i).trim()),v=i+1}var n,r,i,o,a,s=!1,c=!1,u=!1,l=!1,f=0,d=0,p=0,v=0;for(i=0;i<e.length;i++)if(r=n,n=e.charCodeAt(i),s)39===n&&92!==r&&(s=!1);else if(c)34===n&&92!==r&&(c=!1);else if(u)96===n&&92!==r&&(u=!1);else if(l)47===n&&92!==r&&(l=!1);else if(124!==n||124===e.charCodeAt(i+1)||124===e.charCodeAt(i-1)||f||d||p){switch(n){case 34:c=!0;break;case 39:s=!0;break;case 96:u=!0;break;case 40:p++;break;case 41:p--;break;case 91:d++;break;case 93:d--;break;case 123:f++;break;case 125:f--}if(47===n){for(var h=i-1,m=void 0;h>=0&&\" \"===(m=e.charAt(h));h--);m&&Sa.test(m)||(l=!0)}}else void 0===o?(v=i+1,o=e.slice(0,i).trim()):t();if(void 0===o?o=e.slice(0,i).trim():0!==v&&t(),a)for(i=0;i<a.length;i++)o=sn(o,a[i]);return o}function sn(e,t){var n=t.indexOf(\"(\");return n<0?'_f(\"'+t+'\")('+e+\")\":'_f(\"'+t.slice(0,n)+'\")('+e+\",\"+t.slice(n+1)}function cn(e){console.error(\"[Vue compiler]: \"+e)}function un(e,t){return e?e.map(function(e){return e[t]}).filter(function(e){return e}):[]}function ln(e,t,n){(e.props||(e.props=[])).push({name:t,value:n})}function fn(e,t,n){(e.attrs||(e.attrs=[])).push({name:t,value:n})}function dn(e,t,n,r,i,o){(e.directives||(e.directives=[])).push({name:t,rawName:n,value:r,arg:i,modifiers:o})}function pn(e,t,n,r,i,o){r&&r.capture&&(delete r.capture,t=\"!\"+t),r&&r.once&&(delete r.once,t=\"~\"+t),r&&r.passive&&(delete r.passive,t=\"&\"+t);var a;r&&r.native?(delete r.native,a=e.nativeEvents||(e.nativeEvents={})):a=e.events||(e.events={});var s={value:n,modifiers:r},c=a[t];Array.isArray(c)?i?c.unshift(s):c.push(s):a[t]=c?i?[s,c]:[c,s]:s}function vn(e,t,n){var r=hn(e,\":\"+t)||hn(e,\"v-bind:\"+t);if(null!=r)return an(r);if(!1!==n){var i=hn(e,t);if(null!=i)return JSON.stringify(i)}}function hn(e,t,n){var r;if(null!=(r=e.attrsMap[t]))for(var i=e.attrsList,o=0,a=i.length;o<a;o++)if(i[o].name===t){i.splice(o,1);break}return n&&delete e.attrsMap[t],r}function mn(e,t,n){var r=n||{},i=r.number,o=\"$$v\";r.trim&&(o=\"(typeof $$v === 'string'? $$v.trim(): $$v)\"),i&&(o=\"_n(\"+o+\")\");var a=yn(t,o);e.model={value:\"(\"+t+\")\",expression:'\"'+t+'\"',callback:\"function ($$v) {\"+a+\"}\"}}function yn(e,t){var n=gn(e);return null===n.key?e+\"=\"+t:\"$set(\"+n.exp+\", \"+n.key+\", \"+t+\")\"}function gn(e){if(Zo=e.length,e.indexOf(\"[\")<0||e.lastIndexOf(\"]\")<Zo-1)return(Xo=e.lastIndexOf(\".\"))>-1?{exp:e.slice(0,Xo),key:'\"'+e.slice(Xo+1)+'\"'}:{exp:e,key:null};for(Yo=e,Xo=ea=ta=0;!bn();)$n(Qo=_n())?wn(Qo):91===Qo&&Cn(Qo);return{exp:e.slice(0,ea),key:e.slice(ea+1,ta)}}function _n(){return Yo.charCodeAt(++Xo)}function bn(){return Xo>=Zo}function $n(e){return 34===e||39===e}function Cn(e){var t=1;for(ea=Xo;!bn();)if(e=_n(),$n(e))wn(e);else if(91===e&&t++,93===e&&t--,0===t){ta=Xo;break}}function wn(e){for(var t=e;!bn()&&(e=_n())!==t;);}function xn(e,t,n){var r=n&&n.number,i=vn(e,\"value\")||\"null\",o=vn(e,\"true-value\")||\"true\",a=vn(e,\"false-value\")||\"false\";ln(e,\"checked\",\"Array.isArray(\"+t+\")?_i(\"+t+\",\"+i+\")>-1\"+(\"true\"===o?\":(\"+t+\")\":\":_q(\"+t+\",\"+o+\")\")),pn(e,\"change\",\"var $$a=\"+t+\",$$el=$event.target,$$c=$$el.checked?(\"+o+\"):(\"+a+\");if(Array.isArray($$a)){var $$v=\"+(r?\"_n(\"+i+\")\":i)+\",$$i=_i($$a,$$v);if($$el.checked){$$i<0&&(\"+t+\"=$$a.concat([$$v]))}else{$$i>-1&&(\"+t+\"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{\"+yn(t,\"$$c\")+\"}\",null,!0)}function kn(e,t,n){var r=n&&n.number,i=vn(e,\"value\")||\"null\";ln(e,\"checked\",\"_q(\"+t+\",\"+(i=r?\"_n(\"+i+\")\":i)+\")\"),pn(e,\"change\",yn(t,i),null,!0)}function An(e,t,n){var r=\"var $$selectedVal = \"+('Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return '+(n&&n.number?\"_n(val)\":\"val\")+\"})\")+\";\";pn(e,\"change\",r=r+\" \"+yn(t,\"$event.target.multiple ? $$selectedVal : $$selectedVal[0]\"),null,!0)}function On(e,t,n){var r=e.attrsMap.type,i=n||{},o=i.lazy,a=i.number,s=i.trim,c=!o&&\"range\"!==r,u=o?\"change\":\"range\"===r?Ta:\"input\",l=\"$event.target.value\";s&&(l=\"$event.target.value.trim()\"),a&&(l=\"_n(\"+l+\")\");var f=yn(t,l);c&&(f=\"if($event.target.composing)return;\"+f),ln(e,\"value\",\"(\"+t+\")\"),pn(e,u,f,null,!0),(s||a)&&pn(e,\"blur\",\"$forceUpdate()\")}function Sn(e){if(t(e[Ta])){var n=qi?\"change\":\"input\";e[n]=[].concat(e[Ta],e[n]||[]),delete e[Ta]}t(e[Ea])&&(e.change=[].concat(e[Ea],e.change||[]),delete e[Ea])}function Tn(e,t,n){var r=na;return function i(){null!==e.apply(null,arguments)&&jn(t,i,n,r)}}function En(e,t,n,r,i){t=ne(t),n&&(t=Tn(t,e,r)),na.addEventListener(e,t,Xi?{capture:r,passive:i}:r)}function jn(e,t,n,r){(r||na).removeEventListener(e,t._withTask||t,n)}function Nn(t,n){if(!e(t.data.on)||!e(n.data.on)){var r=n.data.on||{},i=t.data.on||{};na=n.elm,Sn(r),oe(r,i,En,jn,n.context),na=void 0}}function Ln(n,r){if(!e(n.data.domProps)||!e(r.data.domProps)){var i,o,a=r.elm,s=n.data.domProps||{},c=r.data.domProps||{};t(c.__ob__)&&(c=r.data.domProps=y({},c));for(i in s)e(c[i])&&(a[i]=\"\");for(i in c){if(o=c[i],\"textContent\"===i||\"innerHTML\"===i){if(r.children&&(r.children.length=0),o===s[i])continue;1===a.childNodes.length&&a.removeChild(a.childNodes[0])}if(\"value\"===i){a._value=o;var u=e(o)?\"\":String(o);In(a,u)&&(a.value=u)}else a[i]=o}}}function In(e,t){return!e.composing&&(\"OPTION\"===e.tagName||Mn(e,t)||Dn(e,t))}function Mn(e,t){var n=!0;try{n=document.activeElement!==e}catch(e){}return n&&e.value!==t}function Dn(e,n){var r=e.value,i=e._vModifiers;return t(i)&&i.number?l(r)!==l(n):t(i)&&i.trim?r.trim()!==n.trim():r!==n}function Pn(e){var t=Fn(e.style);return e.staticStyle?y(e.staticStyle,t):t}function Fn(e){return Array.isArray(e)?g(e):\"string\"==typeof e?La(e):e}function Rn(e,t){var n,r={};if(t)for(var i=e;i.componentInstance;)(i=i.componentInstance._vnode).data&&(n=Pn(i.data))&&y(r,n);(n=Pn(e.data))&&y(r,n);for(var o=e;o=o.parent;)o.data&&(n=Pn(o.data))&&y(r,n);return r}function Hn(n,r){var i=r.data,o=n.data;if(!(e(i.staticStyle)&&e(i.style)&&e(o.staticStyle)&&e(o.style))){var a,s,c=r.elm,u=o.staticStyle,l=o.normalizedStyle||o.style||{},f=u||l,d=Fn(r.data.style)||{};r.data.normalizedStyle=t(d.__ob__)?y({},d):d;var p=Rn(r,!0);for(s in f)e(p[s])&&Da(c,s,\"\");for(s in p)(a=p[s])!==f[s]&&Da(c,s,null==a?\"\":a)}}function Bn(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(\" \")>-1?t.split(/\\s+/).forEach(function(t){return e.classList.add(t)}):e.classList.add(t);else{var n=\" \"+(e.getAttribute(\"class\")||\"\")+\" \";n.indexOf(\" \"+t+\" \")<0&&e.setAttribute(\"class\",(n+t).trim())}}function Un(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(\" \")>-1?t.split(/\\s+/).forEach(function(t){return e.classList.remove(t)}):e.classList.remove(t),e.classList.length||e.removeAttribute(\"class\");else{for(var n=\" \"+(e.getAttribute(\"class\")||\"\")+\" \",r=\" \"+t+\" \";n.indexOf(r)>=0;)n=n.replace(r,\" \");(n=n.trim())?e.setAttribute(\"class\",n):e.removeAttribute(\"class\")}}function Vn(e){if(e){if(\"object\"==typeof e){var t={};return!1!==e.css&&y(t,Ha(e.name||\"v\")),y(t,e),t}return\"string\"==typeof e?Ha(e):void 0}}function zn(e){Wa(function(){Wa(e)})}function Kn(e,t){var n=e._transitionClasses||(e._transitionClasses=[]);n.indexOf(t)<0&&(n.push(t),Bn(e,t))}function Jn(e,t){e._transitionClasses&&d(e._transitionClasses,t),Un(e,t)}function qn(e,t,n){var r=Wn(e,t),i=r.type,o=r.timeout,a=r.propCount;if(!i)return n();var s=i===Ua?Ka:qa,c=0,u=function(){e.removeEventListener(s,l),n()},l=function(t){t.target===e&&++c>=a&&u()};setTimeout(function(){c<a&&u()},o+1),e.addEventListener(s,l)}function Wn(e,t){var n,r=window.getComputedStyle(e),i=r[za+\"Delay\"].split(\", \"),o=r[za+\"Duration\"].split(\", \"),a=Gn(i,o),s=r[Ja+\"Delay\"].split(\", \"),c=r[Ja+\"Duration\"].split(\", \"),u=Gn(s,c),l=0,f=0;return t===Ua?a>0&&(n=Ua,l=a,f=o.length):t===Va?u>0&&(n=Va,l=u,f=c.length):f=(n=(l=Math.max(a,u))>0?a>u?Ua:Va:null)?n===Ua?o.length:c.length:0,{type:n,timeout:l,propCount:f,hasTransform:n===Ua&&Ga.test(r[za+\"Property\"])}}function Gn(e,t){for(;e.length<t.length;)e=e.concat(e);return Math.max.apply(null,t.map(function(t,n){return Zn(t)+Zn(e[n])}))}function Zn(e){return 1e3*Number(e.slice(0,-1))}function Yn(n,r){var i=n.elm;t(i._leaveCb)&&(i._leaveCb.cancelled=!0,i._leaveCb());var a=Vn(n.data.transition);if(!e(a)&&!t(i._enterCb)&&1===i.nodeType){for(var s=a.css,c=a.type,u=a.enterClass,f=a.enterToClass,d=a.enterActiveClass,p=a.appearClass,v=a.appearToClass,h=a.appearActiveClass,m=a.beforeEnter,y=a.enter,g=a.afterEnter,_=a.enterCancelled,b=a.beforeAppear,$=a.appear,w=a.afterAppear,x=a.appearCancelled,k=a.duration,A=jo,O=jo.$vnode;O&&O.parent;)A=(O=O.parent).context;var S=!A._isMounted||!n.isRootInsert;if(!S||$||\"\"===$){var T=S&&p?p:u,E=S&&h?h:d,j=S&&v?v:f,N=S?b||m:m,L=S&&\"function\"==typeof $?$:y,I=S?w||g:g,M=S?x||_:_,D=l(o(k)?k.enter:k),P=!1!==s&&!Wi,F=er(L),R=i._enterCb=C(function(){P&&(Jn(i,j),Jn(i,E)),R.cancelled?(P&&Jn(i,T),M&&M(i)):I&&I(i),i._enterCb=null});n.data.show||ae(n,\"insert\",function(){var e=i.parentNode,t=e&&e._pending&&e._pending[n.key];t&&t.tag===n.tag&&t.elm._leaveCb&&t.elm._leaveCb(),L&&L(i,R)}),N&&N(i),P&&(Kn(i,T),Kn(i,E),zn(function(){Kn(i,j),Jn(i,T),R.cancelled||F||(Xn(D)?setTimeout(R,D):qn(i,c,R))})),n.data.show&&(r&&r(),L&&L(i,R)),P||F||R()}}}function Qn(n,r){function i(){x.cancelled||(n.data.show||((a.parentNode._pending||(a.parentNode._pending={}))[n.key]=n),v&&v(a),b&&(Kn(a,f),Kn(a,p),zn(function(){Kn(a,d),Jn(a,f),x.cancelled||$||(Xn(w)?setTimeout(x,w):qn(a,u,x))})),h&&h(a,x),b||$||x())}var a=n.elm;t(a._enterCb)&&(a._enterCb.cancelled=!0,a._enterCb());var s=Vn(n.data.transition);if(e(s))return r();if(!t(a._leaveCb)&&1===a.nodeType){var c=s.css,u=s.type,f=s.leaveClass,d=s.leaveToClass,p=s.leaveActiveClass,v=s.beforeLeave,h=s.leave,m=s.afterLeave,y=s.leaveCancelled,g=s.delayLeave,_=s.duration,b=!1!==c&&!Wi,$=er(h),w=l(o(_)?_.leave:_),x=a._leaveCb=C(function(){a.parentNode&&a.parentNode._pending&&(a.parentNode._pending[n.key]=null),b&&(Jn(a,d),Jn(a,p)),x.cancelled?(b&&Jn(a,f),y&&y(a)):(r(),m&&m(a)),a._leaveCb=null});g?g(i):i()}}function Xn(e){return\"number\"==typeof e&&!isNaN(e)}function er(n){if(e(n))return!1;var r=n.fns;return t(r)?er(Array.isArray(r)?r[0]:r):(n._length||n.length)>1}function tr(e,t){!0!==t.data.show&&Yn(t)}function nr(e,t,n){rr(e,t,n),(qi||Gi)&&setTimeout(function(){rr(e,t,n)},0)}function rr(e,t,n){var r=t.value,i=e.multiple;if(!i||Array.isArray(r)){for(var o,a,s=0,c=e.options.length;s<c;s++)if(a=e.options[s],i)o=$(r,or(a))>-1,a.selected!==o&&(a.selected=o);else if(b(or(a),r))return void(e.selectedIndex!==s&&(e.selectedIndex=s));i||(e.selectedIndex=-1)}}function ir(e,t){return t.every(function(t){return!b(t,e)})}function or(e){return\"_value\"in e?e._value:e.value}function ar(e){e.target.composing=!0}function sr(e){e.target.composing&&(e.target.composing=!1,cr(e.target,\"input\"))}function cr(e,t){var n=document.createEvent(\"HTMLEvents\");n.initEvent(t,!0,!0),e.dispatchEvent(n)}function ur(e){return!e.componentInstance||e.data&&e.data.transition?e:ur(e.componentInstance._vnode)}function lr(e){var t=e&&e.componentOptions;return t&&t.Ctor.options.abstract?lr(ye(t.children)):e}function fr(e){var t={},n=e.$options;for(var r in n.propsData)t[r]=e[r];var i=n._parentListeners;for(var o in i)t[Ni(o)]=i[o];return t}function dr(e,t){if(/\\d-keep-alive$/.test(t.tag))return e(\"keep-alive\",{props:t.componentOptions.propsData})}function pr(e){for(;e=e.parent;)if(e.data.transition)return!0}function vr(e,t){return t.key===e.key&&t.tag===e.tag}function hr(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function mr(e){e.data.newPos=e.elm.getBoundingClientRect()}function yr(e){var t=e.data.pos,n=e.data.newPos,r=t.left-n.left,i=t.top-n.top;if(r||i){e.data.moved=!0;var o=e.elm.style;o.transform=o.WebkitTransform=\"translate(\"+r+\"px,\"+i+\"px)\",o.transitionDuration=\"0s\"}}function gr(e,t){var n=t?as(t):is;if(n.test(e)){for(var r,i,o=[],a=n.lastIndex=0;r=n.exec(e);){(i=r.index)>a&&o.push(JSON.stringify(e.slice(a,i)));var s=an(r[1].trim());o.push(\"_s(\"+s+\")\"),a=i+r[0].length}return a<e.length&&o.push(JSON.stringify(e.slice(a))),o.join(\"+\")}}function _r(e,t){var n=t?Fs:Ps;return e.replace(n,function(e){return Ds[e]})}function br(e,t){function n(t){l+=t,e=e.substring(t)}function r(e,n,r){var i,s;if(null==n&&(n=l),null==r&&(r=l),e&&(s=e.toLowerCase()),e)for(i=a.length-1;i>=0&&a[i].lowerCasedTag!==s;i--);else i=0;if(i>=0){for(var c=a.length-1;c>=i;c--)t.end&&t.end(a[c].tag,n,r);a.length=i,o=i&&a[i-1].tag}else\"br\"===s?t.start&&t.start(e,[],!0,n,r):\"p\"===s&&(t.start&&t.start(e,[],!1,n,r),t.end&&t.end(e,n,r))}for(var i,o,a=[],s=t.expectHTML,c=t.isUnaryTag||Di,u=t.canBeLeftOpenTag||Di,l=0;e;){if(i=e,o&&Is(o)){var f=0,d=o.toLowerCase(),p=Ms[d]||(Ms[d]=new RegExp(\"([\\\\s\\\\S]*?)(</\"+d+\"[^>]*>)\",\"i\")),v=e.replace(p,function(e,n,r){return f=r.length,Is(d)||\"noscript\"===d||(n=n.replace(/<!--([\\s\\S]*?)-->/g,\"$1\").replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g,\"$1\")),Hs(d,n)&&(n=n.slice(1)),t.chars&&t.chars(n),\"\"});l+=e.length-v.length,e=v,r(d,l-f,l)}else{var h=e.indexOf(\"<\");if(0===h){if(bs.test(e)){var m=e.indexOf(\"--\\x3e\");if(m>=0){t.shouldKeepComment&&t.comment(e.substring(4,m)),n(m+3);continue}}if($s.test(e)){var y=e.indexOf(\"]>\");if(y>=0){n(y+2);continue}}var g=e.match(_s);if(g){n(g[0].length);continue}var _=e.match(gs);if(_){var b=l;n(_[0].length),r(_[1],b,l);continue}var $=function(){var t=e.match(ms);if(t){var r={tagName:t[1],attrs:[],start:l};n(t[0].length);for(var i,o;!(i=e.match(ys))&&(o=e.match(ps));)n(o[0].length),r.attrs.push(o);if(i)return r.unarySlash=i[1],n(i[0].length),r.end=l,r}}();if($){!function(e){var n=e.tagName,i=e.unarySlash;s&&(\"p\"===o&&ds(n)&&r(o),u(n)&&o===n&&r(n));for(var l=c(n)||!!i,f=e.attrs.length,d=new Array(f),p=0;p<f;p++){var v=e.attrs[p];Cs&&-1===v[0].indexOf('\"\"')&&(\"\"===v[3]&&delete v[3],\"\"===v[4]&&delete v[4],\"\"===v[5]&&delete v[5]);var h=v[3]||v[4]||v[5]||\"\",m=\"a\"===n&&\"href\"===v[1]?t.shouldDecodeNewlinesForHref:t.shouldDecodeNewlines;d[p]={name:v[1],value:_r(h,m)}}l||(a.push({tag:n,lowerCasedTag:n.toLowerCase(),attrs:d}),o=n),t.start&&t.start(n,d,l,e.start,e.end)}($),Hs(o,e)&&n(1);continue}}var C=void 0,w=void 0,x=void 0;if(h>=0){for(w=e.slice(h);!(gs.test(w)||ms.test(w)||bs.test(w)||$s.test(w)||(x=w.indexOf(\"<\",1))<0);)h+=x,w=e.slice(h);C=e.substring(0,h),n(h)}h<0&&(C=e,e=\"\"),t.chars&&C&&t.chars(C)}if(e===i){t.chars&&t.chars(e);break}}r()}function $r(e,t,n){return{type:1,tag:e,attrsList:t,attrsMap:Rr(t),parent:n,children:[]}}function Cr(e,t){function n(e){e.pre&&(s=!1),Ss(e.tag)&&(c=!1)}ws=t.warn||cn,Ss=t.isPreTag||Di,Ts=t.mustUseProp||Di,Es=t.getTagNamespace||Di,ks=un(t.modules,\"transformNode\"),As=un(t.modules,\"preTransformNode\"),Os=un(t.modules,\"postTransformNode\"),xs=t.delimiters;var r,i,o=[],a=!1!==t.preserveWhitespace,s=!1,c=!1;return br(e,{warn:ws,expectHTML:t.expectHTML,isUnaryTag:t.isUnaryTag,canBeLeftOpenTag:t.canBeLeftOpenTag,shouldDecodeNewlines:t.shouldDecodeNewlines,shouldDecodeNewlinesForHref:t.shouldDecodeNewlinesForHref,shouldKeepComment:t.comments,start:function(e,a,u){var l=i&&i.ns||Es(e);qi&&\"svg\"===l&&(a=Ur(a));var f=$r(e,a,i);l&&(f.ns=l),Br(f)&&!ro()&&(f.forbidden=!0);for(var d=0;d<As.length;d++)f=As[d](f,t)||f;if(s||(wr(f),f.pre&&(s=!0)),Ss(f.tag)&&(c=!0),s?xr(f):f.processed||(Sr(f),Tr(f),Lr(f),kr(f,t)),r?o.length||r.if&&(f.elseif||f.else)&&Nr(r,{exp:f.elseif,block:f}):r=f,i&&!f.forbidden)if(f.elseif||f.else)Er(f,i);else if(f.slotScope){i.plain=!1;var p=f.slotTarget||'\"default\"';(i.scopedSlots||(i.scopedSlots={}))[p]=f}else i.children.push(f),f.parent=i;u?n(f):(i=f,o.push(f));for(var v=0;v<Os.length;v++)Os[v](f,t)},end:function(){var e=o[o.length-1],t=e.children[e.children.length-1];t&&3===t.type&&\" \"===t.text&&!c&&e.children.pop(),o.length-=1,i=o[o.length-1],n(e)},chars:function(e){if(i&&(!qi||\"textarea\"!==i.tag||i.attrsMap.placeholder!==e)){var t=i.children;if(e=c||e.trim()?Hr(i)?e:Ws(e):a&&t.length?\" \":\"\"){var n;!s&&\" \"!==e&&(n=gr(e,xs))?t.push({type:2,expression:n,text:e}):\" \"===e&&t.length&&\" \"===t[t.length-1].text||t.push({type:3,text:e})}}},comment:function(e){i.children.push({type:3,text:e,isComment:!0})}}),r}function wr(e){null!=hn(e,\"v-pre\")&&(e.pre=!0)}function xr(e){var t=e.attrsList.length;if(t)for(var n=e.attrs=new Array(t),r=0;r<t;r++)n[r]={name:e.attrsList[r].name,value:JSON.stringify(e.attrsList[r].value)};else e.pre||(e.plain=!0)}function kr(e,t){Ar(e),e.plain=!e.key&&!e.attrsList.length,Or(e),Ir(e),Mr(e);for(var n=0;n<ks.length;n++)e=ks[n](e,t)||e;Dr(e)}function Ar(e){var t=vn(e,\"key\");t&&(e.key=t)}function Or(e){var t=vn(e,\"ref\");t&&(e.ref=t,e.refInFor=Pr(e))}function Sr(e){var t;if(t=hn(e,\"v-for\")){var n=t.match(Vs);if(!n)return;e.for=n[2].trim();var r=n[1].trim(),i=r.match(zs);i?(e.alias=i[1].trim(),e.iterator1=i[2].trim(),i[3]&&(e.iterator2=i[3].trim())):e.alias=r}}function Tr(e){var t=hn(e,\"v-if\");if(t)e.if=t,Nr(e,{exp:t,block:e});else{null!=hn(e,\"v-else\")&&(e.else=!0);var n=hn(e,\"v-else-if\");n&&(e.elseif=n)}}function Er(e,t){var n=jr(t.children);n&&n.if&&Nr(n,{exp:e.elseif,block:e})}function jr(e){for(var t=e.length;t--;){if(1===e[t].type)return e[t];e.pop()}}function Nr(e,t){e.ifConditions||(e.ifConditions=[]),e.ifConditions.push(t)}function Lr(e){null!=hn(e,\"v-once\")&&(e.once=!0)}function Ir(e){if(\"slot\"===e.tag)e.slotName=vn(e,\"name\");else{var t;\"template\"===e.tag?(t=hn(e,\"scope\"),e.slotScope=t||hn(e,\"slot-scope\")):(t=hn(e,\"slot-scope\"))&&(e.slotScope=t);var n=vn(e,\"slot\");n&&(e.slotTarget='\"\"'===n?'\"default\"':n,\"template\"===e.tag||e.slotScope||fn(e,\"slot\",n))}}function Mr(e){var t;(t=vn(e,\"is\"))&&(e.component=t),null!=hn(e,\"inline-template\")&&(e.inlineTemplate=!0)}function Dr(e){var t,n,r,i,o,a,s,c=e.attrsList;for(t=0,n=c.length;t<n;t++)if(r=i=c[t].name,o=c[t].value,Us.test(r))if(e.hasBindings=!0,(a=Fr(r))&&(r=r.replace(qs,\"\")),Js.test(r))r=r.replace(Js,\"\"),o=an(o),s=!1,a&&(a.prop&&(s=!0,\"innerHtml\"===(r=Ni(r))&&(r=\"innerHTML\")),a.camel&&(r=Ni(r)),a.sync&&pn(e,\"update:\"+Ni(r),yn(o,\"$event\"))),s||!e.component&&Ts(e.tag,e.attrsMap.type,r)?ln(e,r,o):fn(e,r,o);else if(Bs.test(r))pn(e,r=r.replace(Bs,\"\"),o,a,!1,ws);else{var u=(r=r.replace(Us,\"\")).match(Ks),l=u&&u[1];l&&(r=r.slice(0,-(l.length+1))),dn(e,r,i,o,l,a)}else fn(e,r,JSON.stringify(o)),!e.component&&\"muted\"===r&&Ts(e.tag,e.attrsMap.type,r)&&ln(e,r,\"true\")}function Pr(e){for(var t=e;t;){if(void 0!==t.for)return!0;t=t.parent}return!1}function Fr(e){var t=e.match(qs);if(t){var n={};return t.forEach(function(e){n[e.slice(1)]=!0}),n}}function Rr(e){for(var t={},n=0,r=e.length;n<r;n++)t[e[n].name]=e[n].value;return t}function Hr(e){return\"script\"===e.tag||\"style\"===e.tag}function Br(e){return\"style\"===e.tag||\"script\"===e.tag&&(!e.attrsMap.type||\"text/javascript\"===e.attrsMap.type)}function Ur(e){for(var t=[],n=0;n<e.length;n++){var r=e[n];Gs.test(r.name)||(r.name=r.name.replace(Zs,\"\"),t.push(r))}return t}function Vr(e){return $r(e.tag,e.attrsList.slice(),e.parent)}function zr(e,t,n){e.attrsMap[t]=n,e.attrsList.push({name:t,value:n})}function Kr(e,t){e&&(js=Xs(t.staticKeys||\"\"),Ns=t.isReservedTag||Di,Jr(e),qr(e,!1))}function Jr(e){if(e.static=Wr(e),1===e.type){if(!Ns(e.tag)&&\"slot\"!==e.tag&&null==e.attrsMap[\"inline-template\"])return;for(var t=0,n=e.children.length;t<n;t++){var r=e.children[t];Jr(r),r.static||(e.static=!1)}if(e.ifConditions)for(var i=1,o=e.ifConditions.length;i<o;i++){var a=e.ifConditions[i].block;Jr(a),a.static||(e.static=!1)}}}function qr(e,t){if(1===e.type){if((e.static||e.once)&&(e.staticInFor=t),e.static&&e.children.length&&(1!==e.children.length||3!==e.children[0].type))return void(e.staticRoot=!0);if(e.staticRoot=!1,e.children)for(var n=0,r=e.children.length;n<r;n++)qr(e.children[n],t||!!e.for);if(e.ifConditions)for(var i=1,o=e.ifConditions.length;i<o;i++)qr(e.ifConditions[i].block,t)}}function Wr(e){return 2!==e.type&&(3===e.type||!(!e.pre&&(e.hasBindings||e.if||e.for||Si(e.tag)||!Ns(e.tag)||Gr(e)||!Object.keys(e).every(js))))}function Gr(e){for(;e.parent;){if(\"template\"!==(e=e.parent).tag)return!1;if(e.for)return!0}return!1}function Zr(e,t,n){var r=t?\"nativeOn:{\":\"on:{\";for(var i in e){var o=e[i];r+='\"'+i+'\":'+Yr(i,o)+\",\"}return r.slice(0,-1)+\"}\"}function Yr(e,t){if(!t)return\"function(){}\";if(Array.isArray(t))return\"[\"+t.map(function(t){return Yr(e,t)}).join(\",\")+\"]\";var n=tc.test(t.value),r=ec.test(t.value);if(t.modifiers){var i=\"\",o=\"\",a=[];for(var s in t.modifiers)if(ic[s])o+=ic[s],nc[s]&&a.push(s);else if(\"exact\"===s){var c=t.modifiers;o+=rc([\"ctrl\",\"shift\",\"alt\",\"meta\"].filter(function(e){return!c[e]}).map(function(e){return\"$event.\"+e+\"Key\"}).join(\"||\"))}else a.push(s);return a.length&&(i+=Qr(a)),o&&(i+=o),\"function($event){\"+i+(n?t.value+\"($event)\":r?\"(\"+t.value+\")($event)\":t.value)+\"}\"}return n||r?t.value:\"function($event){\"+t.value+\"}\"}function Qr(e){return\"if(!('button' in $event)&&\"+e.map(Xr).join(\"&&\")+\")return null;\"}function Xr(e){var t=parseInt(e,10);if(t)return\"$event.keyCode!==\"+t;var n=nc[e];return\"_k($event.keyCode,\"+JSON.stringify(e)+\",\"+JSON.stringify(n)+\",$event.key)\"}function ei(e,t){var n=new ac(t);return{render:\"with(this){return \"+(e?ti(e,n):'_c(\"div\")')+\"}\",staticRenderFns:n.staticRenderFns}}function ti(e,t){if(e.staticRoot&&!e.staticProcessed)return ni(e,t);if(e.once&&!e.onceProcessed)return ri(e,t);if(e.for&&!e.forProcessed)return ai(e,t);if(e.if&&!e.ifProcessed)return ii(e,t);if(\"template\"!==e.tag||e.slotTarget){if(\"slot\"===e.tag)return _i(e,t);var n;if(e.component)n=bi(e.component,e,t);else{var r=e.plain?void 0:si(e,t),i=e.inlineTemplate?null:pi(e,t,!0);n=\"_c('\"+e.tag+\"'\"+(r?\",\"+r:\"\")+(i?\",\"+i:\"\")+\")\"}for(var o=0;o<t.transforms.length;o++)n=t.transforms[o](e,n);return n}return pi(e,t)||\"void 0\"}function ni(e,t){return e.staticProcessed=!0,t.staticRenderFns.push(\"with(this){return \"+ti(e,t)+\"}\"),\"_m(\"+(t.staticRenderFns.length-1)+(e.staticInFor?\",true\":\"\")+\")\"}function ri(e,t){if(e.onceProcessed=!0,e.if&&!e.ifProcessed)return ii(e,t);if(e.staticInFor){for(var n=\"\",r=e.parent;r;){if(r.for){n=r.key;break}r=r.parent}return n?\"_o(\"+ti(e,t)+\",\"+t.onceId+++\",\"+n+\")\":ti(e,t)}return ni(e,t)}function ii(e,t,n,r){return e.ifProcessed=!0,oi(e.ifConditions.slice(),t,n,r)}function oi(e,t,n,r){function i(e){return n?n(e,t):e.once?ri(e,t):ti(e,t)}if(!e.length)return r||\"_e()\";var o=e.shift();return o.exp?\"(\"+o.exp+\")?\"+i(o.block)+\":\"+oi(e,t,n,r):\"\"+i(o.block)}function ai(e,t,n,r){var i=e.for,o=e.alias,a=e.iterator1?\",\"+e.iterator1:\"\",s=e.iterator2?\",\"+e.iterator2:\"\";return e.forProcessed=!0,(r||\"_l\")+\"((\"+i+\"),function(\"+o+a+s+\"){return \"+(n||ti)(e,t)+\"})\"}function si(e,t){var n=\"{\",r=ci(e,t);r&&(n+=r+\",\"),e.key&&(n+=\"key:\"+e.key+\",\"),e.ref&&(n+=\"ref:\"+e.ref+\",\"),e.refInFor&&(n+=\"refInFor:true,\"),e.pre&&(n+=\"pre:true,\"),e.component&&(n+='tag:\"'+e.tag+'\",');for(var i=0;i<t.dataGenFns.length;i++)n+=t.dataGenFns[i](e);if(e.attrs&&(n+=\"attrs:{\"+$i(e.attrs)+\"},\"),e.props&&(n+=\"domProps:{\"+$i(e.props)+\"},\"),e.events&&(n+=Zr(e.events,!1,t.warn)+\",\"),e.nativeEvents&&(n+=Zr(e.nativeEvents,!0,t.warn)+\",\"),e.slotTarget&&!e.slotScope&&(n+=\"slot:\"+e.slotTarget+\",\"),e.scopedSlots&&(n+=li(e.scopedSlots,t)+\",\"),e.model&&(n+=\"model:{value:\"+e.model.value+\",callback:\"+e.model.callback+\",expression:\"+e.model.expression+\"},\"),e.inlineTemplate){var o=ui(e,t);o&&(n+=o+\",\")}return n=n.replace(/,$/,\"\")+\"}\",e.wrapData&&(n=e.wrapData(n)),e.wrapListeners&&(n=e.wrapListeners(n)),n}function ci(e,t){var n=e.directives;if(n){var r,i,o,a,s=\"directives:[\",c=!1;for(r=0,i=n.length;r<i;r++){o=n[r],a=!0;var u=t.directives[o.name];u&&(a=!!u(e,o,t.warn)),a&&(c=!0,s+='{name:\"'+o.name+'\",rawName:\"'+o.rawName+'\"'+(o.value?\",value:(\"+o.value+\"),expression:\"+JSON.stringify(o.value):\"\")+(o.arg?',arg:\"'+o.arg+'\"':\"\")+(o.modifiers?\",modifiers:\"+JSON.stringify(o.modifiers):\"\")+\"},\")}return c?s.slice(0,-1)+\"]\":void 0}}function ui(e,t){var n=e.children[0];if(1===n.type){var r=ei(n,t.options);return\"inlineTemplate:{render:function(){\"+r.render+\"},staticRenderFns:[\"+r.staticRenderFns.map(function(e){return\"function(){\"+e+\"}\"}).join(\",\")+\"]}\"}}function li(e,t){return\"scopedSlots:_u([\"+Object.keys(e).map(function(n){return fi(n,e[n],t)}).join(\",\")+\"])\"}function fi(e,t,n){return t.for&&!t.forProcessed?di(e,t,n):\"{key:\"+e+\",fn:\"+(\"function(\"+String(t.slotScope)+\"){return \"+(\"template\"===t.tag?t.if?t.if+\"?\"+(pi(t,n)||\"undefined\")+\":undefined\":pi(t,n)||\"undefined\":ti(t,n))+\"}\")+\"}\"}function di(e,t,n){var r=t.for,i=t.alias,o=t.iterator1?\",\"+t.iterator1:\"\",a=t.iterator2?\",\"+t.iterator2:\"\";return t.forProcessed=!0,\"_l((\"+r+\"),function(\"+i+o+a+\"){return \"+fi(e,t,n)+\"})\"}function pi(e,t,n,r,i){var o=e.children;if(o.length){var a=o[0];if(1===o.length&&a.for&&\"template\"!==a.tag&&\"slot\"!==a.tag)return(r||ti)(a,t);var s=n?vi(o,t.maybeComponent):0,c=i||mi;return\"[\"+o.map(function(e){return c(e,t)}).join(\",\")+\"]\"+(s?\",\"+s:\"\")}}function vi(e,t){for(var n=0,r=0;r<e.length;r++){var i=e[r];if(1===i.type){if(hi(i)||i.ifConditions&&i.ifConditions.some(function(e){return hi(e.block)})){n=2;break}(t(i)||i.ifConditions&&i.ifConditions.some(function(e){return t(e.block)}))&&(n=1)}}return n}function hi(e){return void 0!==e.for||\"template\"===e.tag||\"slot\"===e.tag}function mi(e,t){return 1===e.type?ti(e,t):3===e.type&&e.isComment?gi(e):yi(e)}function yi(e){return\"_v(\"+(2===e.type?e.expression:Ci(JSON.stringify(e.text)))+\")\"}function gi(e){return\"_e(\"+JSON.stringify(e.text)+\")\"}function _i(e,t){var n=e.slotName||'\"default\"',r=pi(e,t),i=\"_t(\"+n+(r?\",\"+r:\"\"),o=e.attrs&&\"{\"+e.attrs.map(function(e){return Ni(e.name)+\":\"+e.value}).join(\",\")+\"}\",a=e.attrsMap[\"v-bind\"];return!o&&!a||r||(i+=\",null\"),o&&(i+=\",\"+o),a&&(i+=(o?\"\":\",null\")+\",\"+a),i+\")\"}function bi(e,t,n){var r=t.inlineTemplate?null:pi(t,n,!0);return\"_c(\"+e+\",\"+si(t,n)+(r?\",\"+r:\"\")+\")\"}function $i(e){for(var t=\"\",n=0;n<e.length;n++){var r=e[n];t+='\"'+r.name+'\":'+Ci(r.value)+\",\"}return t.slice(0,-1)}function Ci(e){return e.replace(/\\u2028/g,\"\\\\u2028\").replace(/\\u2029/g,\"\\\\u2029\")}function wi(e,t){try{return new Function(e)}catch(n){return t.push({err:n,code:e}),_}}function xi(e){var t=Object.create(null);return function(n,r,i){delete(r=y({},r)).warn;var o=r.delimiters?String(r.delimiters)+n:n;if(t[o])return t[o];var a=e(n,r),s={},c=[];return s.render=wi(a.render,c),s.staticRenderFns=a.staticRenderFns.map(function(e){return wi(e,c)}),t[o]=s}}function ki(e){return Ls=Ls||document.createElement(\"div\"),Ls.innerHTML=e?'<a href=\"\\n\"/>':'<div a=\"\\n\"/>',Ls.innerHTML.indexOf(\"&#10;\")>0}function Ai(e){if(e.outerHTML)return e.outerHTML;var t=document.createElement(\"div\");return t.appendChild(e.cloneNode(!0)),t.innerHTML}var Oi=Object.prototype.toString,Si=f(\"slot,component\",!0),Ti=f(\"key,ref,slot,slot-scope,is\"),Ei=Object.prototype.hasOwnProperty,ji=/-(\\w)/g,Ni=v(function(e){return e.replace(ji,function(e,t){return t?t.toUpperCase():\"\"})}),Li=v(function(e){return e.charAt(0).toUpperCase()+e.slice(1)}),Ii=/\\B([A-Z])/g,Mi=v(function(e){return e.replace(Ii,\"-$1\").toLowerCase()}),Di=function(e,t,n){return!1},Pi=function(e){return e},Fi=\"data-server-rendered\",Ri=[\"component\",\"directive\",\"filter\"],Hi=[\"beforeCreate\",\"created\",\"beforeMount\",\"mounted\",\"beforeUpdate\",\"updated\",\"beforeDestroy\",\"destroyed\",\"activated\",\"deactivated\",\"errorCaptured\"],Bi={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:Di,isReservedAttr:Di,isUnknownElement:Di,getTagNamespace:_,parsePlatformTagName:Pi,mustUseProp:Di,_lifecycleHooks:Hi},Ui=Object.freeze({}),Vi=/[^\\w.$]/,zi=\"__proto__\"in{},Ki=\"undefined\"!=typeof window,Ji=Ki&&window.navigator.userAgent.toLowerCase(),qi=Ji&&/msie|trident/.test(Ji),Wi=Ji&&Ji.indexOf(\"msie 9.0\")>0,Gi=Ji&&Ji.indexOf(\"edge/\")>0,Zi=Ji&&Ji.indexOf(\"android\")>0,Yi=Ji&&/iphone|ipad|ipod|ios/.test(Ji),Qi=(Ji&&/chrome\\/\\d+/.test(Ji),{}.watch),Xi=!1;if(Ki)try{var eo={};Object.defineProperty(eo,\"passive\",{get:function(){Xi=!0}}),window.addEventListener(\"test-passive\",null,eo)}catch(e){}var to,no,ro=function(){return void 0===to&&(to=!Ki&&\"undefined\"!=typeof global&&\"server\"===global.process.env.VUE_ENV),to},io=Ki&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__,oo=\"undefined\"!=typeof Symbol&&A(Symbol)&&\"undefined\"!=typeof Reflect&&A(Reflect.ownKeys);no=\"undefined\"!=typeof Set&&A(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var ao=_,so=0,co=function(){this.id=so++,this.subs=[]};co.prototype.addSub=function(e){this.subs.push(e)},co.prototype.removeSub=function(e){d(this.subs,e)},co.prototype.depend=function(){co.target&&co.target.addDep(this)},co.prototype.notify=function(){for(var e=this.subs.slice(),t=0,n=e.length;t<n;t++)e[t].update()},co.target=null;var uo=[],lo=function(e,t,n,r,i,o,a,s){this.tag=e,this.data=t,this.children=n,this.text=r,this.elm=i,this.ns=void 0,this.context=o,this.functionalContext=void 0,this.functionalOptions=void 0,this.functionalScopeId=void 0,this.key=t&&t.key,this.componentOptions=a,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},fo={child:{configurable:!0}};fo.child.get=function(){return this.componentInstance},Object.defineProperties(lo.prototype,fo);var po=function(e){void 0===e&&(e=\"\");var t=new lo;return t.text=e,t.isComment=!0,t},vo=Array.prototype,ho=Object.create(vo);[\"push\",\"pop\",\"shift\",\"unshift\",\"splice\",\"sort\",\"reverse\"].forEach(function(e){var t=vo[e];x(ho,e,function(){for(var n=[],r=arguments.length;r--;)n[r]=arguments[r];var i,o=t.apply(this,n),a=this.__ob__;switch(e){case\"push\":case\"unshift\":i=n;break;case\"splice\":i=n.slice(2)}return i&&a.observeArray(i),a.dep.notify(),o})});var mo=Object.getOwnPropertyNames(ho),yo={shouldConvert:!0},go=function(e){this.value=e,this.dep=new co,this.vmCount=0,x(e,\"__ob__\",this),Array.isArray(e)?((zi?N:L)(e,ho,mo),this.observeArray(e)):this.walk(e)};go.prototype.walk=function(e){for(var t=Object.keys(e),n=0;n<t.length;n++)M(e,t[n],e[t[n]])},go.prototype.observeArray=function(e){for(var t=0,n=e.length;t<n;t++)I(e[t])};var _o=Bi.optionMergeStrategies;_o.data=function(e,t,n){return n?H(e,t,n):t&&\"function\"!=typeof t?e:H(e,t)},Hi.forEach(function(e){_o[e]=B}),Ri.forEach(function(e){_o[e+\"s\"]=U}),_o.watch=function(e,t,n,r){if(e===Qi&&(e=void 0),t===Qi&&(t=void 0),!t)return Object.create(e||null);if(!e)return t;var i={};y(i,e);for(var o in t){var a=i[o],s=t[o];a&&!Array.isArray(a)&&(a=[a]),i[o]=a?a.concat(s):Array.isArray(s)?s:[s]}return i},_o.props=_o.methods=_o.inject=_o.computed=function(e,t,n,r){if(!e)return t;var i=Object.create(null);return y(i,e),t&&y(i,t),i},_o.provide=H;var bo,$o,Co=function(e,t){return void 0===t?e:t},wo=[],xo=!1,ko=!1;if(\"undefined\"!=typeof setImmediate&&A(setImmediate))$o=function(){setImmediate(te)};else if(\"undefined\"==typeof MessageChannel||!A(MessageChannel)&&\"[object MessageChannelConstructor]\"!==MessageChannel.toString())$o=function(){setTimeout(te,0)};else{var Ao=new MessageChannel,Oo=Ao.port2;Ao.port1.onmessage=te,$o=function(){Oo.postMessage(1)}}if(\"undefined\"!=typeof Promise&&A(Promise)){var So=Promise.resolve();bo=function(){So.then(te),Yi&&setTimeout(_)}}else bo=$o;var To,Eo=v(function(e){var t=\"&\"===e.charAt(0),n=\"~\"===(e=t?e.slice(1):e).charAt(0),r=\"!\"===(e=n?e.slice(1):e).charAt(0);return e=r?e.slice(1):e,{name:e,once:n,capture:r,passive:t}}),jo=null,No=[],Lo=[],Io={},Mo=!1,Do=!1,Po=0,Fo=0,Ro=function(e,t,n,r){this.vm=e,e._watchers.push(this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++Fo,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new no,this.newDepIds=new no,this.expression=\"\",\"function\"==typeof t?this.getter=t:(this.getter=k(t),this.getter||(this.getter=function(){})),this.value=this.lazy?void 0:this.get()};Ro.prototype.get=function(){O(this);var e,t=this.vm;try{e=this.getter.call(t,t)}catch(e){if(!this.user)throw e;Q(e,t,'getter for watcher \"'+this.expression+'\"')}finally{this.deep&&Fe(e),S(),this.cleanupDeps()}return e},Ro.prototype.addDep=function(e){var t=e.id;this.newDepIds.has(t)||(this.newDepIds.add(t),this.newDeps.push(e),this.depIds.has(t)||e.addSub(this))},Ro.prototype.cleanupDeps=function(){for(var e=this,t=this.deps.length;t--;){var n=e.deps[t];e.newDepIds.has(n.id)||n.removeSub(e)}var r=this.depIds;this.depIds=this.newDepIds,this.newDepIds=r,this.newDepIds.clear(),r=this.deps,this.deps=this.newDeps,this.newDeps=r,this.newDeps.length=0},Ro.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():Pe(this)},Ro.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||o(e)||this.deep){var t=this.value;if(this.value=e,this.user)try{this.cb.call(this.vm,e,t)}catch(e){Q(e,this.vm,'callback for watcher \"'+this.expression+'\"')}else this.cb.call(this.vm,e,t)}}},Ro.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},Ro.prototype.depend=function(){for(var e=this,t=this.deps.length;t--;)e.deps[t].depend()},Ro.prototype.teardown=function(){var e=this;if(this.active){this.vm._isBeingDestroyed||d(this.vm._watchers,this);for(var t=this.deps.length;t--;)e.deps[t].removeSub(e);this.active=!1}};var Ho=new no,Bo={enumerable:!0,configurable:!0,get:_,set:_},Uo={lazy:!0};lt(ft.prototype);var Vo={init:function(e,t,n,r){if(!e.componentInstance||e.componentInstance._isDestroyed)(e.componentInstance=ht(e,jo,n,r)).$mount(t?e.elm:void 0,t);else if(e.data.keepAlive){var i=e;Vo.prepatch(i,i)}},prepatch:function(e,t){var n=t.componentOptions;Oe(t.componentInstance=e.componentInstance,n.propsData,n.listeners,t,n.children)},insert:function(e){var t=e.context,n=e.componentInstance;n._isMounted||(n._isMounted=!0,je(n,\"mounted\")),e.data.keepAlive&&(t._isMounted?Me(n):Te(n,!0))},destroy:function(e){var t=e.componentInstance;t._isDestroyed||(e.data.keepAlive?Ee(t,!0):t.$destroy())}},zo=Object.keys(Vo),Ko=1,Jo=2,qo=0;!function(e){e.prototype._init=function(e){var t=this;t._uid=qo++,t._isVue=!0,e&&e._isComponent?wt(t,e):t.$options=J(xt(t.constructor),e||{},t),t._renderProxy=t,t._self=t,ke(t),ge(t),Ct(t),je(t,\"beforeCreate\"),Qe(t),Be(t),Ye(t),je(t,\"created\"),t.$options.el&&t.$mount(t.$options.el)}}(Ot),function(e){var t={};t.get=function(){return this._data};var n={};n.get=function(){return this._props},Object.defineProperty(e.prototype,\"$data\",t),Object.defineProperty(e.prototype,\"$props\",n),e.prototype.$set=D,e.prototype.$delete=P,e.prototype.$watch=function(e,t,n){var r=this;if(a(t))return Ze(r,e,t,n);(n=n||{}).user=!0;var i=new Ro(r,e,t,n);return n.immediate&&t.call(r,i.value),function(){i.teardown()}}}(Ot),function(e){var t=/^hook:/;e.prototype.$on=function(e,n){var r=this,i=this;if(Array.isArray(e))for(var o=0,a=e.length;o<a;o++)r.$on(e[o],n);else(i._events[e]||(i._events[e]=[])).push(n),t.test(e)&&(i._hasHookEvent=!0);return i},e.prototype.$once=function(e,t){function n(){r.$off(e,n),t.apply(r,arguments)}var r=this;return n.fn=t,r.$on(e,n),r},e.prototype.$off=function(e,t){var n=this,r=this;if(!arguments.length)return r._events=Object.create(null),r;if(Array.isArray(e)){for(var i=0,o=e.length;i<o;i++)n.$off(e[i],t);return r}var a=r._events[e];if(!a)return r;if(!t)return r._events[e]=null,r;if(t)for(var s,c=a.length;c--;)if((s=a[c])===t||s.fn===t){a.splice(c,1);break}return r},e.prototype.$emit=function(e){var t=this,n=t._events[e];if(n){n=n.length>1?m(n):n;for(var r=m(arguments,1),i=0,o=n.length;i<o;i++)try{n[i].apply(t,r)}catch(n){Q(n,t,'event handler for \"'+e+'\"')}}return t}}(Ot),function(e){e.prototype._update=function(e,t){var n=this;n._isMounted&&je(n,\"beforeUpdate\");var r=n.$el,i=n._vnode,o=jo;jo=n,n._vnode=e,i?n.$el=n.__patch__(i,e):(n.$el=n.__patch__(n.$el,e,t,!1,n.$options._parentElm,n.$options._refElm),n.$options._parentElm=n.$options._refElm=null),jo=o,r&&(r.__vue__=null),n.$el&&(n.$el.__vue__=n),n.$vnode&&n.$parent&&n.$vnode===n.$parent._vnode&&(n.$parent.$el=n.$el)},e.prototype.$forceUpdate=function(){var e=this;e._watcher&&e._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){je(e,\"beforeDestroy\"),e._isBeingDestroyed=!0;var t=e.$parent;!t||t._isBeingDestroyed||e.$options.abstract||d(t.$children,e),e._watcher&&e._watcher.teardown();for(var n=e._watchers.length;n--;)e._watchers[n].teardown();e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),je(e,\"destroyed\"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(Ot),function(e){lt(e.prototype),e.prototype.$nextTick=function(e){return re(e,this)},e.prototype._render=function(){var e=this,t=e.$options,n=t.render,r=t._parentVnode;if(e._isMounted)for(var i in e.$slots){var o=e.$slots[i];o._rendered&&(e.$slots[i]=j(o,!0))}e.$scopedSlots=r&&r.data.scopedSlots||Ui,e.$vnode=r;var a;try{a=n.call(e._renderProxy,e.$createElement)}catch(t){Q(t,e,\"render\"),a=e._vnode}return a instanceof lo||(a=po()),a.parent=r,a}}(Ot);var Wo=[String,RegExp,Array],Go={KeepAlive:{name:\"keep-alive\",abstract:!0,props:{include:Wo,exclude:Wo,max:[String,Number]},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){var e=this;for(var t in e.cache)Pt(e.cache,t,e.keys)},watch:{include:function(e){Dt(this,function(t){return Mt(e,t)})},exclude:function(e){Dt(this,function(t){return!Mt(e,t)})}},render:function(){var e=ye(this.$slots.default),t=e&&e.componentOptions;if(t){var n=It(t);if(n&&(this.exclude&&Mt(this.exclude,n)||this.include&&!Mt(this.include,n)))return e;var r=this,i=r.cache,o=r.keys,a=null==e.key?t.Ctor.cid+(t.tag?\"::\"+t.tag:\"\"):e.key;i[a]?(e.componentInstance=i[a].componentInstance,d(o,a),o.push(a)):(i[a]=e,o.push(a),this.max&&o.length>parseInt(this.max)&&Pt(i,o[0],o,this._vnode)),e.data.keepAlive=!0}return e}}};!function(e){var t={};t.get=function(){return Bi},Object.defineProperty(e,\"config\",t),e.util={warn:ao,extend:y,mergeOptions:J,defineReactive:M},e.set=D,e.delete=P,e.nextTick=re,e.options=Object.create(null),Ri.forEach(function(t){e.options[t+\"s\"]=Object.create(null)}),e.options._base=e,y(e.options.components,Go),St(e),Tt(e),Et(e),Lt(e)}(Ot),Object.defineProperty(Ot.prototype,\"$isServer\",{get:ro}),Object.defineProperty(Ot.prototype,\"$ssrContext\",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Ot.version=\"2.5.3\";var Zo,Yo,Qo,Xo,ea,ta,na,ra,ia=f(\"style,class\"),oa=f(\"input,textarea,option,select,progress\"),aa=function(e,t,n){return\"value\"===n&&oa(e)&&\"button\"!==t||\"selected\"===n&&\"option\"===e||\"checked\"===n&&\"input\"===e||\"muted\"===n&&\"video\"===e},sa=f(\"contenteditable,draggable,spellcheck\"),ca=f(\"allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,translate,truespeed,typemustmatch,visible\"),ua=\"http://www.w3.org/1999/xlink\",la=function(e){return\":\"===e.charAt(5)&&\"xlink\"===e.slice(0,5)},fa=function(e){return la(e)?e.slice(6,e.length):\"\"},da=function(e){return null==e||!1===e},pa={svg:\"http://www.w3.org/2000/svg\",math:\"http://www.w3.org/1998/Math/MathML\"},va=f(\"html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot\"),ha=f(\"svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view\",!0),ma=function(e){return va(e)||ha(e)},ya=Object.create(null),ga=f(\"text,number,password,search,email,tel,url\"),_a=Object.freeze({createElement:function(e,t){var n=document.createElement(e);return\"select\"!==e?n:(t.data&&t.data.attrs&&void 0!==t.data.attrs.multiple&&n.setAttribute(\"multiple\",\"multiple\"),n)},createElementNS:function(e,t){return document.createElementNS(pa[e],t)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,t,n){e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},appendChild:function(e,t){e.appendChild(t)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,t){e.textContent=t},setAttribute:function(e,t,n){e.setAttribute(t,n)}}),ba={create:function(e,t){qt(t)},update:function(e,t){e.data.ref!==t.data.ref&&(qt(e,!0),qt(t))},destroy:function(e){qt(e,!0)}},$a=new lo(\"\",{},[]),Ca=[\"create\",\"activate\",\"update\",\"remove\",\"destroy\"],wa={create:Yt,update:Yt,destroy:function(e){Yt(e,$a)}},xa=Object.create(null),ka=[ba,wa],Aa={create:nn,update:nn},Oa={create:on,update:on},Sa=/[\\w).+\\-_$\\]]/,Ta=\"__r\",Ea=\"__c\",ja={create:Nn,update:Nn},Na={create:Ln,update:Ln},La=v(function(e){var t={},n=/;(?![^(]*\\))/g,r=/:(.+)/;return e.split(n).forEach(function(e){if(e){var n=e.split(r);n.length>1&&(t[n[0].trim()]=n[1].trim())}}),t}),Ia=/^--/,Ma=/\\s*!important$/,Da=function(e,t,n){if(Ia.test(t))e.style.setProperty(t,n);else if(Ma.test(n))e.style.setProperty(t,n.replace(Ma,\"\"),\"important\");else{var r=Fa(t);if(Array.isArray(n))for(var i=0,o=n.length;i<o;i++)e.style[r]=n[i];else e.style[r]=n}},Pa=[\"Webkit\",\"Moz\",\"ms\"],Fa=v(function(e){if(ra=ra||document.createElement(\"div\").style,\"filter\"!==(e=Ni(e))&&e in ra)return e;for(var t=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<Pa.length;n++){var r=Pa[n]+t;if(r in ra)return r}}),Ra={create:Hn,update:Hn},Ha=v(function(e){return{enterClass:e+\"-enter\",enterToClass:e+\"-enter-to\",enterActiveClass:e+\"-enter-active\",leaveClass:e+\"-leave\",leaveToClass:e+\"-leave-to\",leaveActiveClass:e+\"-leave-active\"}}),Ba=Ki&&!Wi,Ua=\"transition\",Va=\"animation\",za=\"transition\",Ka=\"transitionend\",Ja=\"animation\",qa=\"animationend\";Ba&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(za=\"WebkitTransition\",Ka=\"webkitTransitionEnd\"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Ja=\"WebkitAnimation\",qa=\"webkitAnimationEnd\"));var Wa=Ki?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()},Ga=/\\b(transform|all)(,|$)/,Za=function(r){function o(e){return new lo(j.tagName(e).toLowerCase(),{},[],void 0,e)}function a(e,t){function n(){0==--n.listeners&&s(e)}return n.listeners=t,n}function s(e){var n=j.parentNode(e);t(n)&&j.removeChild(n,e)}function c(e,r,i,o,a){if(e.isRootInsert=!a,!u(e,r,i,o)){var s=e.data,c=e.children,l=e.tag;t(l)?(e.elm=e.ns?j.createElementNS(e.ns,l):j.createElement(l,e),y(e),v(e,c,r),t(s)&&m(e,r),p(i,e.elm,o)):n(e.isComment)?(e.elm=j.createComment(e.text),p(i,e.elm,o)):(e.elm=j.createTextNode(e.text),p(i,e.elm,o))}}function u(e,r,i,o){var a=e.data;if(t(a)){var s=t(e.componentInstance)&&a.keepAlive;if(t(a=a.hook)&&t(a=a.init)&&a(e,!1,i,o),t(e.componentInstance))return l(e,r),n(s)&&d(e,r,i,o),!0}}function l(e,n){t(e.data.pendingInsert)&&(n.push.apply(n,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,h(e)?(m(e,n),y(e)):(qt(e),n.push(e))}function d(e,n,r,i){for(var o,a=e;a.componentInstance;)if(a=a.componentInstance._vnode,t(o=a.data)&&t(o=o.transition)){for(o=0;o<T.activate.length;++o)T.activate[o]($a,a);n.push(a);break}p(r,e.elm,i)}function p(e,n,r){t(e)&&(t(r)?r.parentNode===e&&j.insertBefore(e,n,r):j.appendChild(e,n))}function v(e,t,n){if(Array.isArray(t))for(var r=0;r<t.length;++r)c(t[r],n,e.elm,null,!0);else i(e.text)&&j.appendChild(e.elm,j.createTextNode(e.text))}function h(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return t(e.tag)}function m(e,n){for(var r=0;r<T.create.length;++r)T.create[r]($a,e);t(O=e.data.hook)&&(t(O.create)&&O.create($a,e),t(O.insert)&&n.push(e))}function y(e){var n;if(t(n=e.functionalScopeId))j.setAttribute(e.elm,n,\"\");else for(var r=e;r;)t(n=r.context)&&t(n=n.$options._scopeId)&&j.setAttribute(e.elm,n,\"\"),r=r.parent;t(n=jo)&&n!==e.context&&n!==e.functionalContext&&t(n=n.$options._scopeId)&&j.setAttribute(e.elm,n,\"\")}function g(e,t,n,r,i,o){for(;r<=i;++r)c(n[r],o,e,t)}function _(e){var n,r,i=e.data;if(t(i))for(t(n=i.hook)&&t(n=n.destroy)&&n(e),n=0;n<T.destroy.length;++n)T.destroy[n](e);if(t(n=e.children))for(r=0;r<e.children.length;++r)_(e.children[r])}function b(e,n,r,i){for(;r<=i;++r){var o=n[r];t(o)&&(t(o.tag)?($(o),_(o)):s(o.elm))}}function $(e,n){if(t(n)||t(e.data)){var r,i=T.remove.length+1;for(t(n)?n.listeners+=i:n=a(e.elm,i),t(r=e.componentInstance)&&t(r=r._vnode)&&t(r.data)&&$(r,n),r=0;r<T.remove.length;++r)T.remove[r](e,n);t(r=e.data.hook)&&t(r=r.remove)?r(e,n):n()}else s(e.elm)}function C(n,r,i,o,a){for(var s,u,l,f=0,d=0,p=r.length-1,v=r[0],h=r[p],m=i.length-1,y=i[0],_=i[m],$=!a;f<=p&&d<=m;)e(v)?v=r[++f]:e(h)?h=r[--p]:Wt(v,y)?(x(v,y,o),v=r[++f],y=i[++d]):Wt(h,_)?(x(h,_,o),h=r[--p],_=i[--m]):Wt(v,_)?(x(v,_,o),$&&j.insertBefore(n,v.elm,j.nextSibling(h.elm)),v=r[++f],_=i[--m]):Wt(h,y)?(x(h,y,o),$&&j.insertBefore(n,h.elm,v.elm),h=r[--p],y=i[++d]):(e(s)&&(s=Zt(r,f,p)),e(u=t(y.key)?s[y.key]:w(y,r,f,p))?c(y,o,n,v.elm):Wt(l=r[u],y)?(x(l,y,o),r[u]=void 0,$&&j.insertBefore(n,l.elm,v.elm)):c(y,o,n,v.elm),y=i[++d]);f>p?g(n,e(i[m+1])?null:i[m+1].elm,i,d,m,o):d>m&&b(n,r,f,p)}function w(e,n,r,i){for(var o=r;o<i;o++){var a=n[o];if(t(a)&&Wt(e,a))return o}}function x(r,i,o,a){if(r!==i){var s=i.elm=r.elm;if(n(r.isAsyncPlaceholder))t(i.asyncFactory.resolved)?A(r.elm,i,o):i.isAsyncPlaceholder=!0;else if(n(i.isStatic)&&n(r.isStatic)&&i.key===r.key&&(n(i.isCloned)||n(i.isOnce)))i.componentInstance=r.componentInstance;else{var c,u=i.data;t(u)&&t(c=u.hook)&&t(c=c.prepatch)&&c(r,i);var l=r.children,f=i.children;if(t(u)&&h(i)){for(c=0;c<T.update.length;++c)T.update[c](r,i);t(c=u.hook)&&t(c=c.update)&&c(r,i)}e(i.text)?t(l)&&t(f)?l!==f&&C(s,l,f,o,a):t(f)?(t(r.text)&&j.setTextContent(s,\"\"),g(s,null,f,0,f.length-1,o)):t(l)?b(s,l,0,l.length-1):t(r.text)&&j.setTextContent(s,\"\"):r.text!==i.text&&j.setTextContent(s,i.text),t(u)&&t(c=u.hook)&&t(c=c.postpatch)&&c(r,i)}}}function k(e,r,i){if(n(i)&&t(e.parent))e.parent.data.pendingInsert=r;else for(var o=0;o<r.length;++o)r[o].data.hook.insert(r[o])}function A(e,r,i){if(n(r.isComment)&&t(r.asyncFactory))return r.elm=e,r.isAsyncPlaceholder=!0,!0;r.elm=e;var o=r.tag,a=r.data,s=r.children;if(t(a)&&(t(O=a.hook)&&t(O=O.init)&&O(r,!0),t(O=r.componentInstance)))return l(r,i),!0;if(t(o)){if(t(s))if(e.hasChildNodes())if(t(O=a)&&t(O=O.domProps)&&t(O=O.innerHTML)){if(O!==e.innerHTML)return!1}else{for(var c=!0,u=e.firstChild,f=0;f<s.length;f++){if(!u||!A(u,s[f],i)){c=!1;break}u=u.nextSibling}if(!c||u)return!1}else v(r,s,i);if(t(a))for(var d in a)if(!N(d)){m(r,i);break}}else e.data!==r.text&&(e.data=r.text);return!0}var O,S,T={},E=r.modules,j=r.nodeOps;for(O=0;O<Ca.length;++O)for(T[Ca[O]]=[],S=0;S<E.length;++S)t(E[S][Ca[O]])&&T[Ca[O]].push(E[S][Ca[O]]);var N=f(\"attrs,style,class,staticClass,staticStyle,key\");return function(r,i,a,s,u,l){if(!e(i)){var f=!1,d=[];if(e(r))f=!0,c(i,d,u,l);else{var p=t(r.nodeType);if(!p&&Wt(r,i))x(r,i,d,s);else{if(p){if(1===r.nodeType&&r.hasAttribute(Fi)&&(r.removeAttribute(Fi),a=!0),n(a)&&A(r,i,d))return k(i,d,!0),r;r=o(r)}var v=r.elm,m=j.parentNode(v);if(c(i,d,v._leaveCb?null:m,j.nextSibling(v)),t(i.parent))for(var y=i.parent,g=h(i);y;){for(var $=0;$<T.destroy.length;++$)T.destroy[$](y);if(y.elm=i.elm,g){for(var C=0;C<T.create.length;++C)T.create[C]($a,y);var w=y.data.hook.insert;if(w.merged)for(var O=1;O<w.fns.length;O++)w.fns[O]()}else qt(y);y=y.parent}t(m)?b(m,[r],0,0):t(r.tag)&&_(r)}}return k(i,d,f),i.elm}t(r)&&_(r)}}({nodeOps:_a,modules:[Aa,Oa,ja,Na,Ra,Ki?{create:tr,activate:tr,remove:function(e,t){!0!==e.data.show?Qn(e,t):t()}}:{}].concat(ka)});Wi&&document.addEventListener(\"selectionchange\",function(){var e=document.activeElement;e&&e.vmodel&&cr(e,\"input\")});var Ya={inserted:function(e,t,n,r){\"select\"===n.tag?(r.elm&&!r.elm._vOptions?ae(n,\"postpatch\",function(){Ya.componentUpdated(e,t,n)}):nr(e,t,n.context),e._vOptions=[].map.call(e.options,or)):(\"textarea\"===n.tag||ga(e.type))&&(e._vModifiers=t.modifiers,t.modifiers.lazy||(e.addEventListener(\"change\",sr),Zi||(e.addEventListener(\"compositionstart\",ar),e.addEventListener(\"compositionend\",sr)),Wi&&(e.vmodel=!0)))},componentUpdated:function(e,t,n){if(\"select\"===n.tag){nr(e,t,n.context);var r=e._vOptions,i=e._vOptions=[].map.call(e.options,or);i.some(function(e,t){return!b(e,r[t])})&&(e.multiple?t.value.some(function(e){return ir(e,i)}):t.value!==t.oldValue&&ir(t.value,i))&&cr(e,\"change\")}}},Qa={model:Ya,show:{bind:function(e,t,n){var r=t.value,i=(n=ur(n)).data&&n.data.transition,o=e.__vOriginalDisplay=\"none\"===e.style.display?\"\":e.style.display;r&&i?(n.data.show=!0,Yn(n,function(){e.style.display=o})):e.style.display=r?o:\"none\"},update:function(e,t,n){var r=t.value;r!==t.oldValue&&((n=ur(n)).data&&n.data.transition?(n.data.show=!0,r?Yn(n,function(){e.style.display=e.__vOriginalDisplay}):Qn(n,function(){e.style.display=\"none\"})):e.style.display=r?e.__vOriginalDisplay:\"none\")},unbind:function(e,t,n,r,i){i||(e.style.display=e.__vOriginalDisplay)}}},Xa={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]},es={name:\"transition\",props:Xa,abstract:!0,render:function(e){var t=this,n=this.$options._renderChildren;if(n&&(n=n.filter(function(e){return e.tag||me(e)})).length){var r=this.mode,o=n[0];if(pr(this.$vnode))return o;var a=lr(o);if(!a)return o;if(this._leaving)return dr(e,o);var s=\"__transition-\"+this._uid+\"-\";a.key=null==a.key?a.isComment?s+\"comment\":s+a.tag:i(a.key)?0===String(a.key).indexOf(s)?a.key:s+a.key:a.key;var c=(a.data||(a.data={})).transition=fr(this),u=this._vnode,l=lr(u);if(a.data.directives&&a.data.directives.some(function(e){return\"show\"===e.name})&&(a.data.show=!0),l&&l.data&&!vr(a,l)&&!me(l)){var f=l.data.transition=y({},c);if(\"out-in\"===r)return this._leaving=!0,ae(f,\"afterLeave\",function(){t._leaving=!1,t.$forceUpdate()}),dr(e,o);if(\"in-out\"===r){if(me(a))return u;var d,p=function(){d()};ae(c,\"afterEnter\",p),ae(c,\"enterCancelled\",p),ae(f,\"delayLeave\",function(e){d=e})}}return o}}},ts=y({tag:String,moveClass:String},Xa);delete ts.mode;var ns={Transition:es,TransitionGroup:{props:ts,render:function(e){for(var t=this.tag||this.$vnode.data.tag||\"span\",n=Object.create(null),r=this.prevChildren=this.children,i=this.$slots.default||[],o=this.children=[],a=fr(this),s=0;s<i.length;s++){var c=i[s];c.tag&&null!=c.key&&0!==String(c.key).indexOf(\"__vlist\")&&(o.push(c),n[c.key]=c,(c.data||(c.data={})).transition=a)}if(r){for(var u=[],l=[],f=0;f<r.length;f++){var d=r[f];d.data.transition=a,d.data.pos=d.elm.getBoundingClientRect(),n[d.key]?u.push(d):l.push(d)}this.kept=e(t,null,u),this.removed=l}return e(t,null,o)},beforeUpdate:function(){this.__patch__(this._vnode,this.kept,!1,!0),this._vnode=this.kept},updated:function(){var e=this.prevChildren,t=this.moveClass||(this.name||\"v\")+\"-move\";e.length&&this.hasMove(e[0].elm,t)&&(e.forEach(hr),e.forEach(mr),e.forEach(yr),this._reflow=document.body.offsetHeight,e.forEach(function(e){if(e.data.moved){var n=e.elm,r=n.style;Kn(n,t),r.transform=r.WebkitTransform=r.transitionDuration=\"\",n.addEventListener(Ka,n._moveCb=function e(r){r&&!/transform$/.test(r.propertyName)||(n.removeEventListener(Ka,e),n._moveCb=null,Jn(n,t))})}}))},methods:{hasMove:function(e,t){if(!Ba)return!1;if(this._hasMove)return this._hasMove;var n=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach(function(e){Un(n,e)}),Bn(n,t),n.style.display=\"none\",this.$el.appendChild(n);var r=Wn(n);return this.$el.removeChild(n),this._hasMove=r.hasTransform}}}};Ot.config.mustUseProp=aa,Ot.config.isReservedTag=ma,Ot.config.isReservedAttr=ia,Ot.config.getTagNamespace=Kt,Ot.config.isUnknownElement=function(e){if(!Ki)return!0;if(ma(e))return!1;if(e=e.toLowerCase(),null!=ya[e])return ya[e];var t=document.createElement(e);return e.indexOf(\"-\")>-1?ya[e]=t.constructor===window.HTMLUnknownElement||t.constructor===window.HTMLElement:ya[e]=/HTMLUnknownElement/.test(t.toString())},y(Ot.options.directives,Qa),y(Ot.options.components,ns),Ot.prototype.__patch__=Ki?Za:_,Ot.prototype.$mount=function(e,t){return e=e&&Ki?Jt(e):void 0,Ae(this,e,t)},Ot.nextTick(function(){Bi.devtools&&io&&io.emit(\"init\",Ot)},0);var rs,is=/\\{\\{((?:.|\\n)+?)\\}\\}/g,os=/[-.*+?^${}()|[\\]\\/\\\\]/g,as=v(function(e){var t=e[0].replace(os,\"\\\\$&\"),n=e[1].replace(os,\"\\\\$&\");return new RegExp(t+\"((?:.|\\\\n)+?)\"+n,\"g\")}),ss={staticKeys:[\"staticClass\"],transformNode:function(e,t){t.warn;var n=hn(e,\"class\");n&&(e.staticClass=JSON.stringify(n));var r=vn(e,\"class\",!1);r&&(e.classBinding=r)},genData:function(e){var t=\"\";return e.staticClass&&(t+=\"staticClass:\"+e.staticClass+\",\"),e.classBinding&&(t+=\"class:\"+e.classBinding+\",\"),t}},cs={staticKeys:[\"staticStyle\"],transformNode:function(e,t){var n=hn(e,\"style\");n&&(e.staticStyle=JSON.stringify(La(n)));var r=vn(e,\"style\",!1);r&&(e.styleBinding=r)},genData:function(e){var t=\"\";return e.staticStyle&&(t+=\"staticStyle:\"+e.staticStyle+\",\"),e.styleBinding&&(t+=\"style:(\"+e.styleBinding+\"),\"),t}},us={decode:function(e){return rs=rs||document.createElement(\"div\"),rs.innerHTML=e,rs.textContent}},ls=f(\"area,base,br,col,embed,frame,hr,img,input,isindex,keygen,link,meta,param,source,track,wbr\"),fs=f(\"colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source\"),ds=f(\"address,article,aside,base,blockquote,body,caption,col,colgroup,dd,details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,title,tr,track\"),ps=/^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/,vs=\"[a-zA-Z_][\\\\w\\\\-\\\\.]*\",hs=\"((?:\"+vs+\"\\\\:)?\"+vs+\")\",ms=new RegExp(\"^<\"+hs),ys=/^\\s*(\\/?)>/,gs=new RegExp(\"^<\\\\/\"+hs+\"[^>]*>\"),_s=/^<!DOCTYPE [^>]+>/i,bs=/^<!--/,$s=/^<!\\[/,Cs=!1;\"x\".replace(/x(.)?/g,function(e,t){Cs=\"\"===t});var ws,xs,ks,As,Os,Ss,Ts,Es,js,Ns,Ls,Is=f(\"script,style,textarea\",!0),Ms={},Ds={\"&lt;\":\"<\",\"&gt;\":\">\",\"&quot;\":'\"',\"&amp;\":\"&\",\"&#10;\":\"\\n\",\"&#9;\":\"\\t\"},Ps=/&(?:lt|gt|quot|amp);/g,Fs=/&(?:lt|gt|quot|amp|#10|#9);/g,Rs=f(\"pre,textarea\",!0),Hs=function(e,t){return e&&Rs(e)&&\"\\n\"===t[0]},Bs=/^@|^v-on:/,Us=/^v-|^@|^:/,Vs=/(.*?)\\s+(?:in|of)\\s+(.*)/,zs=/\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/,Ks=/:(.*)$/,Js=/^:|^v-bind:/,qs=/\\.[^.]+/g,Ws=v(us.decode),Gs=/^xmlns:NS\\d+/,Zs=/^NS\\d+:/,Ys=[ss,cs,{preTransformNode:function(e,t){if(\"input\"===e.tag){var n=e.attrsMap;if(n[\"v-model\"]&&(n[\"v-bind:type\"]||n[\":type\"])){var r=vn(e,\"type\"),i=hn(e,\"v-if\",!0),o=i?\"&&(\"+i+\")\":\"\",a=null!=hn(e,\"v-else\",!0),s=hn(e,\"v-else-if\",!0),c=Vr(e);Sr(c),zr(c,\"type\",\"checkbox\"),kr(c,t),c.processed=!0,c.if=\"(\"+r+\")==='checkbox'\"+o,Nr(c,{exp:c.if,block:c});var u=Vr(e);hn(u,\"v-for\",!0),zr(u,\"type\",\"radio\"),kr(u,t),Nr(c,{exp:\"(\"+r+\")==='radio'\"+o,block:u});var l=Vr(e);return hn(l,\"v-for\",!0),zr(l,\":type\",r),kr(l,t),Nr(c,{exp:i,block:l}),a?c.else=!0:s&&(c.elseif=s),c}}}}],Qs={expectHTML:!0,modules:Ys,directives:{model:function(e,t,n){var r=t.value,i=t.modifiers,o=e.tag,a=e.attrsMap.type;if(e.component)return mn(e,r,i),!1;if(\"select\"===o)An(e,r,i);else if(\"input\"===o&&\"checkbox\"===a)xn(e,r,i);else if(\"input\"===o&&\"radio\"===a)kn(e,r,i);else if(\"input\"===o||\"textarea\"===o)On(e,r,i);else if(!Bi.isReservedTag(o))return mn(e,r,i),!1;return!0},text:function(e,t){t.value&&ln(e,\"textContent\",\"_s(\"+t.value+\")\")},html:function(e,t){t.value&&ln(e,\"innerHTML\",\"_s(\"+t.value+\")\")}},isPreTag:function(e){return\"pre\"===e},isUnaryTag:ls,mustUseProp:aa,canBeLeftOpenTag:fs,isReservedTag:ma,getTagNamespace:Kt,staticKeys:function(e){return e.reduce(function(e,t){return e.concat(t.staticKeys||[])},[]).join(\",\")}(Ys)},Xs=v(function(e){return f(\"type,tag,attrsList,attrsMap,plain,parent,children,attrs\"+(e?\",\"+e:\"\"))}),ec=/^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/,tc=/^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/,nc={esc:27,tab:9,enter:13,space:32,up:38,left:37,right:39,down:40,delete:[8,46]},rc=function(e){return\"if(\"+e+\")return null;\"},ic={stop:\"$event.stopPropagation();\",prevent:\"$event.preventDefault();\",self:rc(\"$event.target !== $event.currentTarget\"),ctrl:rc(\"!$event.ctrlKey\"),shift:rc(\"!$event.shiftKey\"),alt:rc(\"!$event.altKey\"),meta:rc(\"!$event.metaKey\"),left:rc(\"'button' in $event && $event.button !== 0\"),middle:rc(\"'button' in $event && $event.button !== 1\"),right:rc(\"'button' in $event && $event.button !== 2\")},oc={on:function(e,t){e.wrapListeners=function(e){return\"_g(\"+e+\",\"+t.value+\")\"}},bind:function(e,t){e.wrapData=function(n){return\"_b(\"+n+\",'\"+e.tag+\"',\"+t.value+\",\"+(t.modifiers&&t.modifiers.prop?\"true\":\"false\")+(t.modifiers&&t.modifiers.sync?\",true\":\"\")+\")\"}},cloak:_},ac=function(e){this.options=e,this.warn=e.warn||cn,this.transforms=un(e.modules,\"transformCode\"),this.dataGenFns=un(e.modules,\"genData\"),this.directives=y(y({},oc),e.directives);var t=e.isReservedTag||Di;this.maybeComponent=function(e){return!t(e.tag)},this.onceId=0,this.staticRenderFns=[]},sc=(new RegExp(\"\\\\b\"+\"do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,super,throw,while,yield,delete,export,import,return,switch,default,extends,finally,continue,debugger,function,arguments\".split(\",\").join(\"\\\\b|\\\\b\")+\"\\\\b\"),new RegExp(\"\\\\b\"+\"delete,typeof,void\".split(\",\").join(\"\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b\")+\"\\\\s*\\\\([^\\\\)]*\\\\)\"),function(e){return function(t){function n(n,r){var i=Object.create(t),o=[],a=[];if(i.warn=function(e,t){(t?a:o).push(e)},r){r.modules&&(i.modules=(t.modules||[]).concat(r.modules)),r.directives&&(i.directives=y(Object.create(t.directives),r.directives));for(var s in r)\"modules\"!==s&&\"directives\"!==s&&(i[s]=r[s])}var c=e(n,i);return c.errors=o,c.tips=a,c}return{compile:n,compileToFunctions:xi(n)}}}(function(e,t){var n=Cr(e.trim(),t);Kr(n,t);var r=ei(n,t);return{ast:n,render:r.render,staticRenderFns:r.staticRenderFns}})(Qs).compileToFunctions),cc=!!Ki&&ki(!1),uc=!!Ki&&ki(!0),lc=v(function(e){var t=Jt(e);return t&&t.innerHTML}),fc=Ot.prototype.$mount;return Ot.prototype.$mount=function(e,t){if((e=e&&Jt(e))===document.body||e===document.documentElement)return this;var n=this.$options;if(!n.render){var r=n.template;if(r)if(\"string\"==typeof r)\"#\"===r.charAt(0)&&(r=lc(r));else{if(!r.nodeType)return this;r=r.innerHTML}else e&&(r=Ai(e));if(r){var i=sc(r,{shouldDecodeNewlines:cc,shouldDecodeNewlinesForHref:uc,delimiters:n.delimiters,comments:n.comments},this),o=i.render,a=i.staticRenderFns;n.render=o,n.staticRenderFns=a}}return fc.call(this,e,t)},Ot.compile=sc,Ot});\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],4:[function(require,module,exports){\n'use strict';\n\n// Vue Dev\n//window.Vue = require('vue/dist/vue.js');\n//Vue Prod\nwindow.Vue = require('vue/dist/vue.min');\n\nwindow.VeeValidate = require('vee-validate');\nVeeValidate.Validator.addLocale({\n    'es': require('vee-validate/dist/locale/es')\n});\nVue.use(VeeValidate, { locale: 'es', errorBagName: 'validation_errors' });\n\nif ($('#app').length) {\n    new Vue({\n        el: '#app',\n        components: require('./vue-components')\n    });\n}\n\n},{\"./vue-components\":5,\"vee-validate\":2,\"vee-validate/dist/locale/es\":1,\"vue/dist/vue.min\":3}],5:[function(require,module,exports){\n'use strict';\n\nrequire('./vue-components/global-errors');\nrequire('./vue-components/errors');\nrequire('./vue-components/select2');\n\n/**\r\n * Contabilidad Components...\r\n */\nrequire('./vue-components/Contabilidad/emails');\n\nrequire('./vue-components/Contabilidad/poliza_tipo/poliza-tipo-create');\nrequire('./vue-components/Contabilidad/tipo_cuenta_contable/tipo-cuenta-contable-create');\nrequire('./vue-components/Contabilidad/tipo_cuenta_contable/tipo-cuenta-contable-update');\nrequire('./vue-components/Contabilidad/cuenta_contable/index');\nrequire('./vue-components/Contabilidad/poliza_generada/edit');\nrequire('./vue-components/Contabilidad/cuenta_concepto/index');\nrequire('./vue-components/Contabilidad/cuenta_material/index');\nrequire('./vue-components/Contabilidad/cuenta_empresa/cuenta-empresa-edit');\nrequire('./vue-components/Contabilidad/cuenta_almacen/index');\nrequire('./vue-components/Contabilidad/datos_contables/edit');\nrequire('./vue-components/kardex_material/kardex-material-index');\nrequire('./vue-components/Contabilidad/modulos/revaluacion/create');\nrequire('./vue-components/Contabilidad/cuenta_fondo/index');\nrequire('./vue-components/Contabilidad/cuenta_bancos/cuenta-bancaria-edit');\nrequire('./vue-components/Contabilidad/cuenta_costo/index');\n\n/**\r\n * Compras Components\r\n */\nrequire('./vue-components/Compras/requisicion/create');\nrequire('./vue-components/Compras/requisicion/edit');\nrequire('./vue-components/Compras/material/index');\n\n/**\r\n * Finanzas Components\r\n */\nrequire('./vue-components/Finanzas/comprobante_fondo_fijo/create');\nrequire('./vue-components/Finanzas/comprobante_fondo_fijo/edit');\n/**\r\n * Reportes Components\r\n */\nrequire('./vue-components/Reportes/subcontratos-estimacion');\n\n/**\r\n * Tesoreria Components\r\n */\nrequire('./vue-components/Tesoreria/traspaso_cuentas/index');\nrequire('./vue-components/Tesoreria/movimientos_bancarios/index');\n\n/**\r\n * Control de costos Components\r\n */\nrequire('./vue-components/Control_Costos/solicitar_reclasificacion/index');\nrequire('./vue-components/Control_Costos/solicitar_reclasificacion/items');\nrequire('./vue-components/Control_Costos/reclasificacion_costos/index');\n\n/**\r\n * Control de Presupuesto Components\r\n */\nrequire('./vue-components/Control_Presupuesto/presupuesto/index');\n\n/**\r\n * Configuración Components\r\n */\nrequire('./vue-components/Configuracion/Cierre/index');\n\n/**\r\n * Control de cambios al presupuesto Components\r\n */\nrequire('./vue-components/Control_Presupuesto/cambios_presupuesto/create');\n\n},{\"./vue-components/Compras/material/index\":6,\"./vue-components/Compras/requisicion/create\":7,\"./vue-components/Compras/requisicion/edit\":8,\"./vue-components/Configuracion/Cierre/index\":9,\"./vue-components/Contabilidad/cuenta_almacen/index\":10,\"./vue-components/Contabilidad/cuenta_bancos/cuenta-bancaria-edit\":11,\"./vue-components/Contabilidad/cuenta_concepto/index\":12,\"./vue-components/Contabilidad/cuenta_contable/index\":13,\"./vue-components/Contabilidad/cuenta_costo/index\":14,\"./vue-components/Contabilidad/cuenta_empresa/cuenta-empresa-edit\":15,\"./vue-components/Contabilidad/cuenta_fondo/index\":16,\"./vue-components/Contabilidad/cuenta_material/index\":17,\"./vue-components/Contabilidad/datos_contables/edit\":18,\"./vue-components/Contabilidad/emails\":19,\"./vue-components/Contabilidad/modulos/revaluacion/create\":20,\"./vue-components/Contabilidad/poliza_generada/edit\":21,\"./vue-components/Contabilidad/poliza_tipo/poliza-tipo-create\":22,\"./vue-components/Contabilidad/tipo_cuenta_contable/tipo-cuenta-contable-create\":23,\"./vue-components/Contabilidad/tipo_cuenta_contable/tipo-cuenta-contable-update\":24,\"./vue-components/Control_Costos/reclasificacion_costos/index\":25,\"./vue-components/Control_Costos/solicitar_reclasificacion/index\":26,\"./vue-components/Control_Costos/solicitar_reclasificacion/items\":27,\"./vue-components/Control_Presupuesto/cambios_presupuesto/create\":28,\"./vue-components/Control_Presupuesto/presupuesto/index\":29,\"./vue-components/Finanzas/comprobante_fondo_fijo/create\":30,\"./vue-components/Finanzas/comprobante_fondo_fijo/edit\":31,\"./vue-components/Reportes/subcontratos-estimacion\":32,\"./vue-components/Tesoreria/movimientos_bancarios/index\":33,\"./vue-components/Tesoreria/traspaso_cuentas/index\":34,\"./vue-components/errors\":35,\"./vue-components/global-errors\":36,\"./vue-components/kardex_material/kardex-material-index\":37,\"./vue-components/select2\":38}],6:[function(require,module,exports){\n'use strict';\n\nVue.component('material-index', {\n    props: ['material_url'],\n    data: function data() {\n        return {\n            'data': {\n                'materiales': [],\n                'items': [],\n                'cuenta_material_edit': {}\n            },\n            'form': {\n                'cuenta_material': {\n                    'id': '',\n                    'cuenta': '',\n                    'id_tipo_cuenta_material': 0,\n                    'id_material': ''\n                }\n            },\n            valor: '0',\n            guardando: false\n\n        };\n    },\n    methods: {\n        cambio: function cambio() {\n            var self = this;\n            var id = self.valor;\n            if (id != 0) {\n                self.guardando = true;\n                var urla = App.host + '/compras/material/';\n                $.ajax({\n                    type: 'GET',\n                    url: urla + id + \"/tipo\",\n\n                    success: function success(response) {\n                        self.data.items = response;\n                    },\n                    complete: function complete() {\n                        self.guardando = false;\n                    },\n                    error: function error(_error) {\n                        alert(_error.responseText);\n                        self.guardando = false;\n                    }\n                });\n            }\n        },\n        get_materiales: function get_materiales(concepto) {\n            var self = this;\n\n            $.ajax({\n                type: 'GET',\n                url: self.material_url,\n                data: {\n                    attribute: 'nivel',\n                    operator: 'like',\n                    value: concepto.nivel_hijos,\n                    with: 'cuentaConcepto'\n                },\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    self.data.materiales = data;\n                }\n            });\n        }\n    }\n});\n\n},{}],7:[function(require,module,exports){\n'use strict';\n\nVue.component('requisicion-create', {\n\n    props: ['departamentos_responsables', 'tipos_requisiciones', 'url_requisicion'],\n\n    data: function data() {\n        return {\n            form: {\n                id_departamento: '',\n                id_tipo_requisicion: '',\n                observaciones: ''\n            },\n            guardando: false\n        };\n    },\n    methods: {\n\n        confirm_save: function confirm_save() {\n            var self = this;\n            swal({\n                title: \"Guardar Requisición\",\n                text: \"¿Estás seguro de que la información es correcta?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.save();\n            }).catch(swal.noop);\n        },\n\n        save: function save() {\n            var self = this;\n            var url = this.url_requisicion;\n            var data = this.form;\n\n            $.ajax({\n                type: 'POST',\n                url: url,\n                data: data,\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    swal({\n                        title: '¡Correcto!',\n                        html: \"Se ha creado la Requisición <br>\" + \"<b>\" + data.data.requisicion.transaccion_ext.folio_adicional + \"</b>\",\n                        type: \"success\",\n                        confirmButtonText: \"Ok\",\n                        closeOnConfirm: false\n                    }).then(function () {\n                        window.location = self.url_requisicion + '/' + data.data.requisicion.id_transaccion + '/edit';\n                    }).catch(swal.noop);\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        },\n\n        validateForm: function validateForm(scope, funcion) {\n            var _this = this;\n\n            this.$validator.validateAll(scope).then(function (result) {\n                if (result) {\n                    if (funcion == 'save') {\n                        _this.confirm_save();\n                    }\n                } else {\n                    swal({\n                        type: 'warning',\n                        title: 'Advertencia',\n                        text: 'Por favor corrija los errores del formulario'\n                    });\n                }\n            });\n        }\n    }\n});\n\n},{}],8:[function(require,module,exports){\n'use strict';\n\nVue.component('requisicion-edit', {\n\n    props: ['url_requisicion', 'requisicion', 'materiales', 'departamentos_responsables', 'tipos_requisiciones'],\n\n    data: function data() {\n        return {\n            form: {\n                requisicion: {\n                    id_departamento: this.requisicion.transaccion_ext.id_departamento,\n                    id_tipo_requisicion: this.requisicion.transaccion_ext.id_tipo_requisicion,\n                    observaciones: this.requisicion.observaciones\n                },\n                item: {\n                    'id_transaccion': this.requisicion.id_transaccion,\n                    'id_material': '',\n                    'observaciones': '',\n                    'cantidad': '',\n                    'unidad': this.unidad,\n                    'id_item': ''\n                }\n            },\n            data: {\n                items: this.requisicion.items,\n                guardando: false\n            }\n        };\n    },\n    computed: {\n        materiales_list: function materiales_list() {\n            var result = {};\n            this.materiales.forEach(function (material) {\n                result[material.id_material] = material.descripcion;\n            });\n\n            return result;\n        },\n        materiales_unidad_list: function materiales_unidad_list() {\n            var result = {};\n            this.materiales.forEach(function (material) {\n                result[material.id_material] = material.unidad;\n            });\n\n            return result;\n        },\n        unidad: function unidad() {\n            this.form.item.unidad = this.materiales_unidad_list[this.form.item.id_material];\n            return this.materiales_unidad_list[this.form.item.id_material];\n        }\n    },\n\n    methods: {\n        show_add_item: function show_add_item() {\n\n            $('#add_item_modal').removeAttr('tabindex');\n            this.validation_errors.clear('form_add_item');\n            $('#add_item_modal').modal('show');\n            this.validation_errors.clear('form_add_item');\n        },\n\n        confirm_remove_item: function confirm_remove_item(item) {\n            var self = this;\n            swal({\n                title: \"Eliminar Partida\",\n                text: \"¿Estás seguro de que deseas eliminar la partida?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.remove_item(item);\n            }).catch(swal.noop);\n        },\n\n        remove_item: function remove_item(item) {\n            var self = this;\n            var url = App.host + '/item/' + item.id_item;\n            var index = this.data.items.indexOf(item);\n\n            $.ajax({\n                type: 'POST',\n                url: url,\n                data: {\n                    _method: 'DELETE'\n                },\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    swal({\n                        title: '¡Correcto!',\n                        text: \"Partida eliminada correctamente.\",\n                        type: \"success\",\n                        confirmButtonText: \"Ok\"\n                    });\n                    Vue.delete(self.data.items, index);\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        },\n\n        show_edit_item: function show_edit_item(item) {\n            this.form.item['index'] = this.data.items.indexOf(item);\n            this.form.item.id_material = item.id_material;\n            this.form.item.observaciones = item.item_ext.observaciones;\n            this.form.item.unidad = item.unidad;\n            this.form.item.cantidad = item.cantidad;\n            this.form.item.id_item = item.id_item;\n            $('#edit_item_modal').removeAttr('tabindex');\n            this.validation_errors.clear('form_edit_item');\n            $('#edit_item_modal').modal('show');\n            this.validation_errors.clear('form_edit_item');\n        },\n\n        close_add_item: function close_add_item() {\n            $('#add_item_modal').modal('hide');\n            $('#edit_item_modal').modal('hide');\n            this.form.item = {\n                'id_transaccion': this.requisicion.id_transaccion,\n                'id_material': '',\n                'observaciones': '',\n                'cantidad': '',\n                'unidad': ''\n            };\n        },\n\n        confirm_save: function confirm_save() {\n            var self = this;\n            swal({\n                title: \"Actualizar Requisición\",\n                text: \"¿Estás seguro de que la información es correcta?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.save();\n            }).catch(swal.noop);\n        },\n\n        save: function save() {\n            var self = this;\n            var url = this.url_requisicion;\n            var data = this.form;\n\n            $.ajax({\n                type: 'POST',\n                url: url,\n                data: data,\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    swal({\n                        title: '¡Correcto!',\n                        text: \"Requisición actualizada correctamente.\",\n                        type: \"success\",\n                        confirmButtonText: \"Ok\"\n                    });\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        },\n        confirm_update_item: function confirm_update_item() {\n            var self = this;\n            swal({\n                title: \"Actualizar Partida\",\n                text: \"¿Estás seguro de que la información es correcta?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.update_item();\n            }).catch(swal.noop);\n        },\n        confirm_save_item: function confirm_save_item() {\n            var self = this;\n            swal({\n                title: \"Guardar Partida\",\n                text: \"¿Estás seguro de que la información es correcta?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.save_item();\n            }).catch(swal.noop);\n        },\n        confirm_update_requisicion: function confirm_update_requisicion() {\n            var self = this;\n            swal({\n                title: \"Actualizar Requisicion\",\n                text: \"¿Estás seguro de que la información es correcta?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.update_requisicion();\n            }).catch(swal.noop);\n        },\n\n        save_item: function save_item() {\n            var self = this;\n            var url = App.host + '/item';\n            var data = this.form.item;\n\n            $.ajax({\n                type: 'POST',\n                url: url,\n                data: data,\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    self.data.items.push(data.data.item);\n                    $('#add_item_modal').modal('hide');\n                    swal({\n                        title: '¡Correcto!',\n                        text: \"Partida guardada correctamente.\",\n                        type: \"success\",\n                        confirmButtonText: \"Ok\"\n                    });\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        },\n\n        update_item: function update_item() {\n\n            var self = this;\n            var url = App.host + '/item/' + self.form.item.id_item;\n            var data = this.form.item;\n            data['_method'] = 'PATCH';\n            $.ajax({\n                type: 'POST',\n                url: url,\n                data: data,\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    self.data.items[self.form.item.index] = data.data.item;\n                    $('#edit_item_modal').modal('hide');\n                    self.form.item = {\n                        'id_transaccion': self.requisicion.id_transaccion,\n                        'id_material': '',\n                        'observaciones': '',\n                        'cantidad': '',\n                        'unidad': ''\n                    };\n                    swal({\n                        title: '¡Correcto!',\n                        text: \"Partida actualizada correctamente.\",\n                        type: \"success\",\n                        confirmButtonText: \"Ok\"\n                    });\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        },\n        update_requisicion: function update_requisicion() {\n\n            var self = this;\n            var url = App.host + '/compras/requisicion/' + self.form.item.id_transaccion;\n            var data = this.form.requisicion;\n            data['_method'] = 'patch';\n            $.ajax({\n                type: 'POST',\n                url: url,\n                data: data,\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    swal({\n                        title: '¡Correcto!',\n                        text: \"Requisición actualizada correctamente.\",\n                        type: \"success\",\n                        confirmButtonText: \"Ok\"\n                    }).then(function () {\n                        window.location = App.host + '/compras/requisicion/' + self.form.item.id_transaccion + '/edit';\n                    }).catch(swal.noop);\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        },\n\n        validateForm: function validateForm(scope, funcion) {\n            var _this = this;\n\n            this.$validator.validateAll(scope).then(function () {\n                if (funcion == 'save') {\n                    _this.confirm_save();\n                } else if (funcion == 'save_item') {\n                    _this.confirm_save_item();\n                } else if (funcion == 'edit_item') {\n                    _this.confirm_update_item();\n                } else if (funcion == 'update_requisicion') {\n                    _this.confirm_update_requisicion();\n                }\n            }).catch(function () {\n                swal({\n                    type: 'warning',\n                    title: 'Advertencia',\n                    text: 'Por favor corrija los errores del formulario'\n                });\n            });\n        }\n    }\n});\n\n},{}],9:[function(require,module,exports){\n'use strict';\n\nVue.component('cierre-index', {\n    data: function data() {\n        return {\n            cierre: {\n                anio: '',\n                mes: ''\n            },\n            cierre_edit: {\n                id: '',\n                anio: '',\n                created_at: '',\n                description: '',\n                mes: '',\n                registro: ''\n            },\n            tipos_tran: {},\n            guardando: false\n        };\n    },\n\n    mounted: function mounted() {\n        var self = this;\n\n        $(document).on('click', '.btn_open', function () {\n            var id = $(this).attr('id');\n            self.open(id);\n        });\n        $(document).on('click', '.btn_close', function () {\n            var id = $(this).attr('id');\n            self.close(id);\n        });\n\n        $('#fecha').datepicker({\n            autoclose: true,\n            minViewMode: 1,\n            format: 'mm/yyyy',\n            language: 'es'\n        }).on('changeDate', function (selected) {\n            self.cierre.anio = new Date(selected.date.valueOf()).getFullYear();\n            self.cierre.mes = new Date(selected.date.valueOf()).getMonth() + 1;\n        });\n\n        $('#cierres_table').DataTable({\n            \"processing\": true,\n            \"serverSide\": true,\n            \"ordering\": false,\n            \"searching\": false,\n            \"ajax\": {\n                \"url\": App.host + '/configuracion/cierre/paginate',\n                \"type\": \"POST\",\n                \"beforeSend\": function beforeSend() {\n                    self.guardando = true;\n                },\n                \"complete\": function complete() {\n                    self.guardando = false;\n                },\n                \"dataSrc\": function dataSrc(json) {\n                    for (var i = 0; i < json.data.length; i++) {\n                        json.data[i].mes = parseInt(json.data[i].mes).getMes();\n                        json.data[i].created_at = new Date(json.data[i].created_at).dateFormat();\n                        json.data[i].registro = json.data[i].user_registro.nombre + ' ' + json.data[i].user_registro.apaterno + ' ' + json.data[i].user_registro.amaterno;\n                    }\n                    return json.data;\n                }\n            },\n            \"columns\": [{ data: 'anio' }, { data: 'mes' }, { data: 'registro' }, { data: 'created_at' }, {\n                data: {},\n                render: function render(data) {\n                    return '<span class=\"label\" style=\"background-color: ' + (data.abierto == true ? 'rgb(243, 156, 18)' : 'rgb(0, 166, 90)') + '\">' + (data.abierto == true ? 'Abierto' : 'Cerrado') + '</span>';\n                }\n            }, {\n                data: {},\n                render: function render(data) {\n                    return '<div class=\"btn-group\">' + '<button type=\"button\" class=\"btn btn-default btn-xs dropdown-toggle\" data-toggle=\"dropdown\" aria-expanded=\"true\">' + '<span class=\"caret\"></span>' + '</button>' + '<ul class=\"dropdown-menu\">' + '<li>' + '<a href=\"#\" id=\"' + data.id + '\" class=\"btn_' + (data.abierto == true ? 'close' : 'open') + '\">' + (data.abierto == true ? 'Cerrar ' : 'Abrir ') + '<?php echo (Auth::id()) ?></a>' + '</li>' + '</ul>' + '</div>';\n                }\n            }],\n            language: {\n                \"sProcessing\": \"Procesando...\",\n                \"sLengthMenu\": \"Mostrar _MENU_ registros\",\n                \"sZeroRecords\": \"No se encontraron resultados\",\n                \"sEmptyTable\": \"Ningún dato disponible en esta tabla\",\n                \"sInfo\": \"Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros\",\n                \"sInfoEmpty\": \"Mostrando registros del 0 al 0 de un total de 0 registros\",\n                \"sInfoFiltered\": \"(filtrado de un total de _MAX_ registros)\",\n                \"sInfoPostFix\": \"\",\n                \"sSearch\": \"Buscar:\",\n                \"sUrl\": \"\",\n                \"sInfoThousands\": \",\",\n                \"sLoadingRecords\": \"Cargando...\",\n                \"oPaginate\": {\n                    \"sFirst\": \"Primero\",\n                    \"sLast\": \"Último\",\n                    \"sNext\": \"Siguiente\",\n                    \"sPrevious\": \"Anterior\"\n                },\n                \"oAria\": {\n                    \"sSortAscending\": \": Activar para ordenar la columna de manera ascendente\",\n                    \"sSortDescending\": \": Activar para ordenar la columna de manera descendente\"\n                }\n            }\n        });\n    },\n\n    methods: {\n        generar_cierre: function generar_cierre() {\n            $('#create_cierre_modal').modal('show');\n        },\n\n        save_cierre: function save_cierre() {\n            var self = this;\n\n            $.ajax({\n                url: App.host + '/configuracion/cierre',\n                type: 'POST',\n                data: self.cierre,\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success() {\n                    $('#cierres_table').DataTable().ajax.reload();\n\n                    $('#create_cierre_modal').modal('hide');\n                    swal({\n                        type: 'success',\n                        title: 'Correcto',\n                        html: 'Cierre de Periodo guardado correctamente'\n                    });\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        },\n\n        open: function open(id_cierre) {\n            var self = this;\n\n            swal({\n                title: 'Abrir Periodo',\n                text: 'Escriba el motivo de la apertura del Periodo : ',\n                input: 'text',\n                showCancelButton: true,\n                confirmButtonText: 'Abrir',\n                cancelButtonText: 'Cancelar',\n                showLoaderOnConfirm: true,\n                preConfirm: function preConfirm(motivo) {\n                    return new Promise(function (resolve) {\n                        $.ajax({\n                            'url': App.host + '/configuracion/cierre/' + id_cierre + '/open',\n                            'type': 'POST',\n                            'data': {\n                                '_method': 'PATCH',\n                                'motivo': motivo\n                            },\n                            beforeSend: function beforeSend() {\n                                self.guardando = true;\n                            },\n                            success: function success(response) {\n                                $('#cierres_table').DataTable().ajax.reload(null, false);\n                                swal({\n                                    type: 'success',\n                                    title: 'Periodo abierto correctamente',\n                                    html: '<p>Año : <b>' + response.anio + '</b> ' + 'Mes : <b>' + parseInt(response.mes).getMes() + '</b></p>'\n                                });\n                            },\n                            complete: function complete() {\n                                self.guardando = false;\n                            }\n                        });\n                    });\n                },\n                allowOutsideClick: function allowOutsideClick() {\n                    return !swal.isLoading();\n                }\n            }).then(function (result) {}).catch(swal.noop);\n        },\n\n        close: function close(id_cierre) {\n            var self = this;\n            swal({\n                title: '¿Deseas volver a cerrar el periodo seleccionado?',\n                text: \"No se podrán realizar transacciones para el periodo seleccionado\",\n                type: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Si, Cerrar',\n                cancelButtonText: 'No, Cancelar'\n            }).then(function (result) {\n\n                $.ajax({\n                    url: App.host + '/configuracion/cierre/' + id_cierre + '/close',\n                    type: 'POST',\n                    data: {\n                        _method: 'PATCH'\n                    },\n                    beforeSend: function beforeSend() {\n                        self.guardando = true;\n                    },\n                    success: function success(response) {\n                        $('#cierres_table').DataTable().ajax.reload(null, false);\n                        swal({\n                            type: 'success',\n                            title: 'Periodo Cerrado Correctamente',\n                            html: '<p>Año : <b>' + response.anio + '</b> ' + 'Mes : <b>' + parseInt(response.mes).getMes() + '</b></p>'\n                        });\n                    },\n                    complete: function complete() {\n                        self.guardando = false;\n                    }\n                });\n            }).catch(swal.noop);\n        }\n    }\n});\n\n},{}],10:[function(require,module,exports){\n'use strict';\n\nVue.component('cuenta-almacen-index', {\n    props: ['datos_contables', 'url_cuenta_almacen_store', 'almacenes'],\n    data: function data() {\n        return {\n            'data': {\n                'almacenes': this.almacenes,\n                'almacen_edit': {}\n            },\n            'form': {\n                'cuenta_almacen': {\n                    'id': '',\n                    'id_almacen': '',\n                    'cuenta': ''\n                }\n            },\n            'guardando': false\n        };\n    },\n    methods: {\n        editar: function editar(almacen) {\n            this.data.almacen_edit = almacen;\n            Vue.set(this.form.cuenta_almacen, 'id_almacen', almacen.id_almacen);\n            if (almacen.cuenta_almacen != null) {\n                Vue.set(this.form.cuenta_almacen, 'cuenta', almacen.cuenta_almacen.cuenta);\n                Vue.set(this.form.cuenta_almacen, 'id', almacen.cuenta_almacen.id);\n            } else {\n                Vue.set(this.form.cuenta_almacen, 'cuenta', '');\n                Vue.set(this.form.cuenta_almacen, 'id', '');\n            }\n            this.validation_errors.clear('form_edit_cuenta');\n            $('#edit_cuenta_modal').modal('show');\n            $('#cuenta_contable').focus();\n            this.validation_errors.clear('form_edit_cuenta');\n        },\n        validateForm: function validateForm(scope, funcion) {\n            var _this = this;\n\n            this.$validator.validateAll(scope).then(function () {\n                if (funcion == 'confirm_save_cuenta') {\n                    _this.confirm_save_cuenta();\n                } else if (funcion == 'confirm_update_cuenta') {\n                    _this.confirm_update_cuenta();\n                }\n            }).catch(function () {\n                swal({\n                    type: 'warning',\n                    title: 'Advertencia',\n                    text: 'Por favor corrija los errores del formulario'\n                });\n            });\n        },\n        confirm_update_cuenta: function confirm_update_cuenta() {\n            var self = this;\n            swal({\n                title: \"Actualizar Cuenta Contable\",\n                text: \"¿Estás seguro de que la información es correcta?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.update_cuenta();\n            }).catch(swal.noop);\n        },\n\n        update_cuenta: function update_cuenta() {\n            var self = this;\n            var url = this.url_cuenta_almacen_store + '/' + this.form.cuenta_almacen.id;\n\n            $.ajax({\n                type: 'POST',\n                url: url,\n                data: {\n                    _method: 'PATCH',\n                    cuenta: self.form.cuenta_almacen.cuenta\n                },\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    self.data.almacen_edit.cuenta_almacen = data.data.cuenta_almacen;\n                    self.close_edit_cuenta();\n                    swal({\n                        type: 'success',\n                        title: 'Correcto',\n                        html: 'Cuenta Contable actualizada correctamente'\n                    });\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        },\n\n        confirm_save_cuenta: function confirm_save_cuenta() {\n            var self = this;\n            swal({\n                title: \"Registrar Cuenta Contable\",\n                text: \"¿Estás seguro de que la información es correcta?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.save_cuenta();\n            }).catch(swal.noop);\n        },\n\n        save_cuenta: function save_cuenta() {\n            var self = this;\n            var url = this.url_cuenta_almacen_store;\n\n            $.ajax({\n                type: 'POST',\n                url: url,\n                data: {\n                    cuenta: self.form.cuenta_almacen.cuenta,\n                    id_almacen: self.form.cuenta_almacen.id_almacen\n                },\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    self.data.almacen_edit.cuenta_almacen = data.data.cuenta_almacen;\n                    self.close_edit_cuenta();\n                    swal({\n                        type: 'success',\n                        title: 'Correcto',\n                        html: 'Cuenta Contable registrada correctamente'\n                    });\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        },\n        close_edit_cuenta: function close_edit_cuenta() {\n            $('#edit_cuenta_modal').modal('hide');\n            Vue.set(this.form.cuenta_almacen, 'cuenta', '');\n            Vue.set(this.form.cuenta_almacen, 'id', '');\n            Vue.set(this.form.cuenta_almacen, 'id_almacen', '');\n        }\n\n    }\n});\n\n},{}],11:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nVue.component('cuenta-bancaria-edit', {\n    props: ['cuenta', 'tipos', 'cuenta_store_url', 'cuentas_asociadas', 'datos_contables'],\n\n    data: function data() {\n        return {\n            'asociadas': this.cuentas_asociadas,\n            'form': {\n                'id_tipo_cuenta_contable': '',\n                'cuenta': ''\n            },\n            'cuenta_descripcion': '',\n            'cuenta_edit_id': 0,\n            'guardando': false,\n            'nuevo_registro': false\n        };\n    },\n    methods: {\n        close_modal: function close_modal(modal) {\n            $('#' + modal).modal('hide');\n            this.form.id_tipo_cuenta_contable = '';\n            this.form.cuenta = '';\n        },\n        confirm_elimina_cuenta: function confirm_elimina_cuenta(cuenta) {\n            var self = this;\n            this.cuenta_edit_id = cuenta.id_cuenta_contable_bancaria;\n            this.form.id_tipo_cuenta_contable = cuenta.id_tipo_cuenta_contable;\n            this.form.cuenta = cuenta.cuenta;\n\n            swal({\n                title: \"Eliminar Cuenta Contable\",\n                html: \"¿Estás seguro que desea eliminar la cuenta \" + cuenta.cuenta + \"?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n\n                self.elimina_cuenta();\n            }).catch(swal.noop);\n        },\n        confirm_cuenta_update: function confirm_cuenta_update() {\n            var self = this;\n            swal({\n                title: \"Actualizar Cuenta Contable\",\n                text: \"¿Estás seguro que desea actualizar la Cuenta Contable?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n\n                self.update_cuenta_bancaria();\n            }).catch(swal.noop);\n        },\n        confirm_cuenta_create: function confirm_cuenta_create() {\n            var self = this;\n            swal({\n                title: \"Registrar Cuenta Contable\",\n                text: \"¿Estás seguro que desea registrar la Cuenta Contable?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.save_cuenta_bancaria();\n            }).catch(swal.noop);\n        },\n        elimina_cuenta: function elimina_cuenta() {\n            var self = this;\n            var data = self.form;\n            var url = App.host + '/sistema_contable/cuentas_contables_bancarias/' + this.cuenta_edit_id;\n            var toRemove = this.cuenta_edit_id;\n            $.ajax({\n                type: 'POST',\n                url: url,\n                data: {\n                    data: data,\n                    _method: 'DELETE'\n                },\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    $.each(self.asociadas, function (index, tipo_cuenta) {\n                        if (toRemove == tipo_cuenta.id_cuenta_contable_bancaria) {\n                            self.asociadas.splice(index, 1);\n                        }\n                    });\n\n                    $('#add_movimiento_modal').modal('hide');\n                    swal({\n                        type: 'success',\n                        title: 'Correcto',\n                        html: 'La cuenta: fué eliminada correctamente'\n                    });\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                    this.cuenta_descripcion = '';\n                    this.cuenta_edit_id = 0;\n                    this.form.id_tipo_cuenta_contable = '';\n                    this.form.cuenta = '';\n                }\n            });\n        },\n        create_cuenta_bancaria: function create_cuenta_bancaria() {\n            this.form.id_tipo_cuenta_contable = '';\n            this.form.cuenta = '';\n            this.nuevo_registro = true;\n            this.obtener_tipos_disponibles();\n\n            this.validation_errors.clear('form_create_cuenta');\n            $('#add_movimiento_modal').modal('show');\n            this.validation_errors.clear('form_create_cuenta');\n        },\n        edit_cuenta_bancaria: function edit_cuenta_bancaria(cuenta) {\n            this.nuevo_registro = false;\n            this.form.id_tipo_cuenta_contable = cuenta.id_tipo_cuenta_contable;\n            this.form.cuenta = cuenta.cuenta;\n            this.cuenta_descripcion = cuenta.tipo_cuenta_contable.descripcion;\n            this.cuenta_edit_id = cuenta.id_cuenta_contable_bancaria;\n\n            this.validation_errors.clear('form_update_cuenta');\n            $('#edit_movimiento_modal').modal('show');\n            this.validation_errors.clear('form_update_cuenta');\n        },\n        update_cuenta_bancaria: function update_cuenta_bancaria() {\n            var self = this;\n            var data = self.form;\n            var url = App.host + '/sistema_contable/cuentas_contables_bancarias/' + this.cuenta_edit_id;\n            var toRemove = this.cuenta_edit_id;\n\n            data.id_cuenta = self.cuenta.id_cuenta;\n            $.ajax({\n                type: 'POST',\n                url: url,\n                data: {\n                    data: data,\n                    _method: 'PATCH'\n                },\n                beforeSend: function beforeSend() {\n                    self.validation_errors.clear('form_update_cuenta');\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    $.each(self.asociadas, function (index, tipo_cuenta) {\n                        if (toRemove == tipo_cuenta.id_cuenta_contable_bancaria) {\n                            self.asociadas.splice(index, 1, data.data);\n                        }\n                    });\n\n                    $('#edit_movimiento_modal').modal('hide');\n                    swal({\n                        type: 'success',\n                        title: 'Correcto',\n                        html: 'La cuenta:' + data.data.cuenta + '</b> fué actualizada correctamente'\n                    });\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                    this.cuenta_descripcion = '';\n                    this.cuenta_edit_id = 0;\n                    this.form.id_tipo_cuenta_contable = '';\n                    this.form.cuenta = '';\n                }\n            });\n        },\n        save_cuenta_bancaria: function save_cuenta_bancaria() {\n            var self = this;\n            var url = self.cuenta_store_url;\n            var data = self.form;\n\n            data.id_cuenta = self.cuenta.id_cuenta;\n            $.ajax({\n                type: 'POST',\n                url: url,\n                data: data,\n                beforeSend: function beforeSend() {\n                    self.validation_errors.clear('form_create_cuenta');\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    self.asociadas.push(data.data);\n                    self.close_modal('add_movimiento_modal');\n                    swal({\n                        type: 'success',\n                        title: 'Correcto',\n                        html: 'La cuenta: <b>' + data.data.cuenta + '</b> fue registrada correctamente'\n                    });\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                    this.form.id_tipo_cuenta_contable = '';\n                    this.form.cuenta = '';\n                }\n            });\n        },\n\n        validateForm: function validateForm(scope, funcion) {\n            var _this = this;\n\n            this.$validator.validateAll(scope).then(function () {\n                if (funcion == 'confirm_edit_cuenta') {\n                    _this.confirm_cuenta_update();\n                } else if (funcion == 'confirm_create_cuenta') {\n                    _this.confirm_cuenta_create();\n                }\n            }).catch(function () {\n                swal({\n                    type: 'warning',\n                    title: 'Advertencia',\n                    text: 'Por favor corrija los errores del formulario'\n                });\n            });\n        },\n        tipo_info: function tipo_info(id) {\n            var self = this,\n                info = {};\n\n            $.each(self.tipos, function (index, tipo_cuenta) {\n                if (id == tipo_cuenta.id_tipo_cuenta_contable) info = tipo_cuenta;\n            });\n\n            return info;\n        },\n        uniq: function uniq(a) {\n            var prims = { \"boolean\": {}, \"number\": {}, \"string\": {} },\n                objs = [];\n\n            return a.filter(function (item) {\n                var type = typeof item === 'undefined' ? 'undefined' : _typeof(item);\n                if (type in prims) return prims[type].hasOwnProperty(item) ? false : prims[type][item] = true;else return objs.indexOf(item) >= 0 ? false : objs.push(item);\n            });\n        },\n        obtener_tipos_disponibles: function obtener_tipos_disponibles() {\n            var self = this,\n                tipos = [],\n                tipos_temp = [],\n                asociadas_tipos = [],\n                tipos_disponibles = [];\n\n            // No existen cuentas asociadas\n            if (self.asociadas.length == 0) {\n                return self.tipos;\n            }\n\n            $.each(self.asociadas, function (index, aso) {\n                asociadas_tipos.push(parseInt(aso.id_tipo_cuenta_contable));\n            });\n\n            $.each(self.tipos, function (indexTipo, tipo) {\n                tipos.push(tipo.id_tipo_cuenta_contable);\n            });\n\n            tipos_temp = tipos.filter(function (v) {\n                return !asociadas_tipos.includes(v);\n            });\n\n            tipos_temp = self.uniq(tipos_temp);\n\n            $.each(tipos_temp, function (index, tipo) {\n                tipos_disponibles.push(self.tipo_info(tipo));\n            });\n\n            return tipos_disponibles;\n        }\n    }\n});\n\n},{}],12:[function(require,module,exports){\n'use strict';\n\nVue.component('cuenta-concepto-index', {\n    props: ['conceptos', 'url_concepto_get_by', 'datos_contables', 'url_store_cuenta'],\n    data: function data() {\n        return {\n            'data': {\n                'conceptos': this.conceptos\n\n            },\n            'form': {\n                'concepto_edit': {},\n                'cuenta': '',\n                'concepto': '',\n                'id': '',\n                'id_concepto': ''\n            },\n            'cargando': false\n        };\n    },\n\n    directives: {\n        treegrid: {\n            inserted: function inserted(el) {\n                $(el).treegrid({\n                    saveState: true,\n                    initialState: 'collapsed'\n                });\n            },\n            componentUpdated: function componentUpdated(el) {\n                $(el).treegrid({\n                    saveState: true\n                });\n            }\n        },\n        select2: {\n            inserted: function inserted(el) {\n                $(el).select2({\n                    width: '100%',\n                    ajax: {\n                        url: App.host + '/sistema_contable/concepto/getBy',\n                        dataType: 'json',\n                        delay: 500,\n                        data: function data(params) {\n                            return {\n                                attribute: 'descripcion',\n                                operator: 'like',\n                                value: '%' + params.term + '%'\n                            };\n                        },\n                        processResults: function processResults(data) {\n                            return {\n                                results: $.map(data.data.conceptos, function (item) {\n                                    return {\n                                        text: item.descripcion,\n                                        id: item.id_concepto\n                                    };\n                                })\n                            };\n                        },\n                        error: function error(_error) {},\n                        cache: true\n                    },\n                    escapeMarkup: function escapeMarkup(markup) {\n                        return markup;\n                    }, // let our custom formatter work\n                    minimumInputLength: 1\n                }).on('select2:select', function () {\n                    $('#id_concepto').val($('#concepto_select option:selected').data().data.id);\n                });\n            }\n        }\n    },\n\n    computed: {\n        conceptos_ordenados: function conceptos_ordenados() {\n            return this.data.conceptos.sort(function (a, b) {\n                return a.nivel > b.nivel ? 1 : b.nivel > a.nivel ? -1 : 0;\n            });\n        }\n    },\n\n    methods: {\n        tr_class: function tr_class(concepto) {\n            var treegrid = \"treegrid-\" + concepto.id_concepto;\n            var treegrid_parent = concepto.id_padre != null && concepto.id_concepto != parseInt($('#id_concepto').val()) ? \" treegrid-parent-\" + concepto.id_padre : \"\";\n            return treegrid + treegrid_parent;\n        },\n\n        tr_id: function tr_id(concepto) {\n            return concepto.id_padre == null || concepto.tiene_hijos > 0 ? \"tnode-\" + concepto.id_concepto : \"\";\n        },\n\n        get_hijos: function get_hijos(concepto) {\n            var self = this;\n\n            $.ajax({\n                type: 'GET',\n                url: self.url_concepto_get_by,\n                data: {\n                    attribute: 'nivel',\n                    operator: 'like',\n                    value: concepto.nivel_hijos,\n                    with: 'cuentaConcepto'\n                },\n                beforeSend: function beforeSend() {\n                    self.cargando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    data.data.conceptos.forEach(function (concepto) {\n                        self.data.conceptos.push(concepto);\n                    });\n                    concepto.cargado = true;\n                },\n                complete: function complete() {\n                    self.cargando = false;\n                    setTimeout(function () {\n                        $('#tnode-' + concepto.id_concepto).treegrid('expand');\n                    }, 500);\n                }\n            });\n        },\n\n        edit_cuenta: function edit_cuenta(concepto) {\n            this.form.concepto_edit = concepto;\n            Vue.set(this.form, 'concepto', concepto.descripcion);\n            Vue.set(this.form, 'id_concepto', concepto.id_concepto);\n            if (concepto.cuenta_concepto != null) {\n                Vue.set(this.form, 'cuenta', concepto.cuenta_concepto.cuenta);\n                Vue.set(this.form, 'id', concepto.cuenta_concepto.id);\n            } else {\n                Vue.set(this.form, 'cuenta', '');\n                Vue.set(this.form, 'id', '');\n            }\n            this.validation_errors.clear('form_edit_cuenta');\n            $('#edit_cuenta_modal').modal('show');\n            $('#cuenta_contable').focus();\n            this.validation_errors.clear('form_edit_cuenta');\n        },\n\n        validateForm: function validateForm(scope, funcion) {\n            var _this = this;\n\n            this.$validator.validateAll(scope).then(function () {\n                if (funcion == 'confirm_save_cuenta') {\n                    _this.confirm_save_cuenta();\n                } else if (funcion == 'confirm_update_cuenta') {\n                    _this.confirm_update_cuenta();\n                }\n            }).catch(function () {\n                swal({\n                    type: 'warning',\n                    title: 'Advertencia',\n                    text: 'Por favor corrija los errores del formulario'\n                });\n            });\n        },\n\n        confirm_update_cuenta: function confirm_update_cuenta() {\n            var self = this;\n            swal({\n                title: \"Actualizar Cuenta Contable\",\n                text: \"¿Estás seguro de que la información es correcta?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.update_cuenta();\n            }).catch(swal.noop);\n        },\n\n        update_cuenta: function update_cuenta() {\n            var self = this;\n            var url = this.url_store_cuenta + '/' + this.form.id;\n\n            $.ajax({\n                type: 'POST',\n                url: url,\n                data: {\n                    _method: 'PATCH',\n                    cuenta: self.form.cuenta\n                },\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    self.form.concepto_edit.cuenta_concepto = data.data.cuenta_concepto;\n                    self.close_edit_cuenta();\n                    swal({\n                        type: 'success',\n                        title: 'Correcto',\n                        html: 'Cuenta Contable actualizada correctamente'\n                    });\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        },\n\n        confirm_save_cuenta: function confirm_save_cuenta() {\n            var self = this;\n            swal({\n                title: \"Registrar Cuenta Contable\",\n                text: \"¿Estás seguro de que la información es correcta?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.save_cuenta();\n            }).catch(swal.noop);\n        },\n\n        save_cuenta: function save_cuenta() {\n            var self = this;\n            var url = this.url_store_cuenta;\n\n            $.ajax({\n                type: 'POST',\n                url: url,\n                data: {\n                    cuenta: self.form.cuenta,\n                    id_concepto: self.form.id_concepto\n                },\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    self.form.concepto_edit.cuenta_concepto = data.data.cuenta_concepto;\n                    self.close_edit_cuenta();\n                    swal({\n                        type: 'success',\n                        title: 'Correcto',\n                        html: 'Cuenta Contable registrada correctamente'\n                    });\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        },\n\n        close_edit_cuenta: function close_edit_cuenta() {\n            $('#edit_cuenta_modal').modal('hide');\n            Vue.set(this.form, 'cuenta', '');\n            Vue.set(this.form, 'concepto', '');\n            Vue.set(this.form, 'id', '');\n            Vue.set(this.form, 'id_concepto', '');\n        },\n\n        buscar_nodos: function buscar_nodos() {\n            var id_concepto = $('#id_concepto').val();\n\n            var self = this;\n            var url = App.host + '/sistema_contable/concepto/findBy';\n            $.ajax({\n                type: 'GET',\n                url: url,\n                data: {\n                    attribute: 'id_concepto',\n                    operator: '=',\n                    value: id_concepto,\n                    with: 'cuentaConcepto'\n                },\n                beforeSend: function beforeSend() {\n                    self.cargando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    self.data.conceptos = [];\n                    if (data.data.concepto != null) {\n                        self.data.conceptos.push(data.data.concepto);\n                    }\n                },\n                complete: function complete() {\n                    self.cargando = false;\n                }\n            });\n        }\n    }\n});\n\n},{}],13:[function(require,module,exports){\n'use strict';\n\nVue.component('cuenta-contable-index', {\n    props: ['datos_contables', 'cuenta_contable_url', 'tipos_cuentas_contables'],\n    data: function data() {\n        return {\n            'data': {\n                'tipos_cuentas_contables': this.tipos_cuentas_contables\n            },\n            'form': {\n                'tipo_cuenta_contable_edit': {\n                    'cuenta_contable': {\n                        'con_prefijo': false\n                    }\n                }\n            },\n            'guardando': false\n        };\n    },\n\n    methods: {\n        confirm_cuenta_contable: function confirm_cuenta_contable() {\n            var self = this;\n            swal({\n                title: \"Configurar Cuenta Contable\",\n                text: \"¿Estás seguro de que la información es correcta?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.save_cuenta_contable();\n            }).catch(swal.noop);\n        },\n\n        confirm_cuenta_contable_update: function confirm_cuenta_contable_update() {\n            var self = this;\n            swal({\n                title: \"Actualizar Cuenta Contable\",\n                text: \"¿Estás seguro de que la información es correcta?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.update_cuenta_contable();\n            }).catch(swal.noop);\n        },\n\n        save_cuenta_contable: function save_cuenta_contable() {\n            var self = this;\n            var url = self.cuenta_contable_url;\n            var data = {\n                id_int_tipo_cuenta_contable: self.form.tipo_cuenta_contable_edit.id_int_tipo_cuenta_contable,\n                prefijo: self.form.tipo_cuenta_contable_edit.cuenta_contable.prefijo,\n                cuenta_contable: self.form.tipo_cuenta_contable_edit.cuenta_contable.cuenta_contable,\n                con_prefijo: self.form.tipo_cuenta_contable_edit.cuenta_contable.con_prefijo\n            };\n\n            $.ajax({\n                type: 'POST',\n                url: url,\n                data: data,\n                beforeSend: function beforeSend() {\n                    self.validation_errors.clear('form_save_cuenta');\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    Vue.set(self.data, 'tipos_cuentas_contables', data.data.tipos_cuentas_contables);\n                    swal({\n                        type: 'success',\n                        title: 'Correcto',\n                        html: 'Cuenta Contable <b>' + data.data.cuenta_contable.tipo_cuenta_contable.descripcion + '</b> configurada correctamente'\n                    });\n                },\n                complete: function complete() {\n                    self.reset_form();\n                    $('#modal-configurar-cuenta').modal('hide');\n                    self.guardando = false;\n                }\n            });\n        },\n        update_cuenta_contable: function update_cuenta_contable() {\n            var self = this;\n            var data = {\n                con_prefijo: this.form.tipo_cuenta_contable_edit.cuenta_contable.con_prefijo,\n                prefijo: this.form.tipo_cuenta_contable_edit.cuenta_contable.prefijo,\n                cuenta_contable: this.form.tipo_cuenta_contable_edit.cuenta_contable.cuenta_contable\n            };\n            var url = self.cuenta_contable_url + '/' + this.form.tipo_cuenta_contable_edit.cuenta_contable.id_int_cuenta_contable;\n            $.ajax({\n                type: 'POST',\n                url: url,\n                data: {\n                    data: data,\n                    _method: 'PATCH'\n                },\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    Vue.set(self.data, 'tipos_cuentas_contables', data.data.tipos_cuentas_contables);\n                    swal({\n                        type: 'success',\n                        title: 'Correcto',\n                        html: 'Cuenta Contable <b>' + data.data.cuenta_contable.tipo_cuenta_contable.descripcion + '</b> actualizada correctamente'\n                    });\n                },\n                complete: function complete() {\n                    self.reset_form();\n                    $('#modal-editar-cuenta').modal('hide');\n                    self.guardando = false;\n                }\n            });\n        },\n\n        validateForm: function validateForm(scope, funcion) {\n            var _this = this;\n\n            this.$validator.validateAll(scope).then(function () {\n                if (funcion == 'save_cuenta') {\n                    _this.confirm_cuenta_contable();\n                } else if (funcion == 'update_cuenta') {\n                    _this.confirm_cuenta_contable_update();\n                }\n            }).catch(function () {\n                swal({\n                    type: 'warning',\n                    title: 'Advertencia',\n                    text: 'Por favor corrija los errores del formulario'\n                });\n            });\n        },\n\n        editar: function editar(item) {\n            Vue.set(this.form.tipo_cuenta_contable_edit, 'id_int_tipo_cuenta_contable', item.id_int_tipo_cuenta_contable);\n            Vue.set(this.form.tipo_cuenta_contable_edit, 'descripcion', item.descripcion);\n\n            Vue.set(this.form.tipo_cuenta_contable_edit.cuenta_contable, 'id_int_cuenta_contable', item.cuenta_contable.id_int_cuenta_contable);\n            Vue.set(this.form.tipo_cuenta_contable_edit.cuenta_contable, 'cuenta_contable', item.cuenta_contable.cuenta_contable);\n            Vue.set(this.form.tipo_cuenta_contable_edit.cuenta_contable, 'prefijo', item.cuenta_contable.prefijo);\n            Vue.set(this.form.tipo_cuenta_contable_edit.cuenta_contable, 'con_prefijo', item.cuenta_contable.prefijo ? true : false);\n        },\n\n        configurar: function configurar(item) {\n            Vue.set(this.form.tipo_cuenta_contable_edit, 'id_int_tipo_cuenta_contable', item.id_tipo_cuenta_contable);\n            Vue.set(this.form.tipo_cuenta_contable_edit, 'descripcion', item.descripcion);\n\n            Vue.set(this.form.tipo_cuenta_contable_edit.cuenta_contable, 'id_int_cuenta_contable', '');\n            Vue.set(this.form.tipo_cuenta_contable_edit.cuenta_contable, 'cuenta_contable', '');\n            Vue.set(this.form.tipo_cuenta_contable_edit.cuenta_contable, 'prefijo', '');\n            Vue.set(this.form.tipo_cuenta_contable_edit.cuenta_contable, 'con_prefijo', false);\n        },\n\n        reset_form: function reset_form() {\n            Vue.set(this.form.tipo_cuenta_contable_edit, 'id_int_tipo_cuenta_contable', '');\n            Vue.set(this.form.tipo_cuenta_contable_edit, 'descripcion', '');\n\n            Vue.set(this.form.tipo_cuenta_contable_edit.cuenta_contable, 'id_int_cuenta_contable', '');\n            Vue.set(this.form.tipo_cuenta_contable_edit.cuenta_contable, 'cuenta_contable', '');\n            Vue.set(this.form.tipo_cuenta_contable_edit.cuenta_contable, 'prefijo', '');\n            Vue.set(this.form.tipo_cuenta_contable_edit.cuenta_contable, 'con_prefijo', false);\n        }\n    }\n});\n\n},{}],14:[function(require,module,exports){\n'use strict';\n\nVue.component('cuenta-costo-index', {\n    props: ['costos', 'url_costo_get_by', 'url_costo_find_by', 'datos_contables', 'url_cuenta_costo_index'],\n    data: function data() {\n        return {\n            'data': {\n                'costos': this.costos\n\n            },\n            'form': {\n                'costo_edit': {},\n                'cuenta': '',\n                'costo': '',\n                'id_cuenta_costo': '',\n                'id_costo': ''\n            },\n            'cargando': false\n        };\n    },\n\n    directives: {\n        treegrid: {\n            inserted: function inserted(el) {\n                $(el).treegrid({\n                    saveState: true,\n                    initialState: 'collapsed'\n                });\n            },\n            componentUpdated: function componentUpdated(el) {\n                $(el).treegrid({\n                    saveState: true\n                });\n            }\n        },\n        select2: {\n            inserted: function inserted(el) {\n\n                $(el).select2({\n                    width: '100%',\n                    ajax: {\n                        url: App.host + '/sistema_contable/costo/getBy',\n                        dataType: 'json',\n                        delay: 500,\n                        data: function data(params) {\n                            return {\n                                attribute: 'descripcion',\n                                operator: 'like',\n                                value: '%' + params.term + '%',\n                                with: 'cuentaCosto'\n                            };\n                        },\n                        processResults: function processResults(data) {\n                            return {\n                                results: $.map(data.data.costos, function (item) {\n                                    return {\n                                        text: item.descripcion,\n                                        id: item.id_costo\n                                    };\n                                })\n                            };\n                        },\n                        error: function error(_error) {},\n                        cache: true\n                    },\n                    escapeMarkup: function escapeMarkup(markup) {\n                        return markup;\n                    }, // let our custom formatter work\n                    minimumInputLength: 1\n                }).on('select2:select', function () {\n                    $('#id_costo').val($('#costo_select option:selected').data().data.id);\n                });\n            }\n        }\n    },\n\n    computed: {\n        costos_ordenados: function costos_ordenados() {\n            return this.data.costos.sort(function (a, b) {\n                return a.nivel > b.nivel ? 1 : b.nivel > a.nivel ? -1 : 0;\n            });\n        }\n    },\n\n    methods: {\n        tr_class: function tr_class(costo) {\n            var treegrid = \"treegrid-\" + costo.id_costo;\n            var treegrid_parent = costo.id_padre != null && costo.id_costo != parseInt($('#id_costo').val()) ? \" treegrid-parent-\" + costo.id_padre : \"\";\n            return treegrid + treegrid_parent;\n        },\n\n        tr_id: function tr_id(costo) {\n            return costo.id_padre == null || costo.tiene_hijos > 0 ? \"tnode-\" + costo.id_costo : \"\";\n        },\n\n        get_hijos: function get_hijos(costo) {\n            var self = this;\n\n            $.ajax({\n                type: 'GET',\n                url: self.url_costo_get_by,\n                data: {\n                    attribute: 'nivel',\n                    operator: 'like',\n                    value: costo.nivel_hijos,\n                    with: 'cuentaCosto'\n                },\n                beforeSend: function beforeSend() {\n                    self.cargando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    data.data.costos.forEach(function (costo) {\n                        self.data.costos.push(costo);\n                    });\n                    costo.cargado = true;\n                },\n                complete: function complete() {\n                    self.cargando = false;\n                    setTimeout(function () {\n                        $('#tnode-' + costo.id_costo).treegrid('expand');\n                    }, 500);\n                }\n            });\n        },\n\n        edit_cuenta: function edit_cuenta(costo) {\n            this.form.costo_edit = costo;\n            Vue.set(this.form, 'costo', costo.descripcion);\n            Vue.set(this.form, 'id_costo', costo.id_costo);\n            if (costo.cuenta_costo != null) {\n                Vue.set(this.form, 'cuenta', costo.cuenta_costo.cuenta);\n                Vue.set(this.form, 'id_cuenta_costo', costo.cuenta_costo.id_cuenta_costo);\n            } else {\n                Vue.set(this.form, 'cuenta', '');\n                Vue.set(this.form, 'id_cuenta_costo', '');\n            }\n            this.validation_errors.clear('form_edit_cuenta');\n            $('#edit_cuenta_modal').modal('show');\n            $('#cuenta_contable').focus();\n            this.validation_errors.clear('form_edit_cuenta');\n        },\n\n        validateForm: function validateForm(scope, funcion) {\n            var _this = this;\n\n            this.$validator.validateAll(scope).then(function () {\n                if (funcion == 'confirm_save_cuenta') {\n                    _this.confirm_save_cuenta();\n                } else if (funcion == 'confirm_update_cuenta') {\n                    _this.confirm_update_cuenta();\n                }\n            }).catch(function () {\n                swal({\n                    type: 'warning',\n                    title: 'Advertencia',\n                    text: 'Por favor corrija los errores del formulario'\n                });\n            });\n        },\n\n        confirm_update_cuenta: function confirm_update_cuenta() {\n            var self = this;\n            swal({\n                title: \"Actualizar Cuenta Contable\",\n                text: \"¿Estás seguro de que la información es correcta?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.update_cuenta();\n            }).catch(swal.noop);\n        },\n\n        update_cuenta: function update_cuenta() {\n            var self = this;\n            var url = this.url_cuenta_costo_index + '/' + this.form.id_cuenta_costo;\n\n            $.ajax({\n                type: 'POST',\n                url: url,\n                data: {\n                    _method: 'PATCH',\n                    data: self.form\n                },\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    self.form.costo_edit.cuenta_costo = data.data.cuenta_costo;\n                    self.close_edit_cuenta();\n                    swal({\n                        type: 'success',\n                        title: 'Correcto',\n                        html: 'Cuenta Contable actualizada correctamente'\n                    });\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        },\n\n        confirm_save_cuenta: function confirm_save_cuenta() {\n            var self = this;\n            swal({\n                title: \"Registrar Cuenta Contable\",\n                text: \"¿Estás seguro de que la información es correcta?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.save_cuenta();\n            }).catch(swal.noop);\n        },\n\n        save_cuenta: function save_cuenta() {\n            var self = this;\n            var url = this.url_cuenta_costo_index;\n\n            $.ajax({\n                type: 'POST',\n                url: url,\n                data: {\n                    cuenta: self.form.cuenta,\n                    id_costo: self.form.id_costo\n                },\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    self.form.costo_edit.cuenta_costo = data.data.cuenta_costo;\n                    self.close_edit_cuenta();\n                    swal({\n                        type: 'success',\n                        title: 'Correcto',\n                        html: 'Cuenta Contable registrada correctamente'\n                    });\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        },\n        confirm_delete_cuenta: function confirm_delete_cuenta(id_cuenta_costo) {\n            var self = this;\n            swal({\n                title: \"Eliminar Cuenta Contable\",\n                text: \"¿Estás seguro que desea eliminar la cuenta contable?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.delete_cuenta(id_cuenta_costo);\n            }).catch(swal.noop);\n        },\n        delete_cuenta: function delete_cuenta(id_cuenta_costo) {\n            var self = this,\n                url = this.url_cuenta_costo_index + '/' + id_cuenta_costo;\n\n            $.ajax({\n                type: 'DELETE',\n                url: url,\n                data: {\n                    _method: 'DELETE'\n                },\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    self.data.costos.forEach(function (costo, i) {\n\n                        if (costo.cuenta_costo == null) {\n                            return;\n                        }\n\n                        if (id_cuenta_costo == costo.cuenta_costo.id_cuenta_costo) {\n                            Vue.set(costo, 'cuenta_costo', null);\n                            Vue.set(self.data.costos, i, costo);\n                            return;\n                        }\n                    });\n\n                    swal({\n                        type: 'success',\n                        title: 'Correcto',\n                        text: 'Cuenta Contable eliminada correctamente'\n                    });\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        },\n        close_edit_cuenta: function close_edit_cuenta() {\n            $('#edit_cuenta_modal').modal('hide');\n            Vue.set(this.form, 'cuenta', '');\n            Vue.set(this.form, 'costo', '');\n            Vue.set(this.form, 'id_cuenta_costo', '');\n            Vue.set(this.form, 'id_costo', '');\n        },\n\n        buscar_nodos: function buscar_nodos() {\n            var self = this;\n            var url = self.url_costo_find_by,\n                id_costo = $('#id_costo').val();\n\n            $.ajax({\n                type: 'GET',\n                url: url,\n                data: {\n                    attribute: 'id_costo',\n                    value: id_costo,\n                    with: 'cuentaCosto'\n                },\n                beforeSend: function beforeSend() {\n                    self.cargando = true;\n                },\n                success: function success(result) {\n                    self.data.costos = [];\n                    if (result.data.costo != null) {\n                        self.data.costos.push(result.data.costo);\n                    }\n                },\n                complete: function complete() {\n                    self.cargando = false;\n                }\n            });\n        }\n    }\n});\n\n},{}],15:[function(require,module,exports){\n'use strict';\n\nVue.component('cuenta-empresa-edit', {\n    props: ['empresa', 'tipo_cuenta_empresa', 'cuenta_store_url', 'datos_contables'],\n\n    data: function data() {\n        return {\n            'data': {\n                'empresa': this.empresa\n            },\n            'form': {\n                'cuenta_empresa': '',\n                'cuenta_empresa_create': {\n                    'id': '',\n                    'cuenta': '',\n                    'id_empresa': '',\n                    'id_tipo_cuenta_empresa': '',\n                    'tipo_cuenta_empresa': {\n                        'descripcion': ''\n                    }\n                }\n            },\n            'guardando': false,\n            'nuevo_registro': false\n        };\n    },\n    methods: {\n        close_modal: function close_modal(modal) {\n            $('#' + modal).modal('hide');\n            this.form.cuenta_empresa_create.cuenta = '';\n            this.form.cuenta_empresa_create.id_tipo_cuenta_empresa = '';\n            this.form.cuenta_empresa_create.tipo_cuenta_empresa.descripcion = '';\n            this.form.cuenta_empresa_create.id = '';\n            this.form.cuenta_empresa_create.id_empresa = '';\n        },\n        confirm_elimina_cuenta: function confirm_elimina_cuenta(cuenta) {\n            var self = this;\n            self.form.cuenta_empresa = cuenta;\n            self.form.cuenta_empresa.id_empresa = cuenta.id_empresa;\n            swal({\n                title: \"Eliminar Cuenta Contable\",\n                html: \"¿Estás seguro que desea eliminar la cuenta: <b> \" + cuenta.tipo_cuenta_empresa.descripcion + \"</b>?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n\n                self.elimina_cuenta();\n            }).catch(swal.noop);\n        },\n        confirm_cuenta_update: function confirm_cuenta_update() {\n            var self = this;\n            swal({\n                title: \"Actualizar Cuenta Contable\",\n                text: \"¿Estás seguro que desea actualizar la Cuenta Contable?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n\n                self.update_cuenta_empresa();\n            }).catch(swal.noop);\n        },\n        confirm_cuenta_create: function confirm_cuenta_create() {\n            var self = this;\n            swal({\n                title: \"Registrar Cuenta Contable\",\n                text: \"¿Estás seguro que desea registrar la Cuenta Contable?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.save_cuenta_empresa();\n            }).catch(swal.noop);\n        },\n        elimina_cuenta: function elimina_cuenta() {\n            var self = this;\n            var data = self.form.cuenta_empresa;\n            var url = App.host + '/sistema_contable/cuenta_empresa/' + self.form.cuenta_empresa.id;\n            $.ajax({\n                type: 'POST',\n                url: url,\n                data: {\n                    data: data,\n                    _method: 'DELETE'\n                },\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    Vue.set(self.data, 'empresa', data.data.empresa);\n                    $('#add_movimiento_modal').modal('hide');\n                    swal({\n                        type: 'success',\n                        title: 'Correcto',\n                        html: 'La cuenta: <b>' + self.form.cuenta_empresa.tipo_cuenta_empresa.descripcion + '</b> fue eliminada correctamente'\n                    });\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        },\n        create_cuenta_empresa: function create_cuenta_empresa() {\n            this.form.cuenta_empresa_create.cuenta = '';\n            this.form.cuenta_empresa_create.id_tipo_cuenta_empresa = '';\n            this.form.cuenta_empresa_create.id_empresa = this.data.empresa.id_empresa;\n            this.form.cuenta_empresa_create.tipo_cuenta_empresa.descripcion = '';\n            this.nuevo_registro = true;\n\n            this.validation_errors.clear('form_create_cuenta');\n            $('#add_movimiento_modal').modal('show');\n            this.validation_errors.clear('form_create_cuenta');\n        },\n        edit_cuenta_empresa: function edit_cuenta_empresa(cuenta) {\n            this.nuevo_registro = false;\n            this.form.cuenta_empresa_create.cuenta = cuenta.cuenta;\n            this.form.cuenta_empresa_create.id_tipo_cuenta_empresa = cuenta.id_tipo_cuenta_empresa;\n            this.form.cuenta_empresa_create.tipo_cuenta_empresa.descripcion = cuenta.tipo_cuenta_empresa.descripcion;\n            this.form.cuenta_empresa_create.id = cuenta.id;\n            this.form.cuenta_empresa_create.id_empresa = cuenta.id_empresa;\n\n            this.validation_errors.clear('form_update_cuenta');\n            $('#edit_movimiento_modal').modal('show');\n            this.validation_errors.clear('form_update_cuenta');\n        },\n        update_cuenta_empresa: function update_cuenta_empresa(cuenta) {\n            var self = this;\n            var data = self.form.cuenta_empresa_create;\n            var url = App.host + '/sistema_contable/cuenta_empresa/' + self.form.cuenta_empresa_create.id;\n            $.ajax({\n                type: 'POST',\n                url: url,\n                data: {\n                    data: data,\n                    _method: 'PATCH'\n                },\n                beforeSend: function beforeSend() {\n                    self.validation_errors.clear('form_update_cuenta');\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    Vue.set(self.data, 'empresa', data.data.empresa);\n                    $('#edit_movimiento_modal').modal('hide');\n                    swal({\n                        type: 'success',\n                        title: 'Correcto',\n                        html: 'La cuenta:' + self.form.cuenta_empresa_create.tipo_cuenta_empresa.descripcion + '</b> fue actualizada correctamente'\n                    });\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        },\n\n        save_cuenta_empresa: function save_cuenta_empresa() {\n            var self = this;\n            var url = self.cuenta_store_url;\n            var data = self.form.cuenta_empresa_create;\n            $.ajax({\n                type: 'POST',\n                url: url,\n                data: data,\n                beforeSend: function beforeSend() {\n                    self.validation_errors.clear('form_create_cuenta');\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    self.data.empresa.cuentas_empresa.push(data.data.cuenta_empresa);\n                    self.close_modal('add_movimiento_modal');\n                    swal({\n                        type: 'success',\n                        title: 'Correcto',\n                        html: 'La cuenta: <b>' + data.data.cuenta_empresa.tipo_cuenta_empresa.descripcion + '</b> fue registrada correctamente'\n                    });\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        },\n\n        validateForm: function validateForm(scope, funcion) {\n            var _this = this;\n\n            this.$validator.validateAll(scope).then(function () {\n                if (funcion == 'confirm_edit_cuenta') {\n                    _this.confirm_cuenta_update();\n                } else if (funcion == 'confirm_create_cuenta') {\n                    _this.confirm_cuenta_create();\n                }\n            }).catch(function () {\n                swal({\n                    type: 'warning',\n                    title: 'Advertencia',\n                    text: 'Por favor corrija los errores del formulario'\n                });\n            });\n        }\n    },\n\n    computed: {\n\n        cuentas_empresa_disponibles: function cuentas_empresa_disponibles() {\n\n            var self = this;\n            var result = {};\n            $.each(this.tipo_cuenta_empresa, function (index, tipo_cuenta_empresa) {\n                var existe = false;\n                self.data.empresa.cuentas_empresa.forEach(function (cuenta) {\n                    if (cuenta.id_tipo_cuenta_empresa == tipo_cuenta_empresa.id) {\n                        existe = true;\n                    }\n                });\n\n                if (!existe) {\n                    result[index] = tipo_cuenta_empresa;\n                }\n            });\n            return result;\n        }\n    }\n});\n\n},{}],16:[function(require,module,exports){\n'use strict';\n\nVue.component('cuenta-fondo-index', {\n    props: ['datos_contables', 'url_cuenta_fondo_store', 'fondos'],\n    data: function data() {\n        return {\n            'data': {\n                'fondos': this.fondos,\n                'fondo_edit': {}\n            },\n            'form': {\n                'cuenta_fondo': {\n                    'id': '',\n                    'id_fondo': '',\n                    'cuenta': ''\n                }\n            },\n            'guardando': false\n        };\n    },\n    methods: {\n        editar: function editar(fondo) {\n            this.data.fondo_edit = fondo;\n            Vue.set(this.form.cuenta_fondo, 'id_fondo', fondo.id_fondo);\n            if (fondo.cuenta_fondo != null) {\n                Vue.set(this.form.cuenta_fondo, 'cuenta', fondo.cuenta_fondo.cuenta);\n                Vue.set(this.form.cuenta_fondo, 'id', fondo.cuenta_fondo.id);\n            } else {\n                Vue.set(this.form.cuenta_fondo, 'cuenta', '');\n                Vue.set(this.form.cuenta_fondo, 'id', '');\n            }\n            this.validation_errors.clear('form_edit_cuenta');\n            $('#edit_cuenta_modal').modal('show');\n            $('#cuenta_contable').focus();\n            this.validation_errors.clear('form_edit_cuenta');\n        },\n        validateForm: function validateForm(scope, funcion) {\n            var _this = this;\n\n            this.$validator.validateAll(scope).then(function () {\n                if (funcion == 'confirm_save_cuenta') {\n                    _this.confirm_save_cuenta();\n                } else if (funcion == 'confirm_update_cuenta') {\n                    _this.confirm_update_cuenta();\n                }\n            }).catch(function () {\n                swal({\n                    type: 'warning',\n                    title: 'Advertencia',\n                    text: 'Por favor corrija los errores del formulario'\n                });\n            });\n        },\n        confirm_update_cuenta: function confirm_update_cuenta() {\n            var self = this;\n            swal({\n                title: \"Actualizar Cuenta Contable\",\n                text: \"¿Estás seguro de que la información es correcta?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.update_cuenta();\n            }).catch(swal.noop);\n        },\n\n        update_cuenta: function update_cuenta() {\n            var self = this;\n            var url = this.url_cuenta_fondo_store + '/' + this.form.cuenta_fondo.id;\n\n            $.ajax({\n                type: 'POST',\n                url: url,\n                data: {\n                    _method: 'PATCH',\n                    cuenta: self.form.cuenta_fondo.cuenta\n                },\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    self.data.fondo_edit.cuenta_fondo = data.data.cuenta_fondo;\n                    self.close_edit_cuenta();\n                    swal({\n                        type: 'success',\n                        title: 'Correcto',\n                        html: 'Cuenta Contable actualizada correctamente'\n                    });\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        },\n\n        confirm_save_cuenta: function confirm_save_cuenta() {\n            var self = this;\n            swal({\n                title: \"Registrar Cuenta Contable\",\n                text: \"¿Estás seguro de que la información es correcta?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.save_cuenta();\n            }).catch(swal.noop);\n        },\n\n        save_cuenta: function save_cuenta() {\n            var self = this;\n            var url = this.url_cuenta_fondo_store;\n\n            $.ajax({\n                type: 'POST',\n                url: url,\n                data: {\n                    cuenta: self.form.cuenta_fondo.cuenta,\n                    id_fondo: self.form.cuenta_fondo.id_fondo\n                },\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    self.data.fondo_edit.cuenta_fondo = data.data.cuenta_fondo;\n                    self.close_edit_cuenta();\n                    swal({\n                        type: 'success',\n                        title: 'Correcto',\n                        html: 'Cuenta Contable registrada correctamente'\n                    });\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        },\n        close_edit_cuenta: function close_edit_cuenta() {\n            $('#edit_cuenta_modal').modal('hide');\n            Vue.set(this.form.cuenta_fondo, 'cuenta', '');\n            Vue.set(this.form.cuenta_fondo, 'id', '');\n            Vue.set(this.form.cuenta_fondo, 'id_fondo', '');\n        }\n\n    }\n});\n\n},{}],17:[function(require,module,exports){\n'use strict';\n\nVue.component('cuenta-material-index', {\n    props: ['material_url', 'url_store_cuenta', 'datos_contables', 'tipos_cuenta_material'],\n    data: function data() {\n        return {\n            materiales: [],\n            form: {\n                id_tipo_cuenta_material: '',\n                tipo_material: '',\n                material_edit: {},\n                cuenta: '',\n                material: '',\n                id: '',\n\n                id_material: ''\n            },\n            cargando: false\n        };\n    },\n\n    directives: {\n        treegrid: {\n            inserted: function inserted(el) {\n                $(el).treegrid({\n                    saveState: true,\n                    initialState: 'collapsed'\n                });\n            },\n            componentUpdated: function componentUpdated(el) {\n                $(el).treegrid({\n                    saveState: true,\n                    initialState: 'collapsed'\n                });\n            }\n        },\n\n        select2: {\n            inserted: function inserted(el) {\n                $(el).select2({\n                    width: '100%'\n                });\n            }\n        }\n    },\n\n    computed: {\n        materiales_ordenados: function materiales_ordenados() {\n            return this.materiales.sort(function (a, b) {\n                return a.nivel > b.nivel ? 1 : b.nivel > a.nivel ? -1 : 0;\n            });\n        }\n    },\n\n    methods: {\n        fetch_materiales: function fetch_materiales() {\n            var self = this;\n            $.ajax({\n                type: 'GET',\n                url: self.material_url + '/getFamiliasByTipo',\n                data: {\n                    tipo_material: self.form.tipo_material\n                },\n                beforeSend: function beforeSend() {\n                    self.cargando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    self.materiales = data.data.materiales;\n                },\n                complete: function complete() {\n                    self.cargando = false;\n                }\n            });\n        },\n\n        tr_class: function tr_class(material) {\n            var treegrid = \"treegrid-\" + material.id_material;\n            var treegrid_parent = material.id_padre != null ? \" treegrid-parent-\" + material.id_padre : \"\";\n            return treegrid + treegrid_parent;\n        },\n\n        tr_id: function tr_id(material) {\n            return material.id_padre == null || material.tiene_hijos > 0 ? \"tnode-\" + material.id_material : \"\";\n        },\n\n        get_hijos: function get_hijos(material) {\n            var self = this;\n\n            $.ajax({\n                type: 'GET',\n                url: self.material_url + '/' + material.id_material + '/getHijos',\n                beforeSend: function beforeSend() {\n                    self.cargando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    data.data.materiales.forEach(function (material) {\n                        self.materiales.push(material);\n                    });\n                    material.cargado = true;\n                },\n                complete: function complete() {\n                    self.cargando = false;\n                    setTimeout(function () {\n                        $('#tnode-' + material.id_material).treegrid('expandRecursive');\n                    }, 500);\n                }\n            });\n        },\n\n        edit_cuenta: function edit_cuenta(material) {\n            this.form.material_edit = material;\n            Vue.set(this.form, 'material', material.descripcion);\n            Vue.set(this.form, 'id_material', material.id_material);\n            if (material.cuenta_material != null) {\n                Vue.set(this.form, 'cuenta', material.cuenta_material.cuenta);\n                Vue.set(this.form, 'id', material.cuenta_material.id);\n                Vue.set(this.form, 'id_tipo_cuenta_material', material.cuenta_material.id_tipo_cuenta_material);\n            } else {\n                Vue.set(this.form, 'cuenta', '');\n                Vue.set(this.form, 'id', '');\n                Vue.set(this.form, 'id_tipo_cuenta_material', '');\n            }\n            this.validation_errors.clear('form_edit_cuenta');\n            $('#edit_cuenta_modal').modal('show');\n            $('#cuenta_contable').focus();\n            this.validation_errors.clear('form_edit_cuenta');\n        },\n\n        validateForm: function validateForm(scope, funcion) {\n            var _this = this;\n\n            this.$validator.validateAll(scope).then(function () {\n                if (funcion == 'confirm_save_cuenta') {\n                    _this.confirm_save_cuenta();\n                } else if (funcion == 'confirm_update_cuenta') {\n                    _this.confirm_update_cuenta();\n                }\n            }).catch(function () {\n                swal({\n                    type: 'warning',\n                    title: 'Advertencia',\n                    text: 'Por favor corrija los errores del formulario'\n                });\n            });\n        },\n\n        confirm_update_cuenta: function confirm_update_cuenta() {\n            var self = this;\n            swal({\n                title: \"Actualizar Cuenta Contable\",\n                text: \"¿Estás seguro de que la información es correcta?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.update_cuenta();\n            }).catch(swal.noop);\n        },\n\n        update_cuenta: function update_cuenta() {\n            var self = this;\n            var url = this.url_store_cuenta + '/' + this.form.id;\n\n            $.ajax({\n                type: 'POST',\n                url: url,\n                data: {\n                    _method: 'PATCH',\n                    cuenta: self.form.cuenta,\n                    id_tipo_cuenta_material: self.form.id_tipo_cuenta_material\n                },\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    self.form.material_edit.cuenta_material = data.data.cuenta_material;\n                    self.close_edit_cuenta();\n                    swal({\n                        type: 'success',\n                        title: 'Correcto',\n                        html: 'Cuenta Contable actualizada correctamente'\n                    });\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        },\n\n        confirm_save_cuenta: function confirm_save_cuenta() {\n            var self = this;\n            swal({\n                title: \"Registrar Cuenta Contable\",\n                text: \"¿Estás seguro de que la información es correcta?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.save_cuenta();\n            }).catch(swal.noop);\n        },\n\n        save_cuenta: function save_cuenta() {\n            var self = this;\n            var url = this.url_store_cuenta;\n\n            $.ajax({\n                type: 'POST',\n                url: url,\n                data: {\n                    cuenta: self.form.cuenta,\n                    id_material: self.form.id_material,\n                    id_tipo_cuenta_material: self.form.id_tipo_cuenta_material\n                },\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    self.form.material_edit.cuenta_material = data.data.cuenta_material;\n                    self.close_edit_cuenta();\n                    swal({\n                        type: 'success',\n                        title: 'Correcto',\n                        html: 'Cuenta Contable registrada correctamente'\n                    });\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        },\n\n        close_edit_cuenta: function close_edit_cuenta() {\n            $('#edit_cuenta_modal').modal('hide');\n            Vue.set(this.form, 'cuenta', '');\n            Vue.set(this.form, 'material', '');\n            Vue.set(this.form, 'id', '');\n            Vue.set(this.form, 'id_tipo_cuenta_material', '');\n            Vue.set(this.form, 'id_material', '');\n        }\n    }\n});\n\n},{}],18:[function(require,module,exports){\n'use strict';\n\nVue.component('datos-contables-edit', {\n    props: ['datos_contables', 'datos_contables_update_url', 'referencia'],\n    data: function data() {\n        return {\n            'data': {\n                'datos_contables': this.datos_contables\n            },\n            'guardando': false\n        };\n    },\n    mounted: function mounted() {\n        var self = this;\n\n        // Iniciar evento al dar clic en un radio button\n        $('.checkboxes').on('ifClicked', function (e) {\n            var elem = $(this),\n                value = self.toBoolean(elem.data('value')),\n                name = elem.data('name'),\n                substring = \"si\";\n\n            var id = elem.attr('id');\n            var reference = name === 'manejo' ? 'manejo_almacenes' : 'costo_en_tipo_gasto';\n            var contraparte = \"#\" + (id.indexOf(substring) !== -1 ? name + \"_no\" : name + \"_si\");\n            var parent_elem = elem.parent();\n            var parent_contraparte = $(contraparte).parent();\n\n            parent_elem.addClass('iradio_line-green').removeClass('iradio_line-grey');\n            parent_contraparte.addClass('iradio_line-grey').removeClass('iradio_line-green');\n            elem.iCheck('check');\n            $(contraparte).iCheck('uncheck');\n            Vue.set(self.data.datos_contables, reference, value);\n        });\n\n        // Cambia el estilo a los elementos previamente seleccionados\n        $('.checkboxes').each(function (index) {\n            var elem = $(this);\n            var parent = elem.parent();\n\n            if (elem.is(':checked')) {\n                parent.addClass('iradio_line-green').removeClass('iradio_line-grey');console.log(parent);\n            }\n        });\n\n        $(\"label.control-label\").css({\n            'font-size': '1.5em'\n        });\n        $(\"div.box-body > .alert-danger\").css({\n            'font-size': '1.3em'\n        });\n        $(\"div.iradio_line-grey\").css({\n            'margin': '4px'\n        });\n    },\n    created: function created() {\n        // Convierte \"0\" y \"1\" en false y true respectivamente\n        Vue.set(this.data.datos_contables, 'manejo_almacenes', this.toBoolean(this.data.datos_contables.manejo_almacenes));\n        Vue.set(this.data.datos_contables, 'costo_en_tipo_gasto', this.toBoolean(this.data.datos_contables.costo_en_tipo_gasto));\n    },\n    directives: {\n        icheck: {\n            inserted: function inserted(el, binding, vnode) {\n                var elem = $(el),\n                    label = elem.next(),\n                    label_text = label.text(),\n                    vm = vnode.context;\n\n                label.remove();\n                elem.iCheck({\n                    checkboxClass: 'icheckbox_line-grey',\n                    radioClass: 'iradio_line-grey',\n                    insert: '<div class=\"icheck_line-icon\"></div>' + label_text\n                });\n            }\n        }\n    },\n    methods: {\n        confirm_datos_obra: function confirm_datos_obra() {\n            var self = this;\n            swal({\n                title: \"Guardar Datos Contables de la Obra\",\n                html: \"<div class=\\\"alert alert-danger\\\">\\n\" + \"  <strong>Atención</strong> Una vez guardados los datos no va a ser posible editarlos\" + \"</div>\" + \"<div class=\\\"alert alert-warning\\\">\\n\" + \"¿Estás seguro de que la información es correcta? \" + \"</div>\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.save_datos_obra();\n            }).catch(swal.noop);\n        },\n\n        save_datos_obra: function save_datos_obra() {\n            var self = this;\n            $.ajax({\n                type: 'POST',\n                url: self.datos_contables_update_url,\n                data: {\n                    BDContPaq: self.data.datos_contables.BDContPaq,\n                    FormatoCuenta: self.data.datos_contables.FormatoCuenta,\n                    NumobraContPaq: self.data.datos_contables.NumobraContPaq,\n                    costo_en_tipo_gasto: self.data.datos_contables.costo_en_tipo_gasto,\n                    manejo_almacenes: self.data.datos_contables.manejo_almacenes,\n                    _method: 'PATCH'\n                },\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    self.data.datos_contables = data.data.datos_contables;\n                    var costo_en_tipo_gasto = Vue.set(self.data.datos_contables, 'costo_en_tipo_gasto', data.data.datos_contables.costo_en_tipo_gasto == 'true' ? true : false);\n                    var manejo_almacenes = Vue.set(self.data.datos_contables, 'manejo_almacenes', data.data.datos_contables.manejo_almacenes == 'true' ? true : false);\n                    swal({\n                        type: 'success',\n                        title: 'Correcto',\n                        html: 'Datos Contables de la Obra actualizados correctamente'\n                    });\n\n                    self.referencia = \"1\";\n\n                    $('.checkboxes').each(function (index) {\n                        var elem = $(this);\n                        elem.iCheck('disable');\n                    });\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        },\n\n        validateForm: function validateForm(scope, funcion) {\n            var _this = this;\n\n            this.$validator.validateAll(scope).then(function () {\n                if (funcion == 'save_datos_obra') {\n                    _this.confirm_datos_obra();\n                }\n            }).catch(function () {\n                swal({\n                    type: 'warning',\n                    title: 'Advertencia',\n                    text: 'Por favor corrija los errores del formulario'\n                });\n            });\n        },\n        toBoolean: function toBoolean(sVar) {\n            return Boolean(Number(sVar));\n        },\n        checkBox: function checkBox(toCheck, bVar) {\n            toCheck = toCheck == null ? false : toCheck;\n\n            return toCheck === bVar;\n        },\n        editando: function editando() {\n            return this.toBoolean(this.referencia);\n        },\n        mostrar_mensaje: function mostrar_mensaje() {\n            return this.editando() ? 'Los datos no pueden ser modificados porque ya han sido guardados previamente' : 'Una vez guardados los datos no va a ser posible editarlos';\n        }\n    }\n});\n\n},{}],19:[function(require,module,exports){\n'use strict';\n\nVue.component('emails', {\n    props: ['user', 'emails', 'notificacion_url', 'db', 'id_obra'],\n    data: function data() {\n        return {\n            data: {\n                emails: this.emails\n            }\n        };\n    },\n\n    created: function created() {\n        var socket = io(App.socket_host);\n\n        socket.on('emails-channel:Ghi\\\\Events\\\\NewEmail', function (data) {\n            console.log(data);\n            if (data.email.id_usuario == this.user.idusuario && data.db == this.db && data.email.id_obra == this.id_obra) {\n                this.data.emails.push(data.email);\n                $.notify({\n                    // options\n                    icon: 'fa fa-envelope-o fa-2x ',\n                    title: data.email.titulo,\n                    message: new Date(data.email.created_at).dateFormat(),\n                    url: App.host + '/sistema_contable/notificacion/' + data.email.id\n                }, {\n                    // settings\n                    type: 'warning',\n                    newest_on_top: true,\n                    placement: {\n                        from: \"bottom\",\n                        align: \"right\"\n                    }\n                });\n            }\n        }.bind(this));\n    }\n});\n\n},{}],20:[function(require,module,exports){\n'use strict';\n\nVue.component('revaluacion-create', {\n    props: ['facturas', 'tipo_cambio', 'url_revaluacion'],\n    data: function data() {\n        return {\n            data: {\n                facturas: this.facturas\n            },\n            guardando: false\n        };\n    },\n    directives: {\n        icheck: {\n            inserted: function inserted(el) {\n                $(el).iCheck({\n                    checkboxClass: 'icheckbox_minimal-grey'\n                });\n            }\n        }\n    },\n    methods: {\n        confirm_save_facturas: function confirm_save_facturas() {\n            var self = this;\n            swal({\n                title: \"Guardar Revaluación\",\n                text: \"¿Estás seguro de que la información es correcta?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.save_facturas();\n            }).catch(swal.noop);\n        },\n        save_facturas: function save_facturas() {\n            var self = this;\n            var url = this.url_revaluacion;\n            var data = $('#form_facturas').serialize();\n            $.ajax({\n                type: 'POST',\n                url: url,\n                data: data,\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    swal({\n                        type: \"success\",\n                        title: '¡Correcto!',\n                        text: 'Revaluación guardada correctamente'\n                    });\n                    window.location = xhr.getResponseHeader('Location');\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        },\n        validateForm: function validateForm(scope, funcion) {\n            var _this = this;\n\n            this.$validator.validateAll(scope).then(function () {\n                if (funcion == 'confirm_save_facturas') {\n                    _this.confirm_save_facturas();\n                }\n            }).catch(function () {\n                swal({\n                    type: 'warning',\n                    title: 'Advertencia',\n                    text: 'Por favor corrija los errores del formulario'\n                });\n            });\n        }\n    }\n});\n\n},{}],21:[function(require,module,exports){\n'use strict';\n\nVue.component('poliza-generada-edit', {\n    props: ['poliza', 'poliza_edit', 'datos_contables', 'url_cuenta_contable_findby', 'url_poliza_generada_update', 'tipo_cuenta_contable', 'cuentas_contables', 'movimientos_cta'],\n    data: function data() {\n        return {\n            'data': {\n                'poliza': this.poliza,\n                'poliza_edit': this.poliza_edit,\n                'cuentas_contables': this.cuentas_contables,\n                'movimientos': this.movimientos_cta,\n                'empresa': ''\n            },\n            'form': {\n                'movimiento': {\n                    'id_int_poliza': this.poliza.id_int_poliza,\n                    'cuenta_contable': '',\n                    'id_tipo_movimiento_poliza': '',\n                    'importe': '',\n                    'referencia': '',\n                    'concepto': '',\n                    'id_tipo_cuenta_contable': ''\n                },\n                'movimiento_cuenta': {\n                    'id_int_poliza_movimiento': '',\n                    'cuenta': ''\n                }\n            },\n            'guardando': false\n        };\n    },\n\n    mounted: function mounted() {\n        var self = this;\n        $(\"#fecha\").datepicker().on(\"changeDate\", function () {\n            Vue.set(self.data.poliza_edit, 'fecha', $('#fecha').val());\n        });\n    },\n\n    directives: {\n        datepicker: {\n            inserted: function inserted(el) {\n                $(el).datepicker({\n                    autoclose: true,\n                    language: 'es',\n                    todayHighlight: true,\n                    clearBtn: true,\n                    format: 'yyyy-mm-dd'\n                });\n            }\n        }\n    },\n\n    computed: {\n        color: function color() {\n            if (this.data.poliza.cuadrado) {\n                return \"bg-gray\";\n            } else {\n                return \"bg-red\";\n            }\n        },\n\n        cambio: function cambio() {\n            return JSON.stringify(this.data.poliza) !== JSON.stringify(this.data.poliza_edit);\n        },\n\n        suma_haber: function suma_haber() {\n            var suma_haber = 0;\n            this.data.poliza_edit.poliza_movimientos.forEach(function (movimiento) {\n                if (movimiento.id_tipo_movimiento_poliza == 2) {\n                    suma_haber += parseFloat(movimiento.importe);\n                }\n            });\n            return parseFloat(Math.round(suma_haber * 100) / 100).toFixed(2);\n        },\n\n        suma_debe: function suma_debe() {\n            var suma_debe = 0;\n            this.data.poliza_edit.poliza_movimientos.forEach(function (movimiento) {\n                if (movimiento.id_tipo_movimiento_poliza == 1) {\n                    suma_debe += parseFloat(movimiento.importe);\n                }\n            });\n            return (Math.round(suma_debe * 100) / 100).toFixed(2);\n        }\n    },\n\n    methods: {\n\n        obtener_numero_cuenta: function obtener_numero_cuenta(idTipoCuenta) {\n            var self = this;\n            this.data.cuentas_contables.forEach(function (cuenta) {\n                if (cuenta.id_int_tipo_cuenta_contable == idTipoCuenta) {\n                    self.form.movimiento.cuenta_contable = cuenta.cuenta_contable;\n                }\n            });\n            if (self.form.movimiento.cuenta_contable == 'NULL') {\n                self.form.movimiento.cuenta_contable = '';\n            }\n        },\n\n        show_add_movimiento: function show_add_movimiento() {\n            this.validation_errors.clear('form_add_movimiento');\n            $('#add_movimiento_modal').modal('show');\n            this.validation_errors.clear('form_add_movimiento');\n        },\n\n        validateForm: function validateForm(scope, funcion) {\n            var _this = this;\n\n            this.$validator.validateAll(scope).then(function () {\n                if (funcion == 'confirm_add_movimiento') {\n                    _this.confirm_add_movimiento();\n                } else if (funcion == 'confirm_save') {\n                    _this.confirm_save();\n                } else if (funcion == 'confirm_save_cuenta') {\n                    _this.confirm_save_cuenta();\n                }\n            }).catch(function () {\n                swal({\n                    type: 'warning',\n                    title: 'Advertencia',\n                    text: 'Por favor corrija los errores del formulario'\n                });\n            });\n        },\n\n        close_add_movimiento: function close_add_movimiento() {\n            $('#add_movimiento_modal').modal('hide');\n            this.form.movimiento = {\n                'id_int_poliza': this.poliza.id_int_poliza,\n                'cuenta_contable': '',\n                'id_tipo_movimiento_poliza': '',\n                'importe': ''\n            };\n        },\n\n        confirm_add_movimiento: function confirm_add_movimiento() {\n            var self = this;\n            swal({\n                title: \"Agregar Movimiento\",\n                text: \"¿Estás seguro de que la información es correcta?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.add_movimiento();\n            }).catch(swal.noop);\n        },\n\n        add_movimiento: function add_movimiento() {\n            var self = this;\n            var url = this.url_cuenta_contable_findby;\n\n            $.ajax({\n                type: 'GET',\n                url: url,\n                data: {\n                    attribute: 'cuenta_contable',\n                    value: self.form.movimiento.cuenta_contable,\n                    with: 'tipoCuentaContable'\n                },\n                success: function success(data, textStatus, xhr) {\n                    if (data.data.cuenta_contable) {\n                        self.form.movimiento.id_tipo_cuenta_contable = data.data.cuenta_contable.id_int_tipo_cuenta_contable;\n                        self.form.movimiento.id_cuenta_contable = data.data.cuenta_contable.id_int_cuenta_contable;\n                        self.form.movimiento.descripcion_cuenta_contable = data.data.cuenta_contable.tipo_cuenta_contable.descripcion;\n                    }\n                },\n                complete: function complete() {\n\n                    self.data.poliza_edit.poliza_movimientos.push(self.form.movimiento);\n                    self.close_add_movimiento();\n                }\n            });\n        },\n\n        confirm_remove_movimiento: function confirm_remove_movimiento(index) {\n            var self = this;\n            swal({\n                title: \"Quitar Movimiento\",\n                text: \"¿Estás seguro de que deseas quitar el movimiento de la Prepóliza?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.remove_movimiento(index);\n            }).catch(swal.noop);\n        },\n\n        remove_movimiento: function remove_movimiento(index) {\n            Vue.delete(this.data.poliza_edit.poliza_movimientos, index);\n        },\n\n        confirm_save: function confirm_save() {\n            var self = this;\n            swal({\n                title: \"Guardar Cambios de la Prepóliza\",\n                text: \"¿Estás seguro de que la información es correcta?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.save();\n            }).catch(swal.noop);\n        },\n        confirm_save_cuenta: function confirm_save_cuenta() {\n            var self = this;\n            swal({\n                title: \"Guardar Cambios de las cuentas faltantes\",\n                text: \"¿Estás seguro de que la información es correcta?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.save_cuenta();\n            }).catch(swal.noop);\n        },\n\n        save: function save() {\n            var self = this;\n\n            Vue.set(this.data.poliza_edit, 'suma_haber', this.suma_haber);\n            Vue.set(this.data.poliza_edit, 'suma_debe', this.suma_debe);\n\n            $.ajax({\n                type: 'POST',\n                url: self.url_poliza_generada_update,\n                data: {\n                    _method: 'PATCH',\n                    poliza_generada: self.data.poliza_edit\n                },\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    swal({\n                        title: '¡Correcto!',\n                        html: 'Prepóliza  <b>' + self.data.poliza_edit.transaccion_interfaz.descripcion + '</b> actualizada correctamente',\n                        type: 'success',\n                        confirmButtonText: \"Ok\",\n                        closeOnConfirm: false\n                    }).catch(swal.noop);\n                    window.location = xhr.getResponseHeader('Location');\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        },\n\n        ingresarCuenta: function ingresarCuenta(idPoliza) {\n            var self = this;\n            $.ajax({\n                type: 'GET',\n                url: App.host + \"/sistema_contable/poliza_movimientos/\" + idPoliza,\n                data: {\n                    id_poliza: idPoliza\n                },\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    if (self.data.movimientos.length > 0) {\n                        self.data.empresa = self.data.movimientos[0].empresa_cadeco;\n                        $('#add_cuenta_modal').modal('show');\n                    } else {\n                        swal({\n                            title: \"¡Información!\",\n                            text: \"Las cuentas están completas.\",\n                            type: \"info\",\n                            confirmButtonText: \"Aceptar\"\n                        });\n                    }\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        },\n        save_cuenta: function save_cuenta() {\n            var self = this;\n            $.ajax({\n                type: 'POST',\n                url: App.host + \"/sistema_contable/poliza_movimientos/\" + self.data.poliza.id_int_poliza,\n                data: {\n                    _method: 'PATCH',\n                    data: self.data.movimientos,\n                    validar: true\n                },\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    if (data.data.cambio) {\n                        var datos = \"\";\n                        for (var i = 0; i < data.data.cambio.length; i++) {\n                            data.data.cambio[i];\n                            datos += \"<tr><td>\" + data.data.cambio[i].tipo_cuenta_empresa.descripcion + \"</td>\";\n                            datos += \"<td>\" + data.data.cambio[i].cuenta + \"</td>\";\n                            datos += \"<td>\" + data.data.cambio[i].nuevo + \"</td></tr>\";\n                        }\n                        swal({\n                            title: \"Advertencia\",\n                            html: \"El numero de cuenta que trata de ingresar no corresponde al actual\" + \"<table class='table table-striped small'>\" + \"   <thead>\" + \"   <tr>\" + \"       <th style='text-align: center'>Tipo de Cuenta Contable</th>\" + \"       <th style='text-align: center'>Actual</th>\" + \"       <th style='text-align: center'>Nuevo</th>\" + \"   </tr>\" + \"   </thead>\" + \"   <tbody>\" + datos + \"   </tbody>\" + \"</table>\" + \"<b>¿Deseas reemplazar la cuenta contable?</b><br>\",\n                            type: \"warning\",\n                            showCancelButton: true,\n                            cancelButtonText: 'No, Cancelar',\n                            confirmButtonText: 'Si, Continuar'\n                        }).then(function () {\n\n                            $.ajax({\n                                type: 'POST',\n                                url: App.host + \"/sistema_contable/poliza_movimientos/\" + self.data.poliza.id_int_poliza,\n                                data: {\n                                    _method: 'PATCH',\n                                    data: self.data.movimientos,\n                                    validar: false\n                                },\n                                beforeSend: function beforeSend() {\n                                    self.guardando = true;\n                                },\n                                success: function success(data, textStatus, xhr) {\n                                    self.data.poliza = data.data.poliza;\n                                    swal({\n                                        title: '¡Correcto!',\n                                        html: 'Las cuentas se configurarón exitosamente',\n                                        type: 'success',\n                                        confirmButtonText: \"Ok\",\n                                        closeOnConfirm: false\n                                    }).then(function () {}).catch(swal.noop);\n                                    window.location.reload(true);\n                                    $('#add_cuenta_modal').modal('hide');\n                                },\n                                complete: function complete() {\n                                    self.guardando = false;\n                                }\n                            });\n                        }).catch(swal.noop);\n                    } else {\n\n                        swal({\n                            title: '¡Correcto!',\n                            html: 'Las cuentas se configurarón exitosamente',\n                            type: 'success',\n                            confirmButtonText: \"Ok\",\n                            closeOnConfirm: false\n                        }).then(function () {}).catch(swal.noop);\n                        $('#add_cuenta_modal').modal('hide');\n                        window.location.reload(true);\n                    }\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        },\n\n        close_cuenta_modal: function close_cuenta_modal() {\n            $('#add_cuenta_modal').modal('hide');\n        }\n    }\n});\n\n},{}],22:[function(require,module,exports){\n'use strict';\n\nVue.component('poliza-tipo-create', {\n    props: ['tipos_cuentas_contables', 'tipos_movimiento', 'polizas_tipo_sao'],\n    data: function data() {\n        return {\n            'form': {\n                'poliza_tipo': {\n                    'id_poliza_tipo_sao': '',\n                    'movimientos': [],\n                    'inicio_vigencia': ''\n                },\n                'movimiento': {\n                    'id_tipo_cuenta_contable': '',\n                    'id_tipo_movimiento': ''\n                },\n                'errors': []\n            },\n            'guardando': false\n        };\n    },\n\n    mounted: function mounted() {\n        var self = this;\n        $(\"#inicio_vigencia\").datepicker().on(\"changeDate\", function () {\n            Vue.set(self.form.poliza_tipo, 'inicio_vigencia', $('#inicio_vigencia').val());\n        });\n    },\n\n    computed: {\n        check_movimientos: function check_movimientos() {\n            var a = false;\n            var b = false;\n            this.form.poliza_tipo.movimientos.forEach(function (movimiento) {\n                if (movimiento.id_tipo_movimiento == '1') {\n                    a = true;\n                } else if (movimiento.id_tipo_movimiento == '2') {\n                    b = true;\n                }\n            });\n\n            return a && b;\n        },\n\n        tipos_cuentas_contables_disponibles: function tipos_cuentas_contables_disponibles() {\n            return this.tipos_cuentas_contables;\n        }\n    },\n\n    directives: {\n        datepicker: {\n            inserted: function inserted(el) {\n                $(el).datepicker({\n                    autoclose: true,\n                    language: 'es',\n                    todayHighlight: true,\n                    clearBtn: true,\n                    format: 'yyyy-mm-dd'\n                });\n            }\n        }\n    },\n\n    methods: {\n        show_add_movimiento: function show_add_movimiento() {\n            this.validation_errors.clear('form_save_cuenta');\n            $('#modal-add-movimiento').modal('show');\n            this.validation_errors.clear('form_save_cuenta');\n        },\n\n        close_add_movimiento: function close_add_movimiento() {\n            $('#modal-add-movimiento').modal('hide');\n            this.reset_movimiento();\n        },\n\n        add_movimiento: function add_movimiento() {\n            var id_tipo_cuenta_contable = $('#id_tipo_cuenta_contable').val();\n            var id_tipo_movimiento = $('#id_tipo_movimiento').val();\n\n            this.form.poliza_tipo.movimientos.push({\n                id_tipo_cuenta_contable: id_tipo_cuenta_contable,\n                id_tipo_movimiento: id_tipo_movimiento\n            });\n            this.reset_movimiento();\n            this.validation_errors.clear('form_save_cuenta');\n            $('#modal-add-movimiento').modal('hide');\n            this.validation_errors.clear('form_save_cuenta');\n        },\n\n        reset_movimiento: function reset_movimiento() {\n            Vue.set(this.form.movimiento, 'id_tipo_cuenta_contable', '');\n            Vue.set(this.form.movimiento, 'id_tipo_movimiento', '');\n        },\n\n        check_duplicity: function check_duplicity() {\n            var self = this;\n            var id = self.form.poliza_tipo.id_poliza_tipo_sao;\n            var url = App.host + '/sistema_contable/poliza_tipo/findBy';\n            $.ajax({\n                type: 'GET',\n                url: url,\n                data: {\n                    'attribute': 'id_poliza_tipo_sao',\n                    'value': id,\n                    'with': 'movimientos'\n                },\n                success: function success(response) {\n                    if (response.data.poliza_tipo != null) {\n                        var body = \"\";\n                        $.each(response.data.poliza_tipo.movimientos, function (index, movimiento) {\n                            body += \"<tr><td>\" + (index + 1) + \"</td><td style='text-align: left'>\" + self.getTipoCuentaDescription(movimiento.id_tipo_cuenta_contable) + \"</td><td>\" + self.tipos_movimiento[movimiento.id_tipo_movimiento] + \"</td></tr>\";\n                        });\n\n                        swal({\n                            title: \"Advertencia\",\n                            html: \"Ya existe una Plantilla para el tipo de Póliza seleccionado con un estado <b>\" + response.data.poliza_tipo.vigencia + \"</b><br>\" + \"Con un inicio de vigencia el día <b>\" + response.data.poliza_tipo.inicio_vigencia.split(\" \")[0] + \"</b><br><br>\" + \"<table class='table table-striped small'>\" + \"   <thead>\" + \"   <tr>\" + \"       <th style='text-align: center'>#</th>\" + \"       <th style='text-align: center'>Tipo de Cuenta Contable</th>\" + \"       <th style='text-align: center'>Tipo</th>\" + \"   </tr>\" + \"   </thead>\" + \"   <tbody>\" + body + \"   </tbody>\" + \"</table>\" + \"<b>¿Deseas continuar con el registro?</b><br>\" + \"<small><small>(Se establecerá el fin de vigencia para la plantilla existente)</small></small>\",\n                            type: \"warning\",\n                            showCancelButton: true,\n                            cancelButtonText: 'No, Cancelar',\n                            confirmButtonText: 'Si, Continuar'\n\n                        }).then(function () {\n                            self.confirm_save();\n                        }).catch(swal.noop);\n                    } else {\n                        self.confirm_save();\n                    }\n                }\n            });\n        },\n\n        confirm_save: function confirm_save() {\n            var self = this;\n            swal({\n                title: \"Guardar Plantilla\",\n                text: \"¿Estás seguro de que la información es correcta?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.save();\n            }).catch(swal.noop);\n        },\n\n        save: function save() {\n            var self = this;\n            var url = App.host + '/sistema_contable/poliza_tipo';\n            var data = self.form.poliza_tipo;\n\n            $.ajax({\n                type: 'POST',\n                url: url,\n                data: data,\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    swal({\n                        title: '¡Correcto!',\n                        html: \"Se ha creado la plantilla para el Tipo de Póliza<br>\" + \"<b>\" + self.polizas_tipo_sao[self.form.poliza_tipo.id_poliza_tipo_sao] + \"</b>\",\n                        type: \"success\"\n                    });\n                    window.location = xhr.getResponseHeader('Location');\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        },\n\n        remove_movimiento: function remove_movimiento(e) {\n            Vue.delete(this.form.poliza_tipo.movimientos, e);\n        },\n\n        getTipoCuentaDescription: function getTipoCuentaDescription(id) {\n            var result = \"\";\n            $.each(this.tipos_cuentas_contables, function (index, tipo_cuenta_contable) {\n                if (tipo_cuenta_contable.id_tipo_cuenta_contable == id) {\n                    result = tipo_cuenta_contable.descripcion;\n                }\n            });\n            return result;\n        },\n\n        validateForm: function validateForm(scope, funcion) {\n            var _this = this;\n\n            this.$validator.validateAll(scope).then(function () {\n                if (funcion == 'save_cuenta') {\n                    _this.add_movimiento();\n                } else if (funcion == 'save') {\n                    _this.check_duplicity();\n                }\n            }).catch(function () {\n                swal({\n                    type: 'warning',\n                    title: 'Advertencia',\n                    text: 'Por favor corrija los errores del formulario'\n                });\n            });\n        }\n    }\n});\n\n},{}],23:[function(require,module,exports){\n'use strict';\n\n/**\r\n * Created by LERDES2 on 23/06/2017.\r\n */\n\nVue.component('tipo-cuenta-contable-create', {\n    data: function data() {\n        return {\n            'form': {\n                'tipo_cuenta_contable': {\n                    'descripcion': '',\n                    'id_naturaleza_poliza': ''\n                }\n            },\n            'guardando': false\n        };\n    },\n\n    methods: {\n        confirm_save: function confirm_save() {\n            var self = this;\n            swal({\n                title: \"Guardar Tipo Cuenta Contable\",\n                text: \"¿Estás seguro de que la información es correcta?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.save();\n            }).catch(swal.noop);\n        },\n\n        save: function save() {\n\n            var self = this;\n            var url = App.host + '/sistema_contable/tipo_cuenta_contable';\n            var data = self.form.tipo_cuenta_contable;\n\n            $.ajax({\n                type: 'POST',\n                url: url,\n                data: data,\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    swal({\n                        title: '¡Correcto!',\n                        html: \"Se ha creado el Tipo de Cuenta Contable con éxito\",\n                        type: \"success\",\n                        confirmButtonText: \"Ok\",\n                        closeOnConfirm: false\n                    }).then(function () {\n                        window.location = xhr.getResponseHeader('Location');\n                    }).catch(swal.noop);\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        }\n    }\n\n});\n\n},{}],24:[function(require,module,exports){\n'use strict';\n\n/**\r\n * Created by LERDES2 on 23/06/2017.\r\n */\n\nVue.component('tipo-cuenta-contable-update', {\n    props: ['tipo_cuenta_contable'],\n    data: function data() {\n        return {\n            'form': {\n                'tipo_cuenta_contable': {\n                    'id_tipo_cuenta_contable': this.tipo_cuenta_contable.id_tipo_cuenta_contable,\n                    'descripcion': this.tipo_cuenta_contable.descripcion,\n                    'id_naturaleza_poliza': this.tipo_cuenta_contable.id_naturaleza_poliza\n                }\n            },\n            'guardando': false\n        };\n    },\n\n    methods: {\n        confirm_save: function confirm_save() {\n            var self = this;\n            swal({\n                title: \"Actualizar Tipo Cuenta Contable\",\n                text: \"¿Estás seguro de que la información es correcta?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.save();\n            }).catch(swal.noop);\n        },\n\n        save: function save() {\n\n            var self = this;\n            var url = App.host + '/sistema_contable/tipo_cuenta_contable/' + self.form.tipo_cuenta_contable.id_tipo_cuenta_contable;\n\n            $.ajax({\n                type: 'POST',\n                url: url,\n                data: {\n                    _method: 'PATCH',\n                    id_naturaleza_poliza: self.form.tipo_cuenta_contable.id_naturaleza_poliza\n                },\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    swal({\n                        title: '¡Correcto!',\n                        html: \"Se ha actualizado el Tipo de Cuenta Contable con éxito\",\n                        type: \"success\",\n                        confirmButtonText: \"Ok\",\n                        closeOnConfirm: false\n                    }).then(function () {\n                        window.location = App.host + '/sistema_contable/tipo_cuenta_contable/' + data.data.tipo_cuenta_contable.id_tipo_cuenta_contable;\n                    }).catch(swal.noop);\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        }\n    }\n\n});\n\n},{}],25:[function(require,module,exports){\n'use strict';\n\nVue.component('reclasificacion_costos-index', {\n    data: function data() {\n        return {\n            'solicitudes': [],\n            'partidas': [],\n            'guardando': false,\n            'editando': false,\n            'item': { 'id': 0, 'created_at': '', 'estatus_desc': '' },\n            'rechazando': false,\n            'rechazo_motivo': '',\n            'dataTable': false,\n            'show_pdf': false\n        };\n    },\n    computed: {},\n    mounted: function mounted() {\n        var self = this;\n\n        $(document).on('click', '.btn_abrir', function () {\n            var _this = $(this),\n                partidas = _this.data('row').partidas,\n                editando = !!parseInt(_this.data('editando')),\n                item = _this.data('row');\n\n            item.estatus_desc = item.estatus.descripcion;\n            self.partidas = partidas;\n            self.item = item;\n\n            if (editando) {\n                self.editando = _this.data('row');\n            }\n\n            $('#solicitud_detalles_modal').modal('show');\n        });\n\n        self.dataTable = $('#solicitudes_table').DataTable({\n            \"processing\": true,\n            \"serverSide\": true,\n            \"ordering\": false,\n            \"searching\": false,\n            \"ajax\": {\n                \"url\": App.host + '/control_costos/solicitudes_reclasificacion/paginate',\n                \"type\": \"GET\",\n                \"beforeSend\": function beforeSend() {\n                    self.guardando = true;\n                },\n                \"complete\": function complete() {\n                    self.guardando = false;\n                },\n                \"dataSrc\": function dataSrc(json) {\n                    self.solicitudes = json.data;\n                    return json.data;\n                }\n            },\n            \"columns\": [{\n                data: {},\n                render: function render(data, type, row, meta) {\n                    return meta.row + 1;\n                }\n            }, {\n                data: 'id',\n                render: function render(data, type, row) {\n                    return '#' + row.id;\n                }\n            }, {\n                data: 'fecha',\n                render: function render(data, type, row) {\n                    return new Date(row.created_at).dateShortFormat();\n                }\n            }, { data: 'motivo' }, {\n                data: 'estatusString',\n                render: function render(data, type, row) {\n                    var _estatus = '';\n\n                    if (row.estatus_string.estatus == 2) _estatus = '<span class=\"label bg-green\">' + row.estatus_string.descripcion + '</span> ';else if (row.estatus_string.estatus == -1) _estatus = '<span class=\"label bg-red\">' + row.estatus_string.descripcion + '</span> ';else _estatus = '<span class=\"label bg-blue\">' + row.estatus_string.descripcion + '</span> ';\n\n                    return _estatus;\n                }\n            }, {\n                data: 'acciones',\n                render: function render(data, type, row) {\n                    var _return = \"<button type='button' title='Ver' class='btn btn-xs btn-success btn_abrir' data-row='\" + JSON.stringify(row) + \"' data-editando='0'><i class='fa fa-eye'></i></button>\";\n\n                    // Muestra el botón de editar si la solicitud aún no está autorizada/rechazada\n                    if (row.estatus_string.id == 1) {\n                        _return = _return + \" <button type='button' title='Editar' class='btn btn-xs btn-info btn_abrir' data-row='\" + JSON.stringify(row) + \"' data-editando='1'><i class='fa fa-pencil'></i></button>\";\n                    }\n\n                    return _return;\n                }\n            }],\n            language: {\n                \"sProcessing\": \"Procesando...\",\n                \"sLengthMenu\": \"Mostrar _MENU_ registros\",\n                \"sZeroRecords\": \"No se encontraron resultados\",\n                \"sEmptyTable\": \"Ningún dato disponible en esta tabla\",\n                \"sInfo\": \"Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros\",\n                \"sInfoEmpty\": \"Mostrando registros del 0 al 0 de un total de 0 registros\",\n                \"sInfoFiltered\": \"(filtrado de un total de _MAX_ registros)\",\n                \"sInfoPostFix\": \"\",\n                \"sSearch\": \"Buscar:\",\n                \"sUrl\": \"\",\n                \"sInfoThousands\": \",\",\n                \"sLoadingRecords\": \"Cargando...\",\n                \"oPaginate\": {\n                    \"sFirst\": \"Primero\",\n                    \"sLast\": \"Último\",\n                    \"sNext\": \"Siguiente\",\n                    \"sPrevious\": \"Anterior\"\n                },\n                \"oAria\": {\n                    \"sSortAscending\": \": Activar para ordenar la columna de manera ascendente\",\n                    \"sSortDescending\": \": Activar para ordenar la columna de manera descendente\"\n                }\n            }\n        });\n    },\n    directives: {},\n    methods: {\n        close_modal_detalles: function close_modal_detalles() {\n            var self = this;\n\n            $('#solicitud_detalles_modal').modal('hide');\n\n            // reset partidas\n            self.partidas = [];\n            self.editando = false;\n            self.rechazando = false;\n            self.rechazo_motivo = '';\n            self.show_pdf = false;\n        },\n        confirm: function confirm(tipo) {\n            var self = this;\n\n            // Manda error si no hay una solicitud para aprobar/rechazar\n            if (self.editando.length > 0) return swal({\n                type: 'warning',\n                title: 'Error',\n                text: 'La solicitud está vacía'\n            });\n\n            // Al rechazar debe de haber un motivo\n            if (tipo == 'rechazar' && self.rechazo_motivo == '') return swal({\n                type: 'warning',\n                title: 'Error',\n                text: 'Debes de especificar un motivo para rechazar'\n            });\n\n            swal({\n                title: tipo.mayusculaPrimerLetra(),\n                text: \"¿Estás seguro/a de que deseas \" + tipo + \" esta solicitud?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                if (tipo == \"aprobar\") {\n                    self.aprobar();\n                } else if (tipo == \"rechazar\") {\n                    self.rechazar();\n                }\n            }).catch(swal.noop);\n        },\n        aprobar: function aprobar() {\n            var self = this,\n                str = { 'data': JSON.stringify(self.editando), 'tipo': 'aprobar' };\n\n            $.ajax({\n                type: 'POST',\n                url: App.host + '/control_costos/solicitudes_reclasificacion/store',\n                data: str,\n                beforeSend: function beforeSend() {},\n                success: function success(data, textStatus, xhr) {\n\n                    if (data.resultado) swal({\n                        type: 'success',\n                        title: '',\n                        html: 'La solicitud fué autorizada'\n                    });else swal({\n                        type: 'warning',\n                        title: '',\n                        html: 'La operación no pudo concretarse'\n                    });\n\n                    self.close_modal_detalles();\n                },\n                complete: function complete() {}\n            });\n\n            self.close_modal_detalles();\n            self.dataTable.ajax.reload();\n        },\n        rechazar: function rechazar() {\n            var self = this,\n                str = { 'data': JSON.stringify(self.editando), 'tipo': 'rechazar', 'motivo': self.rechazo_motivo };\n\n            $.ajax({\n                type: 'POST',\n                url: App.host + '/control_costos/solicitudes_reclasificacion/store',\n                data: str,\n                beforeSend: function beforeSend() {},\n                success: function success(data, textStatus, xhr) {\n\n                    swal({\n                        type: 'success',\n                        title: '',\n                        html: 'La solicitud fué rechazada'\n                    });\n                },\n                complete: function complete() {}\n            });\n\n            self.close_modal_detalles();\n            self.dataTable.ajax.reload();\n        },\n        rechazar_motivo: function rechazar_motivo() {\n\n            var self = this;\n\n            self.rechazando = true;\n        },\n        cancelar_rechazo: function cancelar_rechazo() {\n            var self = this;\n\n            self.rechazando = false;\n            self.rechazo_motivo = '';\n        },\n        pdf: function pdf(id) {\n            var self = this,\n                url = App.host + '/control_costos/solicitudes_reclasificacion/generarpdf?item=' + id;\n\n            self.show_pdf = url;\n        }\n    }\n});\n\n},{}],26:[function(require,module,exports){\n'use strict';\n\nVue.component('solicitar_reclasificacion-index', {\n    props: ['url_solicitar_reclasificacion_index', 'max_niveles', 'filtros', 'operadores'],\n    data: function data() {\n        return {\n            'data': {\n                'condicionante': '',\n                'temp_filtro': '',\n                'filtros': this.filtros,\n                'operadores': this.operadores,\n                'agrega': {\n                    'nivel': '',\n                    'operador': '',\n                    'texto': ''\n                },\n                'resultados': [],\n                'resumen': [],\n                'detalles': [],\n                'desglosar_descripcion': '',\n                'subtotal': 0,\n                'subimporte': 0,\n                'total_resultados': 0,\n                'desglosar': [],\n                'loading': false\n            }\n        };\n    },\n    computed: {\n        niveles: function niveles() {\n            var self = this,\n                niveles = [],\n                paso = 1;\n\n            for (paso; paso <= self.max_niveles; paso++) {\n                niveles.push({ numero: paso, nombre: \"Nivel \" + paso });\n            }\n\n            return niveles;\n        },\n        niveles_n: function niveles_n() {\n            var result = 0;\n            this.data.resultados.forEach(function (t) {\n                var cont = Object.keys(t).filter(function (t2) {\n                    return t[t2] != null;\n                });\n                if (cont.length - 3 > result) {\n                    result = cont.length - 3;\n                }\n            });\n\n            return result;\n        }\n    },\n    methods: {\n        agregar_filtro: function agregar_filtro() {\n            var self = this,\n                vacios = [],\n                temp = [];\n\n            // Los campos  no puedene star vacios\n            $.each(self.data.agrega, function (index, value) {\n                if (value === \"\") {\n                    vacios.push(index);\n                }\n            });\n\n            // Manda error si están vacios\n            if (vacios.length > 0) {\n                return swal({\n                    type: 'warning',\n                    title: 'Los siguientes campos no pueden estar vacios:',\n                    html: '<ul class=\"list-group\"><li class=\"list-group-item list-group-item-danger\">' + vacios.join(\"<li class=\\\"list-group-item list-group-item-danger\\\">\") + '</ul>'\n                });\n            }\n\n            if (self.data.condicionante.length > 0) {\n                temp = self.data.temp_filtro;\n                self.data.temp_filtro.condicionante = self.data.condicionante;\n                Vue.set(self.data.filtros, self.data.filtros.indexOf(temp), self.data.temp_filtro);\n            }\n\n            self.filtros.push(self.data.agrega);\n\n            self.close_modal_agregar();\n        },\n        eliminar_filtro: function eliminar_filtro(index) {\n            var self = this,\n                anterior_index = index - 1,\n                anterior = self.data.filtros[anterior_index];\n\n            if (anterior_index >= 0 && anterior.condicionante != null) {\n                var anterior = self.data.filtros[anterior_index];\n\n                delete anterior.condicionante;\n\n                Vue.set(self.data.filtros, anterior_index, anterior);\n            }\n\n            self.data.filtros.splice(index, 1);\n        },\n        reset_agregar: function reset_agregar() {\n            var self = this;\n\n            Vue.set(self.data, 'agrega', {\n                'nivel': '',\n                'operador': '',\n                'texto': ''\n            });\n\n            Vue.set(self.data, 'temp_filtro', '');\n            Vue.set(self.data, 'condicionante', '');\n        },\n        open_modal_agregar: function open_modal_agregar(condicionante, item) {\n            var self = this;\n\n            if (condicionante) {\n                self.data.condicionante = condicionante;\n                self.data.temp_filtro = item;\n            }\n\n            $('#agregar_filtro_modal').modal('show');\n            $('#nivel').focus();\n        },\n        close_modal_agregar: function close_modal_agregar() {\n            var self = this;\n\n            $('#agregar_filtro_modal').modal('hide');\n            self.reset_agregar();\n        },\n        buscar: function buscar() {\n            var self = this,\n                str = { 'data': JSON.stringify(self.data.filtros) },\n                total_resultados = 0;\n\n            Vue.set(self.data, 'total_resultados', 0);\n\n            if (self.data.filtros.length == 0) {\n                return swal({\n                    type: 'warning',\n                    title: 'Agrega un filtro',\n                    html: 'Por favor agrega un filtro antes de buscar'\n                });\n            }\n\n            $.ajax({\n                type: 'GET',\n                url: self.url_solicitar_reclasificacion_index + '/findmovimiento',\n                data: str,\n                beforeSend: function beforeSend() {},\n                success: function success(data, textStatus, xhr) {\n\n                    if (data.data.resultados.length > 0) {\n                        $.each(data.data.resultados, function (key, value) {\n                            total_resultados = total_resultados + parseInt(value.total);\n                        });\n\n                        Vue.set(self.data, 'total_resultados', parseInt(total_resultados).formatMoney(2, '.', ','));\n                        Vue.set(self.data, 'resultados', data.data.resultados);\n                        swal({\n                            type: 'success',\n                            title: '',\n                            html: 'Se encontraron resultados'\n                        });\n                    } else {\n                        swal({\n                            type: 'warning',\n                            title: '',\n                            html: 'No se encontraron resultados'\n                        });\n                    }\n                },\n                complete: function complete() {}\n            });\n        },\n        confirm_eliminar: function confirm_eliminar(index, tipo) {\n            var self = this;\n            swal({\n                title: \"Eliminar \" + tipo,\n                text: \"¿Estás seguro/a de que deseas eliminar este \" + tipo + \"?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                if (tipo == \"resultado\") {\n                    self.eliminar_resultado(index);\n                } else if (tipo == \"filtro\") {\n                    self.eliminar_filtro(index);\n                }\n            }).catch(swal.noop);\n        },\n        eliminar_resultado: function eliminar_resultado(index) {\n            var self = this;\n\n            self.data.resultados.splice(index, 1);\n        },\n        confirm_solicitar: function confirm_solicitar(item) {\n            var self = this;\n            swal({\n                title: \"Solicitar reclasificación\",\n                text: \"¿Estás seguro/a de querer solicitar esta reclasificación?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.solicitar(item);\n            }).catch(swal.noop);\n        },\n        solicitar: function solicitar(item) {\n            var self = this;\n\n            $.ajax({\n                type: 'POST',\n                url: self.url_solicitar_reclasificacion_index,\n                data: item,\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n\n                    var new_item = item;\n\n                    // marcar el item como \"enviado\" y no dejar que se envie de nuevo\n                    Vue.set(new_item, 'solicitado', 1);\n                    Vue.set(self.data.resultados, self.data.resultados.indexOf(item), new_item);\n\n                    swal({\n                        type: 'success',\n                        title: 'Correcto',\n                        html: 'Solicitud enviada correctamente'\n                    });\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        },\n        open_modal_tipos_transaccion: function open_modal_tipos_transaccion(id_concepto) {\n            var self = this,\n                subtotal = 0,\n                subimporte = 0;\n\n            Vue.set(self.data, 'subtotal', 0);\n            Vue.set(self.data, 'subimporte', 0);\n            Vue.set(self.data, 'resumen', []);\n            Vue.set(self.data, 'detalles', []);\n\n            $.ajax({\n                type: 'GET',\n                url: self.url_solicitar_reclasificacion_index + '/tipos',\n                data: { id_concepto: id_concepto },\n                beforeSend: function beforeSend() {},\n                success: function success(data, textStatus, xhr) {\n                    if (data.resumen) {\n                        $.each(data.resumen, function (key, value) {\n                            subtotal = subtotal + parseInt(value.cantidad);\n                            subimporte = subimporte + parseInt(value.monto);\n                        });\n\n                        Vue.set(self.data, 'subtotal', subtotal);\n                        Vue.set(self.data, 'subimporte', subimporte);\n                        Vue.set(self.data, 'resumen', data.resumen);\n                        Vue.set(self.data, 'detalles', data.detalles);\n                        $('#tipos_transaccion').modal('show');\n                    } else {\n                        swal({\n                            type: 'warning',\n                            title: '',\n                            html: 'No se encontraron resultados'\n                        });\n                    }\n                },\n                complete: function complete() {}\n            });\n        },\n        close_modal_tipos_transaccion: function close_modal_tipos_transaccion() {\n            var self = this;\n\n            Vue.set(self.data, 'desglosar', []);\n            Vue.set(self.data, 'resumen', []);\n            $('#tipos_transaccion').modal('hide');\n        },\n        clean_desglosar: function clean_desglosar() {\n            var self = this;\n\n            Vue.set(self.data, 'desglosar', []);\n            Vue.set(self.data, 'desglosar_descripcion', '');\n        },\n        desglosar_tipos: function desglosar_tipos(tipo_transaccion, opciones) {\n            var self = this,\n                filtrado = [];\n\n            self.clean_desglosar();\n\n            // Muestra detalles de acuerdo al tipo de transaccion\n            if (tipo_transaccion && opciones) {\n                filtrado = self.data.detalles.filter(function (e) {\n                    return e.descripcion == tipo_transaccion && e.opciones == opciones;\n                });\n            } else filtrado = self.data.detalles;\n\n            Vue.set(self.data, 'desglosar', filtrado);\n            Vue.set(self.data, 'desglosar_descripcion', tipo_transaccion);\n        },\n        mostrar_items: function mostrar_items(id_transaccion, id_concepto) {\n            var self = this;\n\n            swal({\n                title: \"Mostrar items\",\n                text: \"¿Estás seguro/a de querer mostrar los items para esta transacción? Se abrirá una nueva pantalla\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                window.location.href = self.url_solicitar_reclasificacion_index + '/items/' + id_concepto + '/' + id_transaccion;\n            }).catch(swal.noop);\n        }\n    },\n    directives: {}\n});\n\n},{}],27:[function(require,module,exports){\n'use strict';\n\nVue.component('solicitar_reclasificacion-items', {\n    props: ['url_solicitar_reclasificacion_index', 'id_transaccion', 'id_concepto_antiguo', 'items', 'max_niveles', 'filtros', 'operadores'],\n    data: function data() {\n        return {\n            'data': {\n                'items': this.items,\n                'filtros': this.filtros,\n                'operadores': this.operadores,\n                'agrega': {\n                    'nivel': '',\n                    'operador': '',\n                    'texto': ''\n                },\n                'resultados': [],\n                'subtotal': 0,\n                'subimporte': 0,\n                'total_resultados': 0,\n                'temp_index': false,\n                'id_concepto_antiguo': false,\n                'solicitudes': [],\n                'motivo': ''\n            }\n        };\n    },\n    computed: {\n        niveles: function niveles() {\n            var self = this,\n                niveles = [],\n                paso = 1;\n\n            for (paso; paso <= self.max_niveles; paso++) {\n                niveles.push({ numero: paso, nombre: \"Nivel \" + paso });\n            }\n\n            return niveles;\n        },\n        niveles_n: function niveles_n() {\n            var result = 0;\n            this.data.resultados.forEach(function (t) {\n                var cont = Object.keys(t).filter(function (t2) {\n                    return t[t2] != null;\n                });\n                if (cont.length - 2 > result) {\n                    result = cont.length - 2;\n                }\n            });\n\n            return result;\n        }\n    },\n    methods: {\n        agregar_filtro: function agregar_filtro() {\n            var self = this,\n                vacios = [],\n                temp = [];\n\n            // Los campos  no puedene star vacios\n            $.each(self.data.agrega, function (index, value) {\n                if (value === \"\") {\n                    vacios.push(index);\n                }\n            });\n\n            // Manda error si están vacios\n            if (vacios.length > 0) return swal({\n                type: 'warning',\n                title: 'Los siguientes campos no pueden estar vacios:',\n                html: '<ul class=\"list-group\"><li class=\"list-group-item list-group-item-danger\">' + vacios.join(\"<li class=\\\"list-group-item list-group-item-danger\\\">\") + '</ul>'\n            });\n\n            self.data.filtros.push(self.data.agrega);\n        },\n        buscar: function buscar() {\n            var self = this,\n                str = { 'data': JSON.stringify(self.data.filtros) },\n                total_resultados = 0;\n\n            Vue.set(self.data, 'total_resultados', 0);\n\n            if (self.data.filtros.length == 0) {\n                return swal({\n                    type: 'warning',\n                    title: 'Agrega un filtro',\n                    html: 'Por favor agrega un filtro antes de buscar'\n                });\n            }\n\n            $.ajax({\n                type: 'GET',\n                url: self.url_solicitar_reclasificacion_index + '/find',\n                data: str,\n                beforeSend: function beforeSend() {},\n                success: function success(data, textStatus, xhr) {\n\n                    if (data.data.resultados.length > 0) {\n                        $.each(data.data.resultados, function (key, value) {\n                            total_resultados = total_resultados + parseInt(value.total);\n                        });\n\n                        Vue.set(self.data, 'total_resultados', parseInt(total_resultados).formatMoney(2, '.', ','));\n                        Vue.set(self.data, 'resultados', data.data.resultados);\n                        swal({\n                            type: 'success',\n                            title: '',\n                            html: 'Se encontraron resultados'\n                        });\n                    } else {\n                        swal({\n                            type: 'warning',\n                            title: '',\n                            html: 'No se encontraron resultados'\n                        });\n                    }\n                },\n                complete: function complete() {}\n            });\n        },\n        confirm_eliminar: function confirm_eliminar(index, tipo) {\n            var self = this;\n            swal({\n                title: \"Eliminar \" + tipo,\n                text: \"¿Estás seguro/a de que deseas eliminar este \" + tipo + \"?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                if (tipo == \"resultado\") {\n                    self.eliminar_resultado(index);\n                } else if (tipo == \"filtro\") {\n                    self.eliminar_filtro(index);\n                }\n            }).catch(swal.noop);\n        },\n        eliminar_resultado: function eliminar_resultado(index) {\n            var self = this;\n\n            self.data.resultados.splice(index, 1);\n        },\n        eliminar_filtro: function eliminar_filtro(index) {\n            var self = this;\n\n            self.data.filtros.splice(index, 1);\n\n            if (self.data.filtros.length == 0) {\n                self.reset_agregar();\n            }\n        },\n        reset_agregar: function reset_agregar() {\n            var self = this;\n\n            Vue.set(self.data, 'agrega', {\n                'nivel': '',\n                'operador': '',\n                'texto': ''\n            });\n\n            self.active_item();\n            Vue.set(self.data, 'resultados', []);\n            Vue.set(self.data, 'filtros', []);\n            Vue.set(self.data, 'total_resultados', 0);\n            Vue.set(self.data, 'id_concepto_antiguo', false);\n        },\n        active_item: function active_item() {\n            var self = this;\n\n            $('.items').each(function () {\n                var _this = $(this);\n\n                _this.removeClass('bg-navy disabled');\n\n                if (self.data.temp_index !== false && _this.hasClass('item_' + self.data.temp_index)) {\n                    $('.item_' + self.data.temp_index).removeClass('items item_' + self.data.temp_index).addClass('bg-navy disabled items item_' + self.data.temp_index);\n                }\n            });\n        },\n        open_modal_agregar: function open_modal_agregar(item, index) {\n            var self = this;\n\n            Vue.set(self.data, 'temp_index', index);\n            Vue.set(self.data, 'id_concepto_antiguo', item.id_concepto);\n\n            $('#agregar_filtro_modal').modal('show');\n            $('#nivel').focus();\n\n            self.active_item();\n        },\n        close_modal_agregar: function close_modal_agregar() {\n            var self = this;\n\n            $('#agregar_filtro_modal').modal('hide');\n\n            self.reset_agregar();\n        },\n        aplicar: function aplicar(item) {\n            var self = this;\n\n            Vue.set(self.data.items[self.data.temp_index], 'destino_final', item['filtro' + self.niveles_n]);\n            Vue.set(self.data.items[self.data.temp_index], 'id_concepto_nuevo', item['id_concepto']);\n\n            self.data.solicitudes.push(self.data.items[self.data.temp_index]);\n\n            this.close_modal_agregar();\n        },\n        confirm_solicitar: function confirm_solicitar() {\n            var self = this;\n\n            // Se debe de haber seleccionado un nuevo concepto\n            if (self.data.solicitudes.length == 0) return swal({\n                type: 'warning',\n                title: 'Agrega un nuevo concepto',\n                html: 'Por favor agrega un nuevo concepto antes de solicitar'\n            });\n\n            if (self.data.motivo == '') return swal({\n                type: 'warning',\n                title: 'Especifica un motivo',\n                html: 'Por favor especifica un motivo antes de solicitar'\n            });\n\n            swal({\n                title: \"Aplicar conceptos\",\n                text: \"¿Estás seguro/a de que deseas aplicar estos conceptos?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.solicitar();\n            }).catch(swal.noop);\n        },\n        solicitar: function solicitar() {\n            var self = this;\n\n            $.ajax({\n                type: 'POST',\n                url: self.url_solicitar_reclasificacion_index,\n                data: {\n                    'motivo': self.data.motivo,\n                    'solicitudes': self.data.solicitudes\n                },\n                beforeSend: function beforeSend() {},\n                success: function success(data, textStatus, xhr) {\n\n                    swal({\n                        type: 'success',\n                        title: '',\n                        html: 'Solicitud elaborada con éxito',\n                        onClose: function onClose() {\n                            window.location.href = App.host + '/control_costos/solicitudes_reclasificacion';\n                        }\n                    });\n                },\n                complete: function complete() {}\n            });\n        }\n    },\n    directives: {}\n});\n\n},{}],28:[function(require,module,exports){\n'use strict';\n\nVue.component('control_cambio_presupuesto-create', {\n    props: ['max_niveles', 'operadores'],\n    data: function data() {\n        return {\n            conceptos: [],\n            filtros: [],\n            form: {\n                filtro: {\n                    nivel: '',\n                    operador: '',\n                    texto: ''\n                }\n            },\n            cargando: false\n        };\n    },\n    computed: {\n        niveles: function niveles() {\n            var niveles = [],\n                paso = 1;\n            for (paso; paso <= this.max_niveles; paso++) {\n                niveles.push({ numero: paso, nombre: \"Nivel \" + paso });\n            }\n            return niveles;\n        }\n    },\n    mounted: function mounted() {\n        var self = this;\n        $('#conceptos_table').DataTable({\n            \"processing\": true,\n            \"serverSide\": true,\n            \"ordering\": false,\n            \"ajax\": {\n                \"url\": App.host + '/conceptos/getPaths',\n                \"type\": \"POST\",\n                \"beforeSend\": function beforeSend() {\n                    self.cargando = true;\n                },\n                \"data\": function data(d) {\n                    d.filtros = self.filtros;\n                },\n                \"complete\": function complete() {\n                    self.cargando = false;\n                },\n                \"dataSrc\": function dataSrc(json) {\n                    for (var i = 0; i < json.data.length; i++) {\n                        json.data[i].monto_presupuestado = '$' + parseInt(json.data[i].monto_presupuestado).formatMoney(2, ',', '.');\n                        json.data[i].monto = '$' + parseInt(json.data[i].monto).formatMoney(2, ',', '.');\n                        json.data[i].precio_unitario = '$' + parseInt(json.data[i].precio_unitario).formatMoney(2, ',', '.');\n                    }\n                    return json.data;\n                }\n            },\n            \"columns\": [{ data: 'filtro1' }, { data: 'filtro2' }, { data: 'filtro3' }, { data: 'filtro4' }, { data: 'filtro5' }, { data: 'filtro6' }, { data: 'filtro7' }, { data: 'filtro8' }, { data: 'filtro9' }, { data: 'filtro10' }, { data: 'filtro11' }, { data: 'unidad' }, { data: 'cantidad_presupuestada', className: 'text-right' }, { data: 'precio_unitario', className: 'text-right' }, { data: 'monto', className: 'text-right' }, { data: 'monto_presupuestado', className: 'text-right' }],\n            language: {\n                \"sProcessing\": \"Procesando...\",\n                \"sLengthMenu\": \"Mostrar _MENU_ registros\",\n                \"sZeroRecords\": \"No se encontraron resultados\",\n                \"sEmptyTable\": \"Ningún dato disponible en esta tabla\",\n                \"sInfo\": \"Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros\",\n                \"sInfoEmpty\": \"Mostrando registros del 0 al 0 de un total de 0 registros\",\n                \"sInfoFiltered\": \"(filtrado de un total de _MAX_ registros)\",\n                \"sInfoPostFix\": \"\",\n                \"sSearch\": \"Buscar:\",\n                \"sUrl\": \"\",\n                \"sInfoThousands\": \",\",\n                \"sLoadingRecords\": \"Cargando...\",\n                \"oPaginate\": {\n                    \"sFirst\": \"Primero\",\n                    \"sLast\": \"Último\",\n                    \"sNext\": \"Siguiente\",\n                    \"sPrevious\": \"Anterior\"\n                },\n                \"oAria\": {\n                    \"sSortAscending\": \": Activar para ordenar la columna de manera ascendente\",\n                    \"sSortDescending\": \": Activar para ordenar la columna de manera descendente\"\n                }\n            }\n        });\n    },\n    methods: {\n        set_filtro: function set_filtro() {\n            var nivel = this.form.filtro.nivel;\n            var result = this.filtros.filter(function (filtro) {\n                return filtro.nivel == nivel;\n            });\n\n            if (result.length) {\n                result[0].operadores.push({\n                    sql: this.form.filtro.operador.replace('{texto}', this.form.filtro.texto),\n                    operador: this.operadores[this.form.filtro.operador],\n                    texto: this.form.filtro.texto\n                });\n            } else {\n                this.filtros.push({\n                    nivel: this.form.filtro.nivel,\n                    operadores: [{\n                        sql: this.form.filtro.operador.replace('{texto}', this.form.filtro.texto),\n                        operador: this.operadores[this.form.filtro.operador],\n                        texto: this.form.filtro.texto\n                    }]\n                });\n            }\n\n            this.close_modal();\n        },\n\n        close_modal: function close_modal() {\n            $('#agregar_filtro_modal').modal('hide');\n            Vue.set(this.form, 'filtro', { nivel: '', operador: '', texto: '' });\n        },\n\n        eliminar: function eliminar(filtro, operador) {\n            Vue.delete(filtro.operadores, filtro.operadores.indexOf(operador));\n            if (!filtro.operadores.length) {\n                Vue.delete(this.filtros, this.filtros.indexOf(filtro));\n            }\n\n            if (!this.filtros.length) {\n                var table = $('#conceptos_table').DataTable();\n                table.ajax.reload();\n            }\n        },\n\n        get_conceptos: function get_conceptos() {\n            var table = $('#conceptos_table').DataTable();\n            table.ajax.reload();\n        }\n    }\n});\n\n},{}],29:[function(require,module,exports){\n'use strict';\n\nVue.component('control_presupuesto-index', {\n    props: ['max_niveles', 'operadores'],\n    data: function data() {\n        return {\n            conceptos: [],\n            filtros: [],\n            form: {\n                filtro: {\n                    nivel: '',\n                    operador: '',\n                    texto: ''\n                }\n            },\n            cargando: false\n        };\n    },\n    computed: {\n        niveles: function niveles() {\n            var niveles = [],\n                paso = 1;\n            for (paso; paso <= this.max_niveles; paso++) {\n                niveles.push({ numero: paso, nombre: \"Nivel \" + paso });\n            }\n            return niveles;\n        }\n    },\n    mounted: function mounted() {\n        var self = this;\n        $('#conceptos_table').DataTable({\n            \"processing\": true,\n            \"serverSide\": true,\n            \"ordering\": false,\n            \"ajax\": {\n                \"url\": App.host + '/conceptos/getPaths',\n                \"type\": \"POST\",\n                \"beforeSend\": function beforeSend() {\n                    self.cargando = true;\n                },\n                \"data\": function data(d) {\n                    d.filtros = self.filtros;\n                },\n                \"complete\": function complete() {\n                    self.cargando = false;\n                },\n                \"dataSrc\": function dataSrc(json) {\n                    for (var i = 0; i < json.data.length; i++) {\n                        json.data[i].monto_presupuestado = '$' + parseInt(json.data[i].monto_presupuestado).formatMoney(2, ',', '.');\n                        json.data[i].monto = '$' + parseInt(json.data[i].monto).formatMoney(2, ',', '.');\n                        json.data[i].precio_unitario = '$' + parseInt(json.data[i].precio_unitario).formatMoney(2, ',', '.');\n                    }\n                    return json.data;\n                }\n            },\n            \"columns\": [{ data: 'filtro1' }, { data: 'filtro2' }, { data: 'filtro3' }, { data: 'filtro4' }, { data: 'filtro5' }, { data: 'filtro6' }, { data: 'filtro7' }, { data: 'filtro8' }, { data: 'filtro9' }, { data: 'filtro10' }, { data: 'filtro11' }, { data: 'unidad' }, { data: 'cantidad_presupuestada', className: 'text-right' }, { data: 'precio_unitario', className: 'text-right' }, { data: 'monto', className: 'text-right' }, { data: 'monto_presupuestado', className: 'text-right' }],\n            language: {\n                \"sProcessing\": \"Procesando...\",\n                \"sLengthMenu\": \"Mostrar _MENU_ registros\",\n                \"sZeroRecords\": \"No se encontraron resultados\",\n                \"sEmptyTable\": \"Ningún dato disponible en esta tabla\",\n                \"sInfo\": \"Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros\",\n                \"sInfoEmpty\": \"Mostrando registros del 0 al 0 de un total de 0 registros\",\n                \"sInfoFiltered\": \"(filtrado de un total de _MAX_ registros)\",\n                \"sInfoPostFix\": \"\",\n                \"sSearch\": \"Buscar:\",\n                \"sUrl\": \"\",\n                \"sInfoThousands\": \",\",\n                \"sLoadingRecords\": \"Cargando...\",\n                \"oPaginate\": {\n                    \"sFirst\": \"Primero\",\n                    \"sLast\": \"Último\",\n                    \"sNext\": \"Siguiente\",\n                    \"sPrevious\": \"Anterior\"\n                },\n                \"oAria\": {\n                    \"sSortAscending\": \": Activar para ordenar la columna de manera ascendente\",\n                    \"sSortDescending\": \": Activar para ordenar la columna de manera descendente\"\n                }\n            }\n        });\n    },\n    methods: {\n        set_filtro: function set_filtro() {\n            var nivel = this.form.filtro.nivel;\n            var result = this.filtros.filter(function (filtro) {\n                return filtro.nivel == nivel;\n            });\n\n            if (result.length) {\n                result[0].operadores.push({\n                    sql: this.form.filtro.operador.replace('{texto}', this.form.filtro.texto),\n                    operador: this.operadores[this.form.filtro.operador],\n                    texto: this.form.filtro.texto\n                });\n            } else {\n                this.filtros.push({\n                    nivel: this.form.filtro.nivel,\n                    operadores: [{\n                        sql: this.form.filtro.operador.replace('{texto}', this.form.filtro.texto),\n                        operador: this.operadores[this.form.filtro.operador],\n                        texto: this.form.filtro.texto\n                    }]\n                });\n            }\n\n            this.close_modal();\n        },\n\n        close_modal: function close_modal() {\n            $('#agregar_filtro_modal').modal('hide');\n            Vue.set(this.form, 'filtro', { nivel: '', operador: '', texto: '' });\n        },\n\n        eliminar: function eliminar(filtro, operador) {\n            Vue.delete(filtro.operadores, filtro.operadores.indexOf(operador));\n            if (!filtro.operadores.length) {\n                Vue.delete(this.filtros, this.filtros.indexOf(filtro));\n            }\n\n            if (!this.filtros.length) {\n                var table = $('#conceptos_table').DataTable();\n                table.ajax.reload();\n            }\n        },\n\n        get_conceptos: function get_conceptos() {\n            var table = $('#conceptos_table').DataTable();\n            table.ajax.reload();\n        }\n    }\n});\n\n},{}],30:[function(require,module,exports){\n'use strict';\n\nVue.component('comprobante-fondo-fijo-create', {\n    props: ['url_comprobante_fondo_fijo_create'],\n\n    data: function data() {\n        return {\n            'form': {\n                'comprobante': {\n                    'id_referente': '',\n                    'referencia': '',\n                    'cumplimiento': '',\n                    'fecha': '',\n                    'id_naturaleza': '',\n                    'id_concepto': '',\n                    'id_transaccion': '',\n                    'observaciones': ''\n                },\n                'items': [],\n                'total': '',\n                'subtotal': '',\n                'iva': '',\n                'cambio_iva': false\n            },\n            current_item: {},\n            guardando: false\n        };\n    },\n\n    computed: {\n\n        total: function total() {\n\n            var self = this;\n            var impuesto = 0;\n            if (self.form.iva > 0) {\n                impuesto = parseFloat(self.form.iva);\n            }\n\n            var subtotal = parseFloat(this.subtotal);\n            var total = impuesto + subtotal;\n\n            if (total > 0) {\n                self.form.total = total.toFixed(2);\n                total = total.toFixed(2);\n\n                return total;\n            } else {\n                return 0;\n            }\n        },\n        subtotal: function subtotal() {\n            var self = this;\n            var total = 0;\n\n            if (self.form.comprobante.id_naturaleza == 0) {\n                if (this.form.items) {\n                    this.form.items.forEach(function (item) {\n                        total += parseFloat(item.importe);\n                    });\n                }\n            } else {\n                if (this.form.items) {\n                    this.form.items.forEach(function (item) {\n                        total += parseFloat(item.cantidad * item.precio_unitario);\n                    });\n                }\n            }\n\n            if (total > 0) {\n                total = total.toFixed(2);\n                return parseFloat(total);\n            } else {\n                return 0;\n            }\n        }\n\n    },\n\n    mounted: function mounted() {\n        var self = this;\n        var jstree = \"\";\n        var jstree2 = \"\";\n        var auxiliar = 0;\n\n        $('#concepto_select').on('select2:select', function () {\n\n            if (auxiliar == 1) {\n                jstree.destroy();\n                jstree2.destroy();\n            }\n            carga_arbol();\n            $('#id_concepto').val($('#concepto_select option:selected').data().data.id);\n            self.form.comprobante.id_concepto = $('#concepto_select option:selected').data().data.id;\n            $.each(self.form.items, function (key, item) {\n                item.destino = '';\n            });\n        });\n\n        $(\"#cumplimiento\").datepicker().on(\"changeDate\", function () {\n            Vue.set(self.form.comprobante, 'cumplimiento', $('#cumplimiento').val());\n        });\n\n        $(\"#fecha\").datepicker().on(\"changeDate\", function () {\n            Vue.set(self.form.comprobante, 'fecha', $('#fecha').val());\n        });\n\n        function carga_arbol() {\n            // JsTree Configuration\n            auxiliar = 1;\n            var jstreeConf = {\n                'core': {\n                    'multiple': false,\n                    'data': {\n                        \"url\": function url(node) {\n\n                            var conceptos = \"\";\n                            var materiales = \"\";\n\n                            if (node.id === \"#\") {\n                                return App.host + '/conceptos/' + $('#id_concepto').val() + '/jstree';\n                            }\n\n                            return App.host + '/conceptos/' + node.id + '/jstree';\n                        },\n                        \"data\": function data(node) {\n                            return {\n                                \"id\": node.id\n                            };\n                        }\n                    }\n                },\n                'types': {\n                    'default': {\n                        'icon': 'fa fa-folder-o text-success'\n                    },\n                    'medible': {\n                        'icon': 'fa fa-file-text'\n                    },\n                    'material': {\n                        'icon': 'fa fa-briefcase'\n                    },\n                    'opened': {\n                        'icon': 'fa fa-folder-open-o text-success'\n                    },\n                    'inactivo': {\n                        'icon': 'fa fa-exclamation-triangle'\n                    }\n                },\n                'plugins': ['types']\n            };\n\n            $('#jstree').on(\"after_open.jstree\", function (e, data) {\n                if (data.instance.get_type(data.node) == 'default') {\n                    data.instance.set_type(data.node, 'opened');\n                }\n            }).on(\"after_close.jstree\", function (e, data) {\n                if (data.instance.get_type(data.node) == 'opened') {\n                    data.instance.set_type(data.node, 'default');\n                }\n                estilos_nodos();\n            });\n\n            /////////Arbol Materiales\n\n            // JsTree Configuration\n            var jstreeConfM = {\n                'core': {\n                    'multiple': false,\n                    'data': {\n                        \"url\": function url(node) {\n                            if (node.id === \"#\") {\n                                return App.host + '/almacen/jstree';\n                            }\n                            return App.host + '/almacen/' + node.id + '/jstree';\n                        },\n                        \"data\": function data(node) {\n                            return {\n                                \"id\": node.id\n                            };\n                        }\n                    }\n                },\n                'types': {\n                    'folder': {\n                        'icon': 'fa fa-folder-o text-success'\n                    },\n                    'almacen': {\n                        'icon': 'fa fa-briefcase'\n                    },\n                    'inactivo': {\n                        'icon': 'fa fa-exclamation-triangle'\n                    }\n\n                },\n                'plugins': ['types']\n            };\n\n            $('#jstreeM').on(\"select_node.jstree\", function (e, data) {\n                var jstreeD = $('#jstree').jstree(true);\n                var node = jstreeD.get_selected(true)[0];\n                $('#jstree').jstree(true).deselect_node(node);\n                if (data.node.original.type == 'concepto' || data.node.original.type == 'inactivo') {\n                    $('#jstreeM').jstree(true).deselect_node(data.node);\n                }\n            });\n\n            $('#jstree').on(\"select_node.jstree\", function (e, data) {\n\n                var jstreeM = $('#jstreeM').jstree(true);\n                var node = jstreeM.get_selected(true)[0];\n                $('#jstreeM').jstree(true).deselect_node(node);\n\n                if (data.node.original.type == 'concepto' || data.node.original.type == 'inactivo') {\n                    $('#jstree').jstree(true).deselect_node(data.node);\n                }\n            });\n\n            $('#jstreeM').on(\"after_open.jstree\", function (e, data) {\n                if (data.instance.get_type(data.node) == 'default') {\n                    data.instance.set_type(data.node, 'opened');\n                }\n                estilos_nodos();\n            }).on(\"after_close.jstree\", function (e, data) {\n                if (data.instance.get_type(data.node) == 'opened') {\n                    data.instance.set_type(data.node, 'default');\n                }\n            });\n\n            $('#jstreeM').on(\"loaded.jstree\", function (e, data) {\n                estilos_nodos();\n            });\n\n            $('#jstree').on(\"loaded.jstree\", function (e, data) {\n                estilos_nodos();\n            });\n\n            // On hide the BS modal, get the selected node and destroy the jstree\n            $('#myModal').on('shown.bs.modal', function (e) {\n                $('#jstreeM').jstree(jstreeConfM);\n                $('#jstree').jstree(jstreeConf);\n            }).on('hidden.bs.modal', function (e) {\n\n                jstree = $('#jstree').jstree(true);\n                var node = jstree.get_selected(true)[0];\n                jstree2 = $('#jstreeM').jstree(true);\n                var node2 = jstree2.get_selected(true)[0];\n\n                if (node) {\n                    self.current_item.id_concepto = node.id;\n                    self.current_item.tipo_concepto = \"\";\n                    self.current_item.destino = node.text;\n                } else {\n\n                    if (node2) {\n                        if (node2.type == 'almacen') self.current_item.id_concepto = node2.id;\n                        self.current_item.tipo_concepto = node2.type;\n                        self.current_item.destino = node2.text;\n                    }\n                }\n            });\n        }\n        function estilos_nodos() {\n            $(\".fa-folder-o\").parent(\"a\").css(\"color\", \"gray\");\n            $(\".fa-folder-o\").parent(\"a\").css(\"cursor\", \"not-allowed\");\n            $(\".fa-folder-open-o\").parent(\"a\").css(\"color\", \"gray\");\n            $(\".fa-folder-open-o\").parent(\"a\").css(\"cursor\", \"not-allowed\");\n            $(\".fa-exclamation-triangle\").parent(\"a\").css(\"color\", \"gray\");\n            $(\".fa-exclamation-triangle\").parent(\"a\").css(\"text-decoration\", \"line-through\");\n            $(\".fa-exclamation-triangle\").parent(\"a\").css(\"cursor\", \"not-allowed\");\n        }\n    },\n\n    directives: {\n        datepicker: {\n            inserted: function inserted(el) {\n                $(el).datepicker({\n                    autoclose: true,\n                    language: 'es',\n                    todayHighlight: true,\n                    clearBtn: true,\n                    format: 'yyyy-mm-dd'\n                });\n            }\n        },\n        select2: {\n            inserted: function inserted(el) {\n                $(el).select2({\n                    width: '100%',\n                    ajax: {\n                        url: App.host + '/sistema_contable/concepto/getBy',\n                        dataType: 'json',\n                        delay: 500,\n                        data: function data(params) {\n                            return {\n                                attribute: 'descripcion',\n                                operator: 'like',\n                                value: '%' + params.term + '%'\n                            };\n                        },\n                        processResults: function processResults(data) {\n                            return {\n                                results: $.map(data.data.conceptos, function (item) {\n                                    return {\n                                        text: item.path,\n                                        id: item.id_concepto\n                                    };\n                                })\n                            };\n                        },\n                        error: function error(_error) {},\n                        cache: true\n                    },\n                    escapeMarkup: function escapeMarkup(markup) {\n                        return markup;\n                    }, // let our custom formatter work\n                    minimumInputLength: 1\n                });\n            }\n        },\n        select_material: {\n\n            inserted: function inserted(el) {\n                $(el).select2({\n                    width: '100%',\n                    ajax: {\n                        url: App.host + '/finanzas/material/getBy',\n                        dataType: 'json',\n                        delay: 500,\n                        data: function data(params) {\n                            return {\n                                attribute: 'descripcion',\n                                operator: 'like',\n                                value: '%' + params.term + '%'\n                            };\n                        },\n                        processResults: function processResults(data) {\n                            return {\n                                results: $.map(data.data.materiales, function (item) {\n                                    return {\n                                        text: item.descripcion,\n                                        id: item.id_material,\n                                        unidad: item.unidad\n                                    };\n                                })\n                            };\n                        },\n                        error: function error(_error2) {},\n                        cache: true\n                    },\n                    escapeMarkup: function escapeMarkup(markup) {\n                        return markup;\n                    }, // let our custom formatter work\n                    minimumInputLength: 1\n                }).on('select2:select', function () {\n                    var id = el.id;\n\n                    $('#I' + id).val($('#' + id + ' option:selected').data().data.id);\n                    $('#L' + id).text($('#' + id + ' option:selected').data().data.unidad);\n                    $('#UL' + id).text($('#' + id + ' option:selected').data().data.unidad);\n\n                    $('#btn' + id).click();\n                });\n            }\n        }\n    },\n    methods: {\n\n        validateForm: function validateForm(scope, funcion) {\n            var _this = this;\n\n            this.$validator.validateAll(scope).then(function () {\n                if (funcion == 'confirm_save_fondo') {\n                    _this.confirm_add_movimiento();\n                }\n            }).catch(function () {\n                swal({\n                    type: 'warning',\n                    title: 'Advertencia',\n                    text: 'Por favor corrija los errores del formulario'\n                });\n            });\n        },\n\n        confirm_add_movimiento: function confirm_add_movimiento() {\n            var self = this;\n            swal({\n                title: \"Guardar Comprobante de Fondo Fijo\",\n                text: \"¿Estás seguro de que la información es correcta?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.save_comprobante_fondo_fijo();\n            }).catch(swal.noop);\n        },\n\n        add_item: function add_item() {\n            var self = this;\n            self.form.items.push({\n                'id_transaccion': '',\n                'id_concepto': '',\n                'id_material': '',\n                'cantidad': '',\n                'precio_unitario': '',\n                'importe': '',\n                'destino': '',\n                'unidad': '',\n                'gastos_varios': '',\n                'tipo_concepto': ''\n            });\n        },\n\n        item_material: function item_material(id, item) {\n            var idELemnt = id + 1;\n            this.current_item = item;\n            this.current_item.id_material = $('#I' + idELemnt).val();\n        },\n\n        curent_item: function curent_item(item) {\n            this.current_item = item;\n        },\n\n        confirm_remove_item: function confirm_remove_item(index) {\n            var self = this;\n            swal({\n                title: \"Quitar Item\",\n                text: \"¿Estás seguro de que deseas quitar el Item del comprobante?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.remove_item(index);\n            }).catch(swal.noop);\n        },\n        remove_item: function remove_item(index) {\n            Vue.delete(this.form.items, index);\n        },\n        habilitaIva: function habilitaIva() {\n            var self = this;\n            self.form.iva = self.subtotal * .16;\n        },\n        save_comprobante_fondo_fijo: function save_comprobante_fondo_fijo() {\n            var self = this;\n            var url = this.url_comprobante_fondo_fijo_create;\n            var data = self.form;\n            console.log(url);\n            $.ajax({\n                type: 'POST',\n                url: url,\n                data: data,\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    swal({\n                        title: '¡Correcto!',\n                        html: 'Comprobante de Fondo Fijo guardado correctamente',\n                        type: 'success',\n                        confirmButtonText: \"Ok\",\n                        closeOnConfirm: false\n                    }).catch(swal.noop);\n                    window.location = App.host + \"/finanzas/comprobante_fondo_fijo/\" + data.data.comprobante.id_transaccion;\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        }\n\n    }\n});\n\n},{}],31:[function(require,module,exports){\n'use strict';\n\nVue.component('comprobante-fondo-fijo-edit', {\n    props: ['url_comprobante_fondo_fijo_update', 'url_comprobante_fondo_fijo_show', 'comprobante_items', 'comprobante'],\n\n    data: function data() {\n        return {\n            'form': {\n                'comprobante': this.comprobante,\n                'items': this.comprobante_items,\n                'total': '',\n                'subtotal': '',\n                'iva': this.comprobante.impuesto,\n                'cambio_iva': false\n            },\n            current_item: {},\n            guardando: false\n        };\n    },\n\n    computed: {\n\n        total: function total() {\n            var self = this;\n            var impuesto = parseFloat(self.form.iva);\n            var subtotal = parseFloat(this.subtotal);\n            var total = impuesto + subtotal;\n            self.form.total = total.toFixed(2);\n\n            total = total.toFixed(2);\n            return total;\n        },\n        subtotal: function subtotal() {\n            var self = this;\n            var total = 0;\n            if (this.form.items) {\n                this.form.items.forEach(function (item) {\n\n                    if (self.form.comprobante.id_naturaleza == 1) {\n                        total += parseFloat(item.cantidad * item.precio_unitario);\n                    } else {\n                        total += parseFloat(item.importe);\n                    }\n                });\n            }\n            total = total.toFixed(2);\n            return parseFloat(total);\n        }\n\n    },\n\n    mounted: function mounted() {\n        var self = this;\n        var jstree = \"\";\n        var jstree2 = \"\";\n\n        $('#id_concepto').val(self.form.comprobante.id_concepto);\n        $.each(self.form.items, function (key, item) {\n            $('#I' + (key + 1)).val(item.id_material);\n            $('#L' + (key + 1)).text(item.unidad);\n        });\n\n        $('#concepto_select').on('select2:select', function () {\n            jstree.destroy();\n            jstree2.destroy();\n            carga_arbol();\n\n            $('#id_concepto').val($('#concepto_select option:selected').data().data.id);\n            self.form.comprobante.id_concepto = $('#concepto_select option:selected').data().data.id;\n            $.each(self.form.items, function (key, item) {\n                item.destino = '';\n            });\n        });\n\n        $(\"#cumplimiento\").datepicker().on(\"changeDate\", function () {\n            Vue.set(self.form.comprobante, 'cumplimiento', $('#cumplimiento').val());\n        });\n\n        $(\"#fecha\").datepicker().on(\"changeDate\", function () {\n            Vue.set(self.form.comprobante, 'fecha', $('#fecha').val());\n        });\n\n        function carga_arbol() {\n            // JsTree Configuration\n            var jstreeConf = {\n                'core': {\n                    'multiple': false,\n                    'data': {\n                        \"url\": function url(node) {\n\n                            var conceptos = \"\";\n                            var materiales = \"\";\n\n                            if (node.id === \"#\") {\n                                return App.host + '/conceptos/' + $('#id_concepto').val() + '/jstree';\n                            }\n\n                            return App.host + '/conceptos/' + node.id + '/jstree';\n                        },\n                        \"data\": function data(node) {\n                            return {\n                                \"id\": node.id\n                            };\n                        }\n                    }\n                },\n                'types': {\n                    'default': {\n                        'icon': 'fa fa-folder-o text-success'\n                    },\n                    'medible': {\n                        'icon': 'fa fa-file-text'\n                    },\n                    'material': {\n                        'icon': 'fa fa-briefcase'\n                    },\n                    'opened': {\n                        'icon': 'fa fa-folder-open-o text-success'\n                    },\n                    'inactivo': {\n                        'icon': 'fa fa-exclamation-triangle'\n                    }\n                },\n                'plugins': ['types']\n            };\n\n            $('#jstreeM').on(\"select_node.jstree\", function (e, data) {\n                if (data.node.original.type == 'folder') {\n                    $('#jstreeM').jstree(true).deselect_node(data.node);\n                }\n            });\n\n            $('#jstree').on(\"after_open.jstree\", function (e, data) {\n                if (data.instance.get_type(data.node) == 'default') {\n                    data.instance.set_type(data.node, 'opened');\n                }\n            }).on(\"after_close.jstree\", function (e, data) {\n                if (data.instance.get_type(data.node) == 'opened') {\n                    data.instance.set_type(data.node, 'default');\n                }\n            });\n\n            /////////Arbol Materiales\n\n            // JsTree Configuration\n            var jstreeConfM = {\n                'core': {\n                    'multiple': false,\n                    'data': {\n                        \"url\": function url(node) {\n                            if (node.id === \"#\") {\n                                return App.host + '/almacen/jstree';\n                            }\n                            return App.host + '/almacen/' + node.id + '/jstree';\n                        },\n                        \"data\": function data(node) {\n                            return {\n                                \"id\": node.id\n                            };\n                        }\n                    }\n                },\n                'types': {\n                    'folder': {\n                        'icon': 'fa fa-folder-o text-success'\n                    },\n                    'almacen': {\n                        'icon': 'fa fa-briefcase'\n                    },\n                    'inactivo': {\n                        'icon': 'fa fa-exclamation-triangle'\n                    }\n\n                },\n                'plugins': ['types']\n            };\n\n            $('#jstreeM').on(\"select_node.jstree\", function (e, data) {\n                var jstreeD = $('#jstree').jstree(true);\n                var node = jstreeD.get_selected(true)[0];\n                $('#jstree').jstree(true).deselect_node(node);\n                if (data.node.original.type == 'concepto' || data.node.original.type == 'inactivo') {\n                    $('#jstreeM').jstree(true).deselect_node(data.node);\n                }\n            });\n\n            $('#jstree').on(\"select_node.jstree\", function (e, data) {\n\n                var jstreeM = $('#jstreeM').jstree(true);\n                var node = jstreeM.get_selected(true)[0];\n                $('#jstreeM').jstree(true).deselect_node(node);\n\n                if (data.node.original.type == 'concepto' || data.node.original.type == 'inactivo') {\n                    $('#jstree').jstree(true).deselect_node(data.node);\n                }\n            });\n            $('#jstree').on(\"after_open.jstree\", function (e, data) {\n                if (data.instance.get_type(data.node) == 'default') {\n                    data.instance.set_type(data.node, 'opened');\n                }\n                estilos_nodos();\n            }).on(\"after_close.jstree\", function (e, data) {\n                if (data.instance.get_type(data.node) == 'opened') {\n                    data.instance.set_type(data.node, 'default');\n                }\n            });\n\n            $('#jstreeM').on(\"loaded.jstree\", function (e, data) {\n                estilos_nodos();\n            });\n\n            $('#jstree').on(\"loaded.jstree\", function (e, data) {\n                estilos_nodos();\n            });\n\n            $('#jstreeM').on(\"after_open.jstree\", function (e, data) {\n                if (data.instance.get_type(data.node) == 'default') {\n                    data.instance.set_type(data.node, 'opened');\n                }\n                estilos_nodos();\n            }).on(\"after_close.jstree\", function (e, data) {\n                if (data.instance.get_type(data.node) == 'opened') {\n                    data.instance.set_type(data.node, 'default');\n                }\n            });\n\n            // On hide the BS modal, get the selected node and destroy the jstree\n            $('#myModal').on('shown.bs.modal', function (e) {\n                $('#jstreeM').jstree(jstreeConfM);\n                $('#jstree').jstree(jstreeConf);\n            }).on('hidden.bs.modal', function (e) {\n\n                jstree = $('#jstree').jstree(true);\n                var node = jstree.get_selected(true)[0];\n                jstree2 = $('#jstreeM').jstree(true);\n                var node2 = jstree2.get_selected(true)[0];\n\n                if (node) {\n                    self.current_item.id_concepto = node.id;\n                    self.current_item.tipo_concepto = \"\";\n                    self.current_item.destino = node.text;\n                } else {\n                    if (node2) {\n                        if (node2.type == 'almacen') self.current_item.id_concepto = node2.id;\n                        self.current_item.tipo_concepto = node2.type;\n                        self.current_item.destino = node2.text;\n                    }\n                }\n                //   jstree.destroy();\n                //  jstree2.destroy();\n            });\n        }\n\n        function estilos_nodos() {\n            $(\".fa-folder-o\").parent(\"a\").css(\"color\", \"gray\");\n            $(\".fa-folder-o\").parent(\"a\").css(\"cursor\", \"not-allowed\");\n            $(\".fa-folder-open-o\").parent(\"a\").css(\"color\", \"gray\");\n            $(\".fa-folder-open-o\").parent(\"a\").css(\"cursor\", \"not-allowed\");\n            $(\".fa-exclamation-triangle\").parent(\"a\").css(\"color\", \"gray\");\n            $(\".fa-exclamation-triangle\").parent(\"a\").css(\"text-decoration\", \"line-through\");\n            $(\".fa-exclamation-triangle\").parent(\"a\").css(\"cursor\", \"not-allowed\");\n            $(\".fa-folder-o\").parent(\"a\").unbind(\"click\");\n        }\n        carga_arbol();\n    },\n\n    directives: {\n        datepicker: {\n            inserted: function inserted(el) {\n                $(el).datepicker({\n                    autoclose: true,\n                    language: 'es',\n                    todayHighlight: true,\n                    clearBtn: true,\n                    format: 'yyyy-mm-dd'\n                });\n            }\n        },\n        select2: {\n            inserted: function inserted(el) {\n                $(el).select2({\n                    width: '100%',\n                    ajax: {\n                        url: App.host + '/sistema_contable/concepto/getBy',\n                        dataType: 'json',\n                        delay: 500,\n                        data: function data(params) {\n                            return {\n                                attribute: 'descripcion',\n                                operator: 'like',\n                                value: '%' + params.term + '%'\n                            };\n                        },\n                        processResults: function processResults(data) {\n                            return {\n                                results: $.map(data.data.conceptos, function (item) {\n                                    return {\n                                        text: item.path,\n                                        id: item.id_concepto\n                                    };\n                                })\n                            };\n                        },\n                        error: function error(_error) {},\n                        cache: true\n                    },\n                    escapeMarkup: function escapeMarkup(markup) {\n                        return markup;\n                    }, // let our custom formatter work\n                    minimumInputLength: 1\n                });\n            }\n        },\n        select_material: {\n\n            inserted: function inserted(el) {\n                $(el).select2({\n                    width: '100%',\n                    ajax: {\n                        url: App.host + '/finanzas/material/getBy',\n                        dataType: 'json',\n                        delay: 500,\n                        data: function data(params) {\n                            return {\n                                attribute: 'descripcion',\n                                operator: 'like',\n                                value: '%' + params.term + '%'\n                            };\n                        },\n                        processResults: function processResults(data) {\n                            return {\n                                results: $.map(data.data.materiales, function (item) {\n                                    return {\n                                        text: item.descripcion,\n                                        id: item.id_material,\n                                        unidad: item.unidad\n                                    };\n                                })\n                            };\n                        },\n                        error: function error(_error2) {},\n                        cache: true\n                    },\n                    escapeMarkup: function escapeMarkup(markup) {\n                        return markup;\n                    }, // let our custom formatter work\n                    minimumInputLength: 1\n                }).on('select2:select', function () {\n                    var id = el.id;\n\n                    $('#I' + id).val($('#' + id + ' option:selected').data().data.id);\n                    $('#L' + id).text($('#' + id + ' option:selected').data().data.unidad);\n                    $('#UL' + id).text($('#' + id + ' option:selected').data().data.unidad);\n\n                    $('#btn' + id).click();\n                });\n            }\n        }\n    },\n    methods: {\n\n        validateForm: function validateForm(scope, funcion) {\n            var _this = this;\n\n            this.$validator.validateAll(scope).then(function () {\n                if (funcion == 'confirm_save_fondo') {\n                    _this.confirm_add_movimiento();\n                }\n            }).catch(function () {\n                swal({\n                    type: 'warning',\n                    title: 'Advertencia',\n                    text: 'Por favor corrija los errores del formulario'\n                });\n            });\n        },\n\n        confirm_add_movimiento: function confirm_add_movimiento() {\n            var self = this;\n            swal({\n                title: \"Actualizar Comprobante de Fondo Fijo\",\n                text: \"¿Estás seguro de que la información es correcta?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.save_comprobante_fondo_fijo();\n            }).catch(swal.noop);\n        },\n\n        add_item: function add_item() {\n            var self = this;\n            self.form.items.push({\n                'id_transaccion': '',\n                'id_concepto': '',\n                'id_material': '',\n                'cantidad': '',\n                'precio_unitario': '',\n                'importe': '',\n                'destino': '',\n                'unidad': '',\n\n                'gastos_varios': ''\n            });\n        },\n\n        item_material: function item_material(id, item) {\n            var idELemnt = id + 1;\n            this.current_item = item;\n            this.current_item.id_material = $('#I' + idELemnt).val();\n        },\n\n        curent_item: function curent_item(item) {\n            this.current_item = item;\n        },\n\n        habilitaIva: function habilitaIva() {\n            var self = this;\n            self.form.iva = self.subtotal * .16;\n        },\n        save_comprobante_fondo_fijo: function save_comprobante_fondo_fijo() {\n            var self = this;\n            var url = this.url_comprobante_fondo_fijo_update;\n            var data = self.form;\n            data['_method'] = 'PATCH';\n\n            $.ajax({\n                type: 'POST',\n                url: url,\n                data: data,\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    swal({\n                        title: '¡Correcto!',\n                        html: 'Comprobante de Fondo Fijo actualizado correctamente',\n                        type: 'success',\n                        confirmButtonText: \"Ok\",\n                        closeOnConfirm: false\n                    }).catch(swal.noop);\n                    window.location = self.url_comprobante_fondo_fijo_show;\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        }\n\n    }\n});\n\n},{}],32:[function(require,module,exports){\n'use strict';\n\nVue.component('subcontratos-estimacion', {\n    props: ['subcontratos_url', 'estimaciones_url'],\n    data: function data() {\n        return {\n            'form': {\n                id_empresa: '',\n                id_subcontrato: '',\n                id_estimacion: ''\n            },\n            'empresas': [],\n            'subcontratos': [],\n            'estimaciones': [],\n            'cargando': false\n        };\n    },\n\n    methods: {\n        fetchSubcontratos: function fetchSubcontratos(id_empresa) {\n            var self = this;\n\n            $.ajax({\n                type: 'GET',\n                data: {\n                    attribute: 'id_empresa',\n                    operator: '=',\n                    value: id_empresa\n                },\n                url: self.subcontratos_url + '/getBy',\n                beforeSend: function beforeSend() {\n                    self.cargando = true;\n                },\n                success: function success(response) {\n                    self.subcontratos = response.data.subcontratos;\n                    self.estimaciones = [];\n\n                    Vue.set(self.form, 'id_subcontrato', '');\n                    Vue.set(self.form, 'id_estimacion', '');\n                },\n                complete: function complete() {\n                    self.cargando = false;\n                }\n            });\n        },\n\n        fetchEstimaciones: function fetchEstimaciones(id_subcontrato) {\n            var self = this;\n\n            $.ajax({\n                type: 'GET',\n                data: {\n                    attribute: 'id_antecedente',\n                    operator: '=',\n                    value: id_subcontrato\n                },\n                url: self.estimaciones_url + '/getBy',\n                beforeSend: function beforeSend() {\n                    self.cargando = true;\n                },\n                success: function success(response) {\n                    self.estimaciones = response.data.estimaciones;\n                    Vue.set(self.form, 'id_estimacion', '');\n                },\n                complete: function complete() {\n                    self.cargando = false;\n                }\n            });\n        },\n\n        pdf: function pdf(id_estimacion) {\n            var url = App.host + '/reportes/subcontratos/estimacion/' + id_estimacion;\n            $(\"#PDFModal .modal-body\").html('<iframe src=\"' + url + '\"  frameborder=\"0\" height=\"100%\" width=\"99.6%\">d</iframe>');\n            $(\"#PDFModal\").modal(\"show\");\n        }\n    }\n});\n\n},{}],33:[function(require,module,exports){\n'use strict';\n\nVue.component('movimientos_bancarios-index', {\n    props: ['url_movimientos_bancarios_index', 'cuentas', 'tipos', 'movimientos'],\n    data: function data() {\n        return {\n            'data': {\n                'cuentas': this.cuentas,\n                'tipos': this.tipos,\n                'movimientos': this.movimientos,\n                'ver': []\n            },\n            'form': {\n                'id_tipo_movimiento': '',\n                'estatus': '',\n                'id_cuenta': '',\n                'impuesto': '0',\n                'importe': '',\n                'observaciones': '',\n                'fecha': moment().format('YYYY-MM-DD'),\n                'cumplimiento': '',\n                'vencimiento': '',\n                'referencia': ''\n            },\n            'movimiento_edit': {\n                'id_movimiento_bancario': '',\n                'id_tipo_movimiento': '',\n                'estatus': '',\n                'id_cuenta': '',\n                'impuesto': 0,\n                'importe': 0,\n                'observaciones': '',\n                'fecha': '',\n                'cumplimiento': '',\n                'vencimiento': '',\n                'referencia': ''\n            },\n            'movimiento_ver': {\n                'id_movimiento_bancario': '',\n                'id_tipo_movimiento': '',\n                'estatus': '',\n                'id_cuenta': '',\n                'impuesto': 0,\n                'importe': 0,\n                'observaciones': '',\n                'fecha': '',\n                'cumplimiento': '',\n                'vencimiento': '',\n                'referencia': ''\n            },\n            'guardando': false\n        };\n    },\n    computed: {},\n    mounted: function mounted() {\n        var self = this;\n\n        $(\"#Cumplimiento\").datepicker().on(\"changeDate\", function () {\n            Vue.set(self.form, 'vencimiento', $('#Cumplimiento').val());\n            Vue.set(self.form, 'cumplimiento', $('#Cumplimiento').val());\n        });\n        $(\"#edit_cumplimiento\").datepicker().on(\"changeDate\", function () {\n            Vue.set(self.movimiento_edit, 'vencimiento', $('#edit_cumplimiento').val());\n            Vue.set(self.movimiento_edit, 'cumplimiento', $('#edit_cumplimiento').val());\n        });\n        $(\"#Fecha\").datepicker().on(\"changeDate\", function () {\n            var thisElement = $(this);\n\n            Vue.set(self.form, 'fecha', thisElement.val());\n            thisElement.datepicker('hide');\n            thisElement.blur();\n            self.$validator.validate('required', self.form.fecha);\n        });\n        $(\".fechas_edit\").datepicker().on(\"changeDate\", function () {\n            var thisElement = $(this);\n            var id = thisElement.attr('id').replace('edit_', '');\n\n            Vue.set(self.traspaso_edit, id, thisElement.val());\n        });\n    },\n    directives: {\n        datepicker: {\n            inserted: function inserted(el) {\n                $(el).datepicker({\n                    autoclose: true,\n                    language: 'es',\n                    todayHighlight: true,\n                    clearBtn: true,\n                    format: 'yyyy-mm-dd'\n                });\n            }\n        }\n    },\n    methods: {\n        datos_cuenta: function datos_cuenta(id) {\n            return this.cuentas[id];\n        },\n        modal_movimiento_ver: function modal_movimiento_ver(item) {\n            Vue.set(this.data, 'ver', item);\n            Vue.set(this.data.ver, 'tipo_texto', item.tipo.descripcion);\n            Vue.set(this.data.ver, 'importe', this.comma_format(item.importe));\n            Vue.set(this.data.ver, 'impuesto', this.comma_format(item.impuesto));\n            Vue.set(this.data.ver, 'cuenta_texto', item.cuenta.numero + ' ' + item.cuenta.abreviatura + ' (' + item.cuenta.empresa.razon_social + ')');\n            Vue.set(this.data.ver, 'referencia', item.movimiento_transaccion.transaccion.referencia);\n            Vue.set(this.data.ver, 'cumplimiento', this.trim_fecha(item.movimiento_transaccion.transaccion.cumplimiento));\n            Vue.set(this.data.ver, 'vencimiento', this.trim_fecha(item.movimiento_transaccion.transaccion.vencimiento));\n\n            $('#ver_movimiento_modal').modal('show');\n        },\n        close_modal_movimiento_ver: function close_modal_movimiento_ver() {\n\n            $('#ver_movimiento_modal').modal('hide');\n            Vue.set(this.data, 'ver', {});\n        },\n        confirm_guardar: function confirm_guardar() {\n            var self = this;\n            swal({\n                title: \"Guardar movimiento\",\n                text: \"¿Estás seguro/a de que la información es correcta?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.guardar();\n            }).catch(swal.noop);\n        },\n        guardar: function guardar() {\n            var self = this;\n\n            $.ajax({\n                type: 'POST',\n                url: self.url_movimientos_bancarios_index,\n                data: self.form,\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n                    if (typeof data.data.movimiento === 'string') {\n                        swal({\n                            type: 'warning',\n                            title: 'Error',\n                            html: data.data.movimiento\n                        });\n                    } else {\n                        self.data.movimientos.push(data.data.movimiento);\n                        swal({\n                            type: 'success',\n                            title: 'Correcto',\n                            html: 'Movimiento guardado correctamente'\n                        });\n                    }\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                    self.close_modal_movimiento();\n                }\n            });\n        },\n        modal_movimiento: function modal_movimiento() {\n            $('#movimiento_modal').modal('show');\n            $('#id_tipo_movimiento').focus();\n        },\n        close_modal_movimiento: function close_modal_movimiento() {\n            this.reset_form();\n            $('#movimiento_modal').modal('hide');\n        },\n        confirm_eliminar: function confirm_eliminar(id_movimiento_bancario) {\n            var self = this;\n            swal({\n                title: \"Eliminar movimiento\",\n                text: \"¿Estás seguro/a de que deseas eliminar este movimiento?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.eliminar(id_movimiento_bancario);\n            }).catch(swal.noop);\n        },\n        eliminar: function eliminar(id_movimiento_bancario) {\n            var self = this;\n            $.ajax({\n                type: 'GET',\n                url: self.url_movimientos_bancarios_index + '/' + id_movimiento_bancario,\n                beforeSend: function beforeSend() {},\n                success: function success(data, textStatus, xhr) {\n                    self.data.movimientos.forEach(function (movimiento) {\n                        if (movimiento.id_movimiento_bancario == data.data.id_movimiento_bancario) {\n                            self.data.movimientos.splice(self.data.movimientos.indexOf(movimiento), 1);\n                        }\n                    });\n\n                    swal({\n                        type: 'success',\n                        title: 'Correcto',\n                        html: 'Movimiento eliminado'\n                    });\n                },\n                complete: function complete() {}\n            });\n        },\n        modal_editar: function modal_editar(movimiento) {\n            Vue.set(this.movimiento_edit, 'id_movimiento_bancario', movimiento.id_movimiento_bancario);\n            Vue.set(this.movimiento_edit, 'id_tipo_movimiento', movimiento.id_tipo_movimiento);\n            Vue.set(this.movimiento_edit, 'estatus', movimiento.estatus);\n            Vue.set(this.movimiento_edit, 'id_cuenta', movimiento.id_cuenta);\n            Vue.set(this.movimiento_edit, 'impuesto', movimiento.impuesto);\n            Vue.set(this.movimiento_edit, 'importe', movimiento.importe);\n            Vue.set(this.movimiento_edit, 'observaciones', movimiento.observaciones);\n            Vue.set(this.movimiento_edit, 'fecha', this.trim_fecha(movimiento.movimiento_transaccion.transaccion.fecha));\n            Vue.set(this.movimiento_edit, 'cumplimiento', this.trim_fecha(movimiento.movimiento_transaccion.transaccion.cumplimiento));\n            Vue.set(this.movimiento_edit, 'vencimiento', this.trim_fecha(movimiento.movimiento_transaccion.transaccion.vencimiento));\n            Vue.set(this.movimiento_edit, 'referencia', movimiento.movimiento_transaccion.transaccion.referencia);\n\n            this.validation_errors.clear('form_editar_movimiento');\n            $('#edit_movimiento_modal').modal('show');\n            $('#edit_id_cuenta').focus();\n        },\n        confirm_editar: function confirm_editar() {\n            var self = this;\n            swal({\n                title: \"Editar movimiento\",\n                text: \"¿Estás seguro/a de que la información es correcta?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.editar();\n            }).catch(swal.noop);\n        },\n        editar: function editar() {\n            var self = this;\n\n            self.movimiento_edit._method = 'PATCH';\n            $.ajax({\n                type: 'POST',\n                url: self.url_movimientos_bancarios_index + '/' + self.movimiento_edit.id_movimiento_bancario,\n                data: self.movimiento_edit,\n                beforeSend: function beforeSend() {},\n                success: function success(data, textStatus, xhr) {\n                    if (typeof data.data.movimiento === 'string') {\n                        swal({\n                            type: 'warning',\n                            title: 'Error',\n                            html: data.data.movimiento\n                        });\n                    } else {\n                        self.data.movimientos.forEach(function (movimiento) {\n                            if (movimiento.id_movimiento_bancario === data.data.movimiento.id_movimiento_bancario) {\n                                Vue.set(self.data.movimientos, self.data.movimientos.indexOf(movimiento), data.data.movimiento);\n                            }\n                        });\n                        swal({\n                            type: 'success',\n                            title: 'Correcto',\n                            html: 'movimiento guardado correctamente'\n                        });\n                    }\n\n                    self.close_edit_movimiento();\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        },\n        close_edit_movimiento: function close_edit_movimiento() {\n            $('#edit_movimiento_modal').modal('hide');\n        },\n        validateForm: function validateForm(scope, funcion) {\n            self = this;\n            this.$validator.validateAll(scope).then(function () {\n                if (funcion === 'confirm_guardar') {\n                    self.confirm_guardar();\n                } else if (funcion === 'confirm_editar') {\n                    self.confirm_editar();\n                }\n            }).catch(function () {\n                swal({\n                    type: 'warning',\n                    title: 'Advertencia',\n                    text: 'Por favor corrija los errores del formulario'\n                });\n            });\n        },\n        trim_fecha: function trim_fecha(fecha) {\n            return fecha.substring(0, 10);\n        },\n        reset_form: function reset_form() {\n            Vue.set(this.form, 'id_tipo_movimiento', '');\n            Vue.set(this.form, 'estatus', '');\n            Vue.set(this.form, 'id_cuenta', '');\n            Vue.set(this.form, 'impuesto', '');\n            Vue.set(this.form, 'observaciones', '');\n            Vue.set(this.form, 'importe', '');\n            Vue.set(this.form, 'fecha', '');\n            Vue.set(this.form, 'cumplimiento', '');\n            Vue.set(this.form, 'vencimiento', '');\n            Vue.set(this.form, 'referencia', '');\n        },\n        total_edit: function total_edit() {\n            var importe = this.movimiento_edit.importe == null ? 0 : this.movimiento_edit.importe,\n                impuesto = this.movimiento_edit.impuesto == null ? 0 : this.movimiento_edit.impuesto;\n\n            return impuesto > 0 ? parseFloat(importe) + parseFloat(impuesto) : importe;\n        },\n        total_create: function total_create() {\n            var importe = this.form.importe == null ? 0 : this.form.importe,\n                impuesto = this.form.impuesto == null ? 0 : this.form.impuesto;\n\n            return impuesto > 0 ? parseFloat(importe) + parseFloat(impuesto) : importe;\n        },\n        total: function total(importe, impuesto) {\n            var importe = importe == null ? 0 : importe,\n                impuesto = impuesto == null ? 0 : impuesto;\n\n            return impuesto > 0 ? parseFloat(importe) + parseFloat(impuesto) : importe;\n        },\n        comma_format: function comma_format(number) {\n            var n = !isFinite(+number) ? 0 : +number,\n                decimals = 4,\n                prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\n                sep = typeof thousands_sep === 'undefined' ? ',' : thousands_sep,\n                dec = typeof dec_point === 'undefined' ? '.' : dec_point,\n                toFixedFix = function toFixedFix(n, prec) {\n                // Fix for IE parseFloat(0.55).toFixed(0) = 0;\n                var k = Math.pow(10, prec);\n                return Math.round(n * k) / k;\n            },\n                s = (prec ? toFixedFix(n, prec) : Math.round(n)).toString().split('.');\n            if (s[0].length > 3) {\n                s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\n            }\n            if ((s[1] || '').length < prec) {\n                s[1] = s[1] || '';\n                s[1] += new Array(prec - s[1].length + 1).join('0');\n            }\n            return s.join(dec);\n        }\n    }\n});\n\n},{}],34:[function(require,module,exports){\n'use strict';\n\nVue.component('traspaso-cuentas-index', {\n    props: ['url_traspaso_cuentas_index', 'cuentas', 'traspasos', 'monedas'],\n    data: function data() {\n        return {\n            'data': {\n                'traspasos': this.traspasos,\n                'cuentas': this.cuentas,\n                'monedas': this.monedas,\n                'ver': []\n            },\n            'form': {\n                'id_cuenta_origen': '',\n                'id_cuenta_destino': '',\n                'observaciones': '',\n                'importe': '',\n                'fecha': moment().format('YYYY-MM-DD'),\n                'cumplimiento': '',\n                'vencimiento': '',\n                'referencia': ''\n            },\n            'traspaso_edit': {\n                'id_traspaso': '',\n                'id_cuenta_origen': '',\n                'id_cuenta_destino': '',\n                'observaciones': '',\n                'importe': '',\n                'fecha': '',\n                'cumplimiento': '',\n                'vencimiento': '',\n                'referencia': ''\n            },\n            'guardando': false\n        };\n    },\n    computed: {\n        cuentas_disponibles: function cuentas_disponibles() {\n            var self = this;\n            return this.cuentas.filter(function (cuenta) {\n                return cuenta.id_cuenta != self.form.id_cuenta_origen;\n            });\n        }\n    },\n    mounted: function mounted() {\n        var self = this;\n\n        $(\"#cumplimiento\").datepicker().on(\"changeDate\", function () {\n            Vue.set(self.form, 'vencimiento', $('#cumplimiento').val());\n            Vue.set(self.form, 'cumplimiento', $('#cumplimiento').val());\n        });\n        $(\"#Fecha\").datepicker().on(\"changeDate\", function () {\n            var thisElement = $(this);\n\n            Vue.set(self.form, 'fecha', thisElement.val());\n            thisElement.datepicker('hide');\n            thisElement.blur();\n            self.$validator.validate('required', self.form.fecha);\n        });\n        $(\".fechas_edit\").datepicker().on(\"changeDate\", function () {\n            var thisElement = $(this);\n            var id = thisElement.attr('id').replace('edit_', '');\n\n            Vue.set(self.traspaso_edit, id, thisElement.val());\n        });\n    },\n    directives: {\n        datepicker: {\n            inserted: function inserted(el) {\n                $(el).datepicker({\n                    autoclose: true,\n                    language: 'es',\n                    todayHighlight: true,\n                    clearBtn: true,\n                    format: 'yyyy-mm-dd'\n                });\n            }\n        }\n    },\n    methods: {\n        datos_cuenta: function datos_cuenta(id) {\n            return this.cuentas[id];\n        },\n        confirm_guardar: function confirm_guardar() {\n            var self = this;\n            swal({\n                title: \"Guardar traspaso\",\n                text: \"¿Estás seguro/a de que la información es correcta?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.guardar();\n            }).catch(swal.noop);\n        },\n        guardar: function guardar() {\n            var self = this;\n\n            $.ajax({\n                type: 'POST',\n                url: self.url_traspaso_cuentas_index,\n                data: self.form,\n                beforeSend: function beforeSend() {\n                    self.guardando = true;\n                },\n                success: function success(data, textStatus, xhr) {\n\n                    // Si data.traspaso es un string hubo un error al guardar el traspaso\n                    if (typeof data.data.traspaso === 'string') {\n                        swal({\n                            type: 'warning',\n                            title: 'Error',\n                            html: data.data.traspaso\n                        });\n                    } else {\n                        self.data.traspasos.push(data.data.traspaso);\n                        swal({\n                            type: 'success',\n                            title: 'Correcto',\n                            html: 'Traspaso guardado correctamente'\n                        });\n                    }\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                    self.close_traspaso();\n                }\n            });\n        },\n        confirm_eliminar: function confirm_eliminar(id_traspaso) {\n            var self = this;\n            swal({\n                title: \"Eliminar traspaso\",\n                text: \"¿Estás seguro/a de que deseas eliminar este traspaso?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.eliminar(id_traspaso);\n            }).catch(swal.noop);\n        },\n        eliminar: function eliminar(id_traspaso) {\n            var self = this;\n            $.ajax({\n                type: 'GET',\n                url: self.url_traspaso_cuentas_index + '/' + id_traspaso,\n                beforeSend: function beforeSend() {},\n                success: function success(data, textStatus, xhr) {\n                    self.data.traspasos.forEach(function (traspaso) {\n                        if (traspaso.id_traspaso === id_traspaso) {\n                            self.data.traspasos.splice(self.data.traspasos.indexOf(traspaso), 1);\n                        }\n                    });\n\n                    swal({\n                        type: 'success',\n                        title: 'Correcto',\n                        html: 'Traspaso eliminado'\n                    });\n                },\n                complete: function complete() {}\n            });\n        },\n        modal_ver_traspaso: function modal_ver_traspaso(item) {\n            Vue.set(this.data, 'ver', item);\n            Vue.set(this.data.ver, 'fecha', this.trim_fecha(item.traspaso_transaccion.transaccion_debito.fecha));\n            Vue.set(this.data.ver, 'importe', this.comma_format(item.importe));\n            Vue.set(this.data.ver, 'cumplimiento', this.trim_fecha(item.traspaso_transaccion.transaccion_debito.cumplimiento));\n            Vue.set(this.data.ver, 'vencimiento', this.trim_fecha(item.traspaso_transaccion.transaccion_debito.vencimiento));\n            Vue.set(this.data.ver, 'referencia', item.traspaso_transaccion.transaccion_debito.referencia);\n            Vue.set(this.data.ver, 'cuenta_origen_texto', item.cuenta_origen.numero + ' ' + item.cuenta_origen.abreviatura + ' (' + item.cuenta_origen.empresa.razon_social + ')');\n            Vue.set(this.data.ver, 'cuenta_destino_texto', item.cuenta_destino.numero + ' ' + item.cuenta_destino.abreviatura + ' (' + item.cuenta_destino.empresa.razon_social + ')');\n\n            $('#ver_traspaso_modal').modal('show');\n        },\n        close_modal_ver_traspaso: function close_modal_ver_traspaso() {\n            $('#ver_traspaso_modal').modal('hide');\n            Vue.set(this.data, 'ver', []);\n        },\n        modal_traspaso: function modal_traspaso() {\n            this.validation_errors.clear('form_guardar_traspaso');\n            this.$validator.clean();\n            $('#traspaso_modal').modal('show');\n            $('#id_cuenta_origen').focus();\n        },\n        close_traspaso: function close_traspaso() {\n            this.reset_form();\n            $('#traspaso_modal').modal('hide');\n        },\n        modal_editar: function modal_editar(traspaso) {\n\n            Vue.set(this.traspaso_edit, 'id_traspaso', traspaso.id_traspaso);\n            Vue.set(this.traspaso_edit, 'id_cuenta_origen', traspaso.id_cuenta_origen);\n            Vue.set(this.traspaso_edit, 'id_cuenta_destino', traspaso.id_cuenta_destino);\n            Vue.set(this.traspaso_edit, 'observaciones', traspaso.observaciones);\n            Vue.set(this.traspaso_edit, 'importe', traspaso.importe);\n            Vue.set(this.traspaso_edit, 'fecha', this.trim_fecha(traspaso.traspaso_transaccion.transaccion_debito.fecha));\n            Vue.set(this.traspaso_edit, 'cumplimiento', this.trim_fecha(traspaso.traspaso_transaccion.transaccion_debito.cumplimiento));\n            Vue.set(this.traspaso_edit, 'vencimiento', this.trim_fecha(traspaso.traspaso_transaccion.transaccion_debito.vencimiento));\n            Vue.set(this.traspaso_edit, 'referencia', traspaso.traspaso_transaccion.transaccion_debito.referencia);\n\n            this.validation_errors.clear('form_editar_traspaso');\n            $('#edit_traspaso_modal').modal('show');\n            $('#edit_id_cuenta_origen').focus();\n        },\n        confirm_editar: function confirm_editar() {\n            var self = this;\n            swal({\n                title: \"Editar traspaso\",\n                text: \"¿Estás seguro/a de que la información es correcta?\",\n                type: \"warning\",\n                showCancelButton: true,\n                confirmButtonText: \"Si, Continuar\",\n                cancelButtonText: \"No, Cancelar\"\n            }).then(function () {\n                self.editar();\n            }).catch(swal.noop);\n        },\n        editar: function editar() {\n            var self = this;\n\n            self.traspaso_edit._method = 'PATCH';\n            $.ajax({\n                type: 'POST',\n                url: self.url_traspaso_cuentas_index + '/' + self.traspaso_edit.id_traspaso,\n                data: self.traspaso_edit,\n                beforeSend: function beforeSend() {},\n                success: function success(data, textStatus, xhr) {\n\n                    self.data.traspasos.forEach(function (traspaso) {\n                        if (traspaso.id_traspaso === data.data.traspaso.id_traspaso) {\n                            Vue.set(self.data.traspasos, self.data.traspasos.indexOf(traspaso), data.data.traspaso);\n                        }\n                    });\n                    swal({\n                        type: 'success',\n                        title: 'Correcto',\n                        html: 'Traspaso guardado correctamente'\n                    });\n\n                    self.close_edit_traspaso();\n                },\n                complete: function complete() {\n                    self.guardando = false;\n                }\n            });\n        },\n        close_edit_traspaso: function close_edit_traspaso() {\n            $('#edit_traspaso_modal').modal('hide');\n        },\n        validateForm: function validateForm(scope, funcion) {\n            self = this;\n            this.$validator.validateAll(scope).then(function () {\n                if (funcion === 'confirm_guardar') {\n                    self.confirm_guardar();\n                } else if (funcion === 'confirm_editar') {\n                    self.confirm_editar();\n                }\n            }).catch(function () {\n                swal({\n                    type: 'warning',\n                    title: 'Advertencia',\n                    text: 'Por favor corrija los errores del formulario'\n                });\n            });\n        },\n        trim_fecha: function trim_fecha(fecha) {\n            return fecha.substring(0, 10);\n        },\n        reset_form: function reset_form() {\n            Vue.set(this.form, 'id_traspaso', '');\n            Vue.set(this.form, 'id_cuenta_origen', '');\n            Vue.set(this.form, 'id_cuenta_destino', '');\n            Vue.set(this.form, 'observaciones', '');\n            Vue.set(this.form, 'importe', '');\n            Vue.set(this.form, 'fecha', '');\n            Vue.set(this.form, 'cumplimiento', '');\n            Vue.set(this.form, 'vencimiento', '');\n            Vue.set(this.form, 'referencia', '');\n        },\n        comma_format: function comma_format(number) {\n            var n = !isFinite(+number) ? 0 : +number,\n                decimals = 4,\n                prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\n                sep = typeof thousands_sep === 'undefined' ? ',' : thousands_sep,\n                dec = typeof dec_point === 'undefined' ? '.' : dec_point,\n                toFixedFix = function toFixedFix(n, prec) {\n                // Fix for IE parseFloat(0.55).toFixed(0) = 0;\n                var k = Math.pow(10, prec);\n                return Math.round(n * k) / k;\n            },\n                s = (prec ? toFixedFix(n, prec) : Math.round(n)).toString().split('.');\n            if (s[0].length > 3) {\n                s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\n            }\n            if ((s[1] || '').length < prec) {\n                s[1] = s[1] || '';\n                s[1] += new Array(prec - s[1].length + 1).join('0');\n            }\n            return s.join(dec);\n        }\n    }\n});\n\n},{}],35:[function(require,module,exports){\n'use strict';\n\nVue.component('app-errors', {\n    props: ['form'],\n\n    template: require('./templates/errors.html')\n});\n\n},{\"./templates/errors.html\":39}],36:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nVue.component('global-errors', {\n\n  data: function data() {\n    return {\n      errors: []\n    };\n  },\n\n  template: require('./templates/global-errors.html'),\n\n  events: {\n    displayGlobalErrors: function displayGlobalErrors(errors) {\n      if ((typeof errors === 'undefined' ? 'undefined' : _typeof(errors)) === 'object') {\n        this.errors = _.flatten(_.toArray(errors));\n      } else {\n        this.errors.push('Un error grave ocurrio. Por favor intente otra vez.');\n      }\n    }\n  }\n});\n\n},{\"./templates/global-errors.html\":40}],37:[function(require,module,exports){\n'use strict';\n\nVue.component('kardex-material-index', {\n    props: ['materiales'],\n    data: function data() {\n        return {\n            'data': {\n                'items': [],\n                'materiales': ''\n            },\n            'form': {\n                'material': {\n                    'id_material': '',\n                    'nivel': '',\n                    'descripcion': '',\n                    'unidad': '',\n                    'n_padre': '',\n                    'd_padre': '',\n                    'usuario_registro': ''\n                },\n                'totales': {\n                    'entrada_material': '',\n                    'entrada_valor': '',\n                    'salida_material': '',\n                    'salida_valor': '',\n                    'existencia': ''\n                }\n            },\n            valor: -1,\n            'cargando': false\n        };\n    },\n    directives: {\n        select2: {\n\n            inserted: function inserted(el) {\n\n                $(el).select2({\n                    width: '100%',\n                    ajax: {\n                        url: App.host + '/sistema_contable/kardex_material/getBy',\n                        dataType: 'json',\n                        delay: 500,\n                        data: function data(params) {\n                            return {\n                                attribute: 'descripcion',\n                                operator: 'like',\n                                value: '%' + params.term + '%'\n                            };\n                        },\n\n                        processResults: function processResults(data) {\n\n                            return {\n\n                                results: $.map(data.data.materiales, function (item) {\n                                    return {\n                                        text: item.descripcion,\n                                        id: item.id_material\n                                    };\n                                })\n                            };\n                        },\n                        error: function error(_error) {},\n                        cache: true\n                    },\n                    escapeMarkup: function escapeMarkup(markup) {\n                        return markup;\n                    }, // let our custom formatter work\n                    minimumInputLength: 1\n                }).on('select2:select', function () {\n                    $('#material_select').val($('#material_select option:selected').data().data.id);\n                });\n            }\n        }\n    },\n    methods: {\n\n        datos: function datos() {\n            var self = this;\n            var material = self.valor;\n            var url = App.host + '/sistema_contable/kardex_material/';\n            var ematerial = 0;\n            var evalor = 0;\n            var smaterial = 0;\n            var svalor = 0;\n            // Consulta de datos de kardex por material\n            if (self.valor >= 0) {\n                url = url + material;\n                $.ajax({\n                    type: 'GET',\n                    url: url,\n                    beforeSend: function beforeSend() {\n                        self.cargando = true;\n                    },\n                    success: function success(response) {\n\n                        material = response.data.material;\n                        // Asignación de datos para vista de detalle\n                        self.form.material.id_material = material.id_material;\n                        self.form.material.nivel = material.nivel;\n                        self.form.material.n_padre = self.form.material.nivel.substr(0, 4);\n                        self.form.material.descripcion = material.descripcion;\n                        self.form.material.unidad = material.unidad;\n                        self.form.material.d_padre = response.data.padre.descripcion;\n                        self.form.material.usuario_registro = material.UsuarioRegistro;\n\n                        self.data.items = response.data.items;\n\n                        response.data.items.forEach(function (item) {\n                            if (item.transaccion.tipo_transaccion == 33) {\n                                ematerial += parseFloat(item.cantidad);\n                                evalor += parseFloat(item.precio_unitario);\n                            }\n                            if (item.transaccion.tipo_transaccion == 34) {\n                                smaterial += parseFloat(item.cantidad);\n                                svalor += parseFloat(item.precio_unitario);\n                            }\n                        });\n                        // Asignacion de valores totales de Transacciones\n                        self.form.totales.entrada_material = ematerial;\n                        self.form.totales.entrada_valor = evalor;\n                        self.form.totales.salida_material = smaterial;\n                        self.form.totales.salida_valor = svalor;\n                        self.form.totales.existencia = ematerial - smaterial;\n                    },\n                    complete: function complete() {\n                        self.cargando = false;\n                    }\n                });\n            } else {\n                self.form.material.id_material = '';\n                self.form.material.nivel = '';\n                self.form.material.n_padre = '';\n                self.form.material.descripcion = '';\n                self.form.material.unidad = '';\n                self.form.material.d_padre = '';\n                self.form.totales.existencia = '';\n                self.form.totales.entrada_material = '';\n                self.form.totales.entrada_valor = '';\n                self.form.totales.salida_material = '';\n                self.form.totales.salida_valor = '';\n                self.form.totales.existencia = '';\n            }\n        }\n    }\n\n});\n\n},{}],38:[function(require,module,exports){\n'use strict';\n\nVue.component('select2', {\n    props: ['options', 'value', 'name'],\n    template: '<select><slot></slot></select>',\n    mounted: function mounted() {\n        var vm = this;\n        var data = [];\n\n        $.each(this.options, function (id, text) {\n            data.push({ id: id, text: text });\n        });\n\n        function SortByName(a, b) {\n            var aName = a.text.toLowerCase();\n            var bName = b.text.toLowerCase();\n            return aName < bName ? -1 : aName > bName ? 1 : 0;\n        }\n\n        data = data.sort(SortByName);\n        $(this.$el).attr('name', this.name);\n        $(this.$el).select2({\n            data: data,\n            width: '100%'\n        }).val(this.value).trigger('change')\n        // emit event on change.\n        .on('change', function () {\n            vm.$emit('input', this.value);\n        });\n    },\n    watch: {\n        value: function value(_value) {\n            // update value\n            $(this.$el).val(_value).trigger('change');\n        },\n        options: function options(_options) {\n            // update options\n            $(this.$el).select2({\n                data: _options,\n                width: '100%'\n            });\n        }\n    },\n    destroyed: function destroyed() {\n        $(this.$el).off().select2('destroy');\n    }\n});\n\n},{}],39:[function(require,module,exports){\nmodule.exports = '<div id=\"form-errors\" v-cloak>\\n  <div class=\"alert alert-danger\" v-if=\"form.errors.length\">\\n    <ul>\\n      <li v-for=\"error in form.errors\">{{ error }}</li>\\n    </ul>\\n  </div>\\n</div>';\n},{}],40:[function(require,module,exports){\nmodule.exports = '<div class=\"alert alert-danger\" v-show=\"errors.length\">\\n  <ul>\\n    <li v-for=\"error in errors\">{{ error }}</li>\\n  </ul>\\n</div>';\n},{}]},{},[4]);\n"],"file":"app-vue.js"}